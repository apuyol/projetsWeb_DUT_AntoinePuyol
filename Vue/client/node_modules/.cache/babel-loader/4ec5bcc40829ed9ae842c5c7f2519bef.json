{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.math.log2.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport _debounce from './debounce.min.js';\nimport TapDetector from './TapDetector';\nexport default {\n  props: {\n    minScale: {\n      type: Number,\n      \"default\": 1\n    },\n    maxScale: {\n      type: Number,\n      \"default\": 5\n    },\n    zoomed: {\n      type: Boolean,\n      \"default\": false\n    },\n    resetTrigger: {\n      type: Number,\n      \"default\": 1e5\n    },\n    aspectRatio: {\n      type: Number,\n      \"default\": 1\n    },\n    backgroundColor: {\n      type: String,\n      \"default\": 'transparent'\n    },\n    pivot: {\n      type: String,\n      \"default\": 'cursor'\n    },\n    // other options: image-center\n    zoomingElastic: {\n      type: Boolean,\n      \"default\": true\n    },\n    limitTranslation: {\n      type: Boolean,\n      \"default\": true\n    },\n    doubleClickToZoom: {\n      type: Boolean,\n      \"default\": true\n    },\n    mouseWheelToZoom: {\n      type: Boolean,\n      \"default\": true\n    }\n  },\n  data: function data() {\n    return {\n      // Container sizes, used to determin the initial zoomer size.\n      // Need to reactive to window resizing.\n      containerWidth: 1,\n      containerHeight: 1,\n      containerLeft: 0,\n      containerTop: 0,\n      // Store values: Interactions will at last change these values.\n      // After rotation or resize, these values will keep still.\n      // These three values are all relative to the container size.\n      translateX: 0,\n      animTranslateX: 0,\n      translateY: 0,\n      animTranslateY: 0,\n      scale: 1,\n      animScale: 1,\n      // Mouse states\n      lastFullWheelTime: 0,\n      lastWheelTime: 0,\n      lastWheelDirection: 'y',\n      isPointerDown: false,\n      pointerPosX: -1,\n      pointerPosY: -1,\n      twoFingerInitDist: 0,\n      panLocked: true,\n      // Others\n      raf: null,\n      tapDetector: null\n    };\n  },\n  computed: {\n    wrapperStyle: function wrapperStyle() {\n      var translateX = this.containerWidth * this.animTranslateX;\n      var translateY = this.containerHeight * this.animTranslateY;\n      return {\n        transform: [\"translate(\".concat(translateX, \"px, \").concat(translateY, \"px)\"), \"scale(\".concat(this.animScale, \")\")].join(' ')\n      };\n    }\n  },\n  watch: {\n    scale: function scale(val) {\n      if (val !== 1) {\n        this.$emit('update:zoomed', true);\n        this.panLocked = false;\n      }\n    },\n    resetTrigger: 'reset'\n  },\n  mounted: function mounted() {\n    this.tapDetector = new TapDetector();\n    this.tapDetector.attach(this.$refs.root);\n\n    if (this.doubleClickToZoom) {\n      this.tapDetector.onDoubleTap(this.onDoubleTap);\n    } // console.log('container size: ', this.containerWidth, this.containerHeight)\n\n\n    window.addEventListener('resize', this.onWindowResize);\n    this.onWindowResize();\n    this.refreshContainerPos();\n    this.loop();\n  },\n  beforeUnmount: function beforeUnmount() {\n    this.tapDetector.detach(this.$refs.root);\n    window.removeEventListener('resize', this.onWindowResize);\n    window.cancelAnimationFrame(this.raf); // console.log('destroy')\n  },\n  methods: {\n    // API ---------------------------------------------------------------------\n    reset: function reset() {\n      this.scale = 1;\n      this.panLocked = true;\n      this.translateX = 0;\n      this.translateY = 0;\n    },\n    zoomIn: function zoomIn() {\n      var scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n      this.tryToScale(scale);\n      this.onInteractionEnd();\n    },\n    zoomOut: function zoomOut() {\n      var scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.5;\n      this.tryToScale(scale);\n      this.onInteractionEnd();\n    },\n    // Main Logic --------------------------------------------------------------\n    // scale\n    // Zoom the image with the point at the pointer(mouse or pinch center) pinned.\n    // Simplify: This can be regard as vector pointer to old-image-center scaling.\n    tryToScale: function tryToScale(scaleDelta) {\n      var newScale = this.scale * scaleDelta;\n\n      if (this.zoomingElastic) {\n        // damping\n        if (newScale < this.minScale || newScale > this.maxScale) {\n          var log = Math.log2(scaleDelta);\n          log *= 0.2;\n          scaleDelta = Math.pow(2, log);\n          newScale = this.scale * scaleDelta;\n        }\n      } else {\n        if (newScale < this.minScale) newScale = this.minScale;else if (newScale > this.maxScale) newScale = this.maxScale;\n      }\n\n      scaleDelta = newScale / this.scale;\n      this.scale = newScale;\n\n      if (this.pivot !== 'image-center') {\n        var normMousePosX = (this.pointerPosX - this.containerLeft) / this.containerWidth;\n        var normMousePosY = (this.pointerPosY - this.containerTop) / this.containerHeight;\n        this.translateX = (0.5 + this.translateX - normMousePosX) * scaleDelta + normMousePosX - 0.5;\n        this.translateY = (0.5 + this.translateY - normMousePosY) * scaleDelta + normMousePosY - 0.5;\n      }\n    },\n    setPointerPosCenter: function setPointerPosCenter() {\n      this.pointerPosX = this.containerLeft + this.containerWidth / 2;\n      this.pointerPosY = this.containerTop + this.containerHeight / 2;\n    },\n    // pan\n    onPointerMove: function onPointerMove(newMousePosX, newMousePosY) {\n      if (this.isPointerDown) {\n        var pixelDeltaX = newMousePosX - this.pointerPosX;\n        var pixelDeltaY = newMousePosY - this.pointerPosY; // console.log('pixelDeltaX, pixelDeltaY', pixelDeltaX, pixelDeltaY)\n\n        if (!this.panLocked) {\n          this.translateX += pixelDeltaX / this.containerWidth;\n          this.translateY += pixelDeltaY / this.containerHeight;\n        }\n      }\n\n      this.pointerPosX = newMousePosX;\n      this.pointerPosY = newMousePosY;\n    },\n    onInteractionEnd: _debounce(function () {\n      this.limit();\n      this.panLocked = this.scale === 1;\n      this.$emit('update:zoomed', !this.panLocked);\n    }, 100),\n    // limit the scale between max and min and the translate within the viewport\n    limit: function limit() {\n      // scale\n      if (this.scale < this.minScale) {\n        this.scale = this.minScale; // FIXME this sometimes will not reset when pinching in\n        // this.tryToScale(this.minScale / this.scale)\n      } else if (this.scale > this.maxScale) {\n        this.tryToScale(this.maxScale / this.scale);\n      } // translate\n\n\n      if (this.limitTranslation) {\n        var translateLimit = this.calcTranslateLimit();\n\n        if (Math.abs(this.translateX) > translateLimit.x) {\n          this.translateX *= translateLimit.x / Math.abs(this.translateX);\n        }\n\n        if (Math.abs(this.translateY) > translateLimit.y) {\n          this.translateY *= translateLimit.y / Math.abs(this.translateY);\n        }\n      }\n    },\n    calcTranslateLimit: function calcTranslateLimit() {\n      if (this.getMarginDirection() === 'y') {\n        var imageToContainerRatio = this.containerWidth / this.aspectRatio / this.containerHeight;\n        var translateLimitY = (this.scale * imageToContainerRatio - 1) / 2;\n        if (translateLimitY < 0) translateLimitY = 0;\n        return {\n          x: (this.scale - 1) / 2,\n          y: translateLimitY\n        };\n      } else {\n        var _imageToContainerRatio = this.containerHeight * this.aspectRatio / this.containerWidth;\n\n        var translateLimitX = (this.scale * _imageToContainerRatio - 1) / 2;\n        if (translateLimitX < 0) translateLimitX = 0;\n        return {\n          x: translateLimitX,\n          y: (this.scale - 1) / 2\n        };\n      }\n    },\n    getMarginDirection: function getMarginDirection() {\n      var containerRatio = this.containerWidth / this.containerHeight;\n      return containerRatio > this.aspectRatio ? 'x' : 'y';\n    },\n    onDoubleTap: function onDoubleTap(ev) {\n      if (this.scale === 1) {\n        if (ev.clientX > 0) {\n          this.pointerPosX = ev.clientX;\n          this.pointerPosY = ev.clientY;\n        }\n\n        this.tryToScale(Math.min(3, this.maxScale));\n      } else {\n        this.reset();\n      }\n\n      this.onInteractionEnd();\n    },\n    // reactive\n    onWindowResize: function onWindowResize() {\n      var styles = window.getComputedStyle(this.$refs.root);\n      this.containerWidth = parseFloat(styles.width);\n      this.containerHeight = parseFloat(styles.height);\n      this.setPointerPosCenter();\n      this.limit();\n    },\n    refreshContainerPos: function refreshContainerPos() {\n      var rect = this.$refs.root.getBoundingClientRect();\n      this.containerLeft = rect.left;\n      this.containerTop = rect.top;\n    },\n    loop: function loop() {\n      this.animScale = this.gainOn(this.animScale, this.scale);\n      this.animTranslateX = this.gainOn(this.animTranslateX, this.translateX);\n      this.animTranslateY = this.gainOn(this.animTranslateY, this.translateY);\n      this.raf = window.requestAnimationFrame(this.loop); // console.log('loop', this.raf)\n    },\n    gainOn: function gainOn(from, to) {\n      var delta = (to - from) * 0.3; // console.log('gainOn', from, to, from + delta)\n\n      if (Math.abs(delta) > 1e-5) {\n        return from + delta;\n      } else {\n        return to;\n      }\n    },\n    // Mouse Events ------------------------------------------------------------\n    // Mouse wheel scroll,  TrackPad pinch or TrackPad scroll\n    onMouseWheel: function onMouseWheel(ev) {\n      if (!this.mouseWheelToZoom) return; // prevent is used to stop the page scroll elastic effects\n\n      ev.preventDefault();\n      if (ev.detail) ev.wheelDelta = ev.detail * -10;\n      var currTime = Date.now();\n\n      if (Math.abs(ev.wheelDelta) === 120) {\n        // Throttle the TouchPad pinch on Mac, or it will be too sensitive\n        if (currTime - this.lastFullWheelTime > 50) {\n          this.onMouseWheelDo(ev.wheelDelta);\n          this.lastFullWheelTime = currTime;\n        }\n      } else {\n        if (currTime - this.lastWheelTime > 50 && typeof ev.deltaX === 'number') {\n          this.lastWheelDirection = ev.detail == 0 && Math.abs(ev.deltaX) > Math.abs(ev.deltaY) ? 'x' : 'y';\n\n          if (this.lastWheelDirection === 'x') {\n            this.$emit('swipe', ev.deltaX > 0 ? 'left' : 'right');\n          }\n        }\n\n        if (this.lastWheelDirection === 'y') {\n          this.onMouseWheelDo(ev.wheelDelta);\n        }\n      }\n\n      this.lastWheelTime = currTime;\n    },\n    onMouseWheelDo: function onMouseWheelDo(wheelDelta) {\n      // Value basis: One mouse wheel (wheelDelta=+-120) means 1.25/0.8 scale.\n      var scaleDelta = Math.pow(1.25, wheelDelta / 120);\n      this.tryToScale(scaleDelta);\n      this.onInteractionEnd();\n    },\n    onMouseDown: function onMouseDown(ev) {\n      this.refreshContainerPos();\n      this.isPointerDown = true; // Open the context menu then click other place will skip the mousemove events.\n      // This will cause the pointerPosX/Y NOT sync, then we will need to fix it on mousedown event.\n\n      this.pointerPosX = ev.clientX;\n      this.pointerPosY = ev.clientY; // console.log('onMouseDown', ev)\n    },\n    onMouseUp: function onMouseUp(ev) {\n      this.isPointerDown = false;\n      this.onInteractionEnd();\n    },\n    onMouseMove: function onMouseMove(ev) {\n      this.onPointerMove(ev.clientX, ev.clientY); // console.log('onMouseMove client, offset', ev.clientX, ev.clientY)\n    },\n    // Touch Events ------------------------------------------------------------\n    onTouchStart: function onTouchStart(ev) {\n      if (ev.touches.length === 1) {\n        this.refreshContainerPos();\n        this.pointerPosX = ev.touches[0].clientX;\n        this.pointerPosY = ev.touches[0].clientY;\n        this.isPointerDown = true;\n      } else if (ev.touches.length === 2) {\n        this.isPointerDown = true; // pos\n\n        this.pointerPosX = (ev.touches[0].clientX + ev.touches[1].clientX) / 2;\n        this.pointerPosY = (ev.touches[0].clientY + ev.touches[1].clientY) / 2; // dist\n\n        var distX = ev.touches[0].clientX - ev.touches[1].clientX;\n        var distY = ev.touches[0].clientY - ev.touches[1].clientY;\n        this.twoFingerInitDist = Math.sqrt(distX * distX + distY * distY);\n      } // console.log('onTouchStart', ev.touches)\n\n    },\n    onTouchEnd: function onTouchEnd(ev) {\n      if (ev.touches.length === 0) {\n        this.isPointerDown = false; // Near 1 to set 1\n\n        if (Math.abs(this.scale - 1) < 0.1) this.scale = 1;\n        this.onInteractionEnd();\n      } else if (ev.touches.length === 1) {\n        this.pointerPosX = ev.touches[0].clientX;\n        this.pointerPosY = ev.touches[0].clientY;\n      } // console.log('onTouchEnd', ev.touches.length)\n\n    },\n    onTouchMove: function onTouchMove(ev) {\n      if (ev.touches.length === 1) {\n        this.onPointerMove(ev.touches[0].clientX, ev.touches[0].clientY);\n      } else if (ev.touches.length === 2) {\n        // pos\n        var newMousePosX = (ev.touches[0].clientX + ev.touches[1].clientX) / 2;\n        var newMousePosY = (ev.touches[0].clientY + ev.touches[1].clientY) / 2;\n        this.onPointerMove(newMousePosX, newMousePosY);\n        this.pointerPosX = newMousePosX;\n        this.pointerPosY = newMousePosY; // dist\n\n        var distX = ev.touches[0].clientX - ev.touches[1].clientX;\n        var distY = ev.touches[0].clientY - ev.touches[1].clientY;\n        var newTwoFingerDist = Math.sqrt(distX * distX + distY * distY);\n        this.tryToScale(newTwoFingerDist / this.twoFingerInitDist);\n        this.twoFingerInitDist = newTwoFingerDist;\n      } // console.log('onTouchMove', this.pointerPosX, this.pointerPosY)\n\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["_debounce","TapDetector","props","minScale","type","Number","maxScale","zoomed","Boolean","resetTrigger","aspectRatio","backgroundColor","String","pivot","zoomingElastic","limitTranslation","doubleClickToZoom","mouseWheelToZoom","data","containerWidth","containerHeight","containerLeft","containerTop","translateX","animTranslateX","translateY","animTranslateY","scale","animScale","lastFullWheelTime","lastWheelTime","lastWheelDirection","isPointerDown","pointerPosX","pointerPosY","twoFingerInitDist","panLocked","raf","tapDetector","computed","wrapperStyle","transform","join","watch","val","$emit","mounted","attach","$refs","root","onDoubleTap","window","addEventListener","onWindowResize","refreshContainerPos","loop","beforeUnmount","detach","removeEventListener","cancelAnimationFrame","methods","reset","zoomIn","tryToScale","onInteractionEnd","zoomOut","scaleDelta","newScale","log","Math","log2","pow","normMousePosX","normMousePosY","setPointerPosCenter","onPointerMove","newMousePosX","newMousePosY","pixelDeltaX","pixelDeltaY","limit","translateLimit","calcTranslateLimit","abs","x","y","getMarginDirection","imageToContainerRatio","translateLimitY","translateLimitX","containerRatio","ev","clientX","clientY","min","styles","getComputedStyle","parseFloat","width","height","rect","getBoundingClientRect","left","top","gainOn","requestAnimationFrame","from","to","delta","onMouseWheel","preventDefault","detail","wheelDelta","currTime","Date","now","onMouseWheelDo","deltaX","deltaY","onMouseDown","onMouseUp","onMouseMove","onTouchStart","touches","length","distX","distY","sqrt","onTouchEnd","onTouchMove","newTwoFingerDist"],"sourceRoot":"","sources":["D:\\Stage\\App\\xr-place-application\\node_modules\\vue-zoomer\\src\\vue-zoomer.vue"],"sourcesContent":["<!-- vue-zoomer: https://github.com/jarvisniu/vue-zoomer -->\n<template>\n  <div\n    ref=\"root\"\n    class=\"vue-zoomer\"\n    :style=\"{backgroundColor: backgroundColor}\"\n    @mousewheel=\"onMouseWheel\"\n    @DOMMouseScroll=\"onMouseWheel\"\n    @mousedown=\"onMouseDown\"\n    @mouseup=\"onMouseUp\"\n    @mousemove=\"onMouseMove\"\n    @mouseout=\"setPointerPosCenter\"\n    @touchstart=\"onTouchStart\"\n    @touchend=\"onTouchEnd\"\n    @touchmove=\"onTouchMove\"\n  >\n    <div class=\"zoomer\" :style=\"wrapperStyle\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport _debounce from './debounce.min.js'\n\nimport TapDetector from './TapDetector'\n\nexport default {\n  props: {\n    minScale: { type: Number, default: 1 },\n    maxScale: { type: Number, default: 5 },\n    zoomed: { type: Boolean, default: false },\n    resetTrigger: { type: Number, default: 1e5 },\n    aspectRatio: { type: Number, default: 1 },\n    backgroundColor: { type: String, default: 'transparent' },\n    pivot: { type: String, default: 'cursor' }, // other options: image-center\n    zoomingElastic: { type: Boolean, default: true },\n    limitTranslation: { type: Boolean, default: true },\n    doubleClickToZoom: { type: Boolean, default: true },\n    mouseWheelToZoom: { type: Boolean, default: true },\n  },\n  data () {\n    return {\n      // Container sizes, used to determin the initial zoomer size.\n      // Need to reactive to window resizing.\n      containerWidth: 1,\n      containerHeight: 1,\n      containerLeft: 0,\n      containerTop: 0,\n      // Store values: Interactions will at last change these values.\n      // After rotation or resize, these values will keep still.\n      // These three values are all relative to the container size.\n      translateX: 0,\n      animTranslateX: 0,\n      translateY: 0,\n      animTranslateY: 0,\n      scale: 1,\n      animScale: 1,\n      // Mouse states\n      lastFullWheelTime: 0,\n      lastWheelTime: 0,\n      lastWheelDirection: 'y',\n      isPointerDown: false,\n      pointerPosX: -1,\n      pointerPosY: -1,\n      twoFingerInitDist: 0,\n      panLocked: true,\n      // Others\n      raf: null,\n      tapDetector: null,\n    }\n  },\n  computed: {\n    wrapperStyle () {\n      let translateX = this.containerWidth * this.animTranslateX\n      let translateY = this.containerHeight * this.animTranslateY\n      return {\n        transform: [\n          `translate(${ translateX }px, ${ translateY }px)`,\n          `scale(${ this.animScale })`,\n        ].join(' ')\n      }\n    },\n  },\n  watch: {\n    scale (val) {\n      if (val !== 1) {\n        this.$emit('update:zoomed', true)\n        this.panLocked = false\n      }\n    },\n    resetTrigger: 'reset',\n  },\n  mounted () {\n    this.tapDetector = new TapDetector()\n    this.tapDetector.attach(this.$refs.root)\n    if (this.doubleClickToZoom) {\n      this.tapDetector.onDoubleTap(this.onDoubleTap)\n    }\n    // console.log('container size: ', this.containerWidth, this.containerHeight)\n    window.addEventListener('resize', this.onWindowResize)\n    this.onWindowResize()\n    this.refreshContainerPos()\n    this.loop()\n  },\n  beforeUnmount () {\n    this.tapDetector.detach(this.$refs.root)\n    window.removeEventListener('resize', this.onWindowResize)\n    window.cancelAnimationFrame(this.raf)\n    // console.log('destroy')\n  },\n  methods: {\n    // API ---------------------------------------------------------------------\n    reset () {\n      this.scale = 1\n      this.panLocked = true\n      this.translateX = 0\n      this.translateY = 0\n    },\n    zoomIn(scale = 2) {\n      this.tryToScale(scale)\n      this.onInteractionEnd()\n    },\n    zoomOut(scale = 0.5) {\n      this.tryToScale(scale)\n      this.onInteractionEnd()\n    },\n    // Main Logic --------------------------------------------------------------\n    // scale\n    // Zoom the image with the point at the pointer(mouse or pinch center) pinned.\n    // Simplify: This can be regard as vector pointer to old-image-center scaling.\n    tryToScale (scaleDelta) {\n      let newScale = this.scale * scaleDelta\n      if (this.zoomingElastic) {\n        // damping\n        if (newScale < this.minScale || newScale > this.maxScale) {\n          let log = Math.log2(scaleDelta)\n          log *= 0.2\n          scaleDelta = Math.pow(2, log)\n          newScale = this.scale * scaleDelta\n        }\n      } else {\n        if (newScale < this.minScale) newScale = this.minScale\n        else if (newScale > this.maxScale) newScale = this.maxScale\n      }\n      scaleDelta = newScale / this.scale\n      this.scale = newScale\n      if (this.pivot !== 'image-center') {\n        let normMousePosX = (this.pointerPosX - this.containerLeft) / this.containerWidth\n        let normMousePosY = (this.pointerPosY - this.containerTop) / this.containerHeight\n        this.translateX = (0.5 + this.translateX - normMousePosX) * scaleDelta + normMousePosX - 0.5\n        this.translateY = (0.5 + this.translateY - normMousePosY) * scaleDelta + normMousePosY - 0.5\n      }\n    },\n    setPointerPosCenter () {\n      this.pointerPosX = this.containerLeft + this.containerWidth / 2\n      this.pointerPosY = this.containerTop + this.containerHeight / 2\n    },\n    // pan\n    onPointerMove (newMousePosX, newMousePosY) {\n      if (this.isPointerDown) {\n        let pixelDeltaX = newMousePosX - this.pointerPosX\n        let pixelDeltaY = newMousePosY - this.pointerPosY\n        // console.log('pixelDeltaX, pixelDeltaY', pixelDeltaX, pixelDeltaY)\n        if (!this.panLocked) {\n          this.translateX += pixelDeltaX / this.containerWidth\n          this.translateY += pixelDeltaY / this.containerHeight\n        }\n      }\n      this.pointerPosX = newMousePosX\n      this.pointerPosY = newMousePosY\n    },\n    onInteractionEnd: _debounce(function ()  {\n      this.limit()\n      this.panLocked = this.scale === 1\n      this.$emit('update:zoomed', !this.panLocked)\n    }, 100),\n    // limit the scale between max and min and the translate within the viewport\n    limit () {\n      // scale\n      if (this.scale < this.minScale) {\n        this.scale = this.minScale\n        // FIXME this sometimes will not reset when pinching in\n        // this.tryToScale(this.minScale / this.scale)\n      } else if (this.scale > this.maxScale) {\n        this.tryToScale(this.maxScale / this.scale)\n      }\n      // translate\n      if (this.limitTranslation) {\n        let translateLimit = this.calcTranslateLimit()\n        if (Math.abs(this.translateX) > translateLimit.x) {\n          this.translateX *= translateLimit.x / Math.abs(this.translateX)\n        }\n        if (Math.abs(this.translateY) > translateLimit.y) {\n          this.translateY *= translateLimit.y / Math.abs(this.translateY)\n        }\n      }\n    },\n    calcTranslateLimit () {\n      if (this.getMarginDirection() === 'y') {\n        let imageToContainerRatio = this.containerWidth / this.aspectRatio / this.containerHeight\n        let translateLimitY = (this.scale * imageToContainerRatio - 1) / 2\n        if (translateLimitY < 0) translateLimitY = 0\n        return {\n          x: (this.scale - 1) / 2,\n          y: translateLimitY,\n        }\n      } else {\n        let imageToContainerRatio = this.containerHeight * this.aspectRatio / this.containerWidth\n        let translateLimitX = (this.scale * imageToContainerRatio - 1) / 2\n        if (translateLimitX < 0) translateLimitX = 0\n        return {\n          x: translateLimitX,\n          y: (this.scale - 1) / 2,\n        }\n      }\n    },\n    getMarginDirection () {\n      let containerRatio = this.containerWidth / this.containerHeight\n      return containerRatio > this.aspectRatio ? 'x' : 'y'\n    },\n    onDoubleTap (ev) {\n      if (this.scale === 1) {\n        if (ev.clientX > 0) {\n          this.pointerPosX = ev.clientX\n          this.pointerPosY = ev.clientY\n        }\n        this.tryToScale(Math.min(3, this.maxScale))\n      } else {\n        this.reset()\n      }\n      this.onInteractionEnd()\n    },\n    // reactive\n    onWindowResize () {\n      let styles = window.getComputedStyle(this.$refs.root)\n      this.containerWidth = parseFloat(styles.width)\n      this.containerHeight = parseFloat(styles.height)\n      this.setPointerPosCenter()\n      this.limit()\n    },\n    refreshContainerPos () {\n      let rect = this.$refs.root.getBoundingClientRect()\n      this.containerLeft = rect.left\n      this.containerTop = rect.top\n    },\n    loop () {\n      this.animScale = this.gainOn(this.animScale, this.scale)\n      this.animTranslateX = this.gainOn(this.animTranslateX, this.translateX)\n      this.animTranslateY = this.gainOn(this.animTranslateY, this.translateY)\n      this.raf = window.requestAnimationFrame(this.loop)\n      // console.log('loop', this.raf)\n    },\n    gainOn (from, to) {\n      let delta = (to - from) * 0.3\n      // console.log('gainOn', from, to, from + delta)\n      if (Math.abs(delta) > 1e-5) {\n        return from + delta\n      } else {\n        return to\n      }\n    },\n    // Mouse Events ------------------------------------------------------------\n    // Mouse wheel scroll,  TrackPad pinch or TrackPad scroll\n    onMouseWheel (ev) {\n      if (!this.mouseWheelToZoom) return\n      // prevent is used to stop the page scroll elastic effects\n      ev.preventDefault()\n      if (ev.detail) ev.wheelDelta = ev.detail * -10\n      let currTime = Date.now()\n      if (Math.abs(ev.wheelDelta) === 120) {\n        // Throttle the TouchPad pinch on Mac, or it will be too sensitive\n        if (currTime - this.lastFullWheelTime > 50) {\n          this.onMouseWheelDo(ev.wheelDelta)\n          this.lastFullWheelTime = currTime\n        }\n      } else {\n        if (currTime - this.lastWheelTime > 50 && typeof ev.deltaX === 'number') {\n          this.lastWheelDirection = (ev.detail == 0 && Math.abs(ev.deltaX) > Math.abs(ev.deltaY)) ? 'x' : 'y'\n          if (this.lastWheelDirection === 'x') {\n            this.$emit('swipe', ev.deltaX > 0 ? 'left' : 'right')\n          }\n        }\n        if (this.lastWheelDirection === 'y') {\n          this.onMouseWheelDo(ev.wheelDelta)\n        }\n      }\n      this.lastWheelTime = currTime\n    },\n    onMouseWheelDo (wheelDelta) {\n      // Value basis: One mouse wheel (wheelDelta=+-120) means 1.25/0.8 scale.\n      let scaleDelta = Math.pow(1.25, wheelDelta / 120)\n      this.tryToScale(scaleDelta)\n      this.onInteractionEnd()\n    },\n    onMouseDown (ev) {\n      this.refreshContainerPos()\n      this.isPointerDown = true\n      // Open the context menu then click other place will skip the mousemove events.\n      // This will cause the pointerPosX/Y NOT sync, then we will need to fix it on mousedown event.\n      this.pointerPosX = ev.clientX\n      this.pointerPosY = ev.clientY\n      // console.log('onMouseDown', ev)\n    },\n    onMouseUp (ev) {\n      this.isPointerDown = false\n      this.onInteractionEnd()\n    },\n    onMouseMove (ev) {\n      this.onPointerMove(ev.clientX, ev.clientY)\n      // console.log('onMouseMove client, offset', ev.clientX, ev.clientY)\n    },\n    // Touch Events ------------------------------------------------------------\n    onTouchStart (ev) {\n      if (ev.touches.length === 1) {\n        this.refreshContainerPos()\n        this.pointerPosX = ev.touches[0].clientX\n        this.pointerPosY = ev.touches[0].clientY\n        this.isPointerDown = true\n      } else if (ev.touches.length === 2) {\n        this.isPointerDown = true\n        // pos\n        this.pointerPosX = (ev.touches[0].clientX + ev.touches[1].clientX) / 2\n        this.pointerPosY = (ev.touches[0].clientY + ev.touches[1].clientY) / 2\n        // dist\n        let distX = ev.touches[0].clientX - ev.touches[1].clientX\n        let distY = ev.touches[0].clientY - ev.touches[1].clientY\n        this.twoFingerInitDist = Math.sqrt(distX * distX + distY * distY)\n      }\n      // console.log('onTouchStart', ev.touches)\n    },\n    onTouchEnd (ev) {\n      if (ev.touches.length === 0) {\n        this.isPointerDown = false\n        // Near 1 to set 1\n        if (Math.abs(this.scale - 1) < 0.1) this.scale = 1\n        this.onInteractionEnd()\n      } else if (ev.touches.length === 1) {\n        this.pointerPosX = ev.touches[0].clientX\n        this.pointerPosY = ev.touches[0].clientY\n      }\n      // console.log('onTouchEnd', ev.touches.length)\n    },\n    onTouchMove (ev) {\n      if (ev.touches.length === 1) {\n        this.onPointerMove(ev.touches[0].clientX, ev.touches[0].clientY)\n      } else if (ev.touches.length === 2) {\n        // pos\n        let newMousePosX = (ev.touches[0].clientX + ev.touches[1].clientX) / 2\n        let newMousePosY = (ev.touches[0].clientY + ev.touches[1].clientY) / 2\n        this.onPointerMove(newMousePosX, newMousePosY)\n        this.pointerPosX = newMousePosX\n        this.pointerPosY = newMousePosY\n        // dist\n        let distX = ev.touches[0].clientX - ev.touches[1].clientX\n        let distY = ev.touches[0].clientY - ev.touches[1].clientY\n        let newTwoFingerDist = Math.sqrt(distX * distX + distY * distY)\n        this.tryToScale(newTwoFingerDist / this.twoFingerInitDist)\n        this.twoFingerInitDist = newTwoFingerDist\n      }\n      // console.log('onTouchMove', this.pointerPosX, this.pointerPosY)\n    },\n  },\n}\n</script>\n\n<style scoped>\n.vue-zoomer {\n  overflow: hidden;\n}\n.zoomer {\n  transform-origin: 50% 50%;\n  width: 100%;\n  height: 100%;\n}\n.zoomer > img {\n  /* remove the 4px gap below the image */\n  vertical-align: top;\n  user-drag: none;\n  -webkit-user-drag: none;\n  -moz-user-drag: none;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}