{"ast":null,"code":"import _defineProperty from \"D:/Stage/App/xr-place-application/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"D:/Stage/App/xr-place-application/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.array.reverse.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VProgressLinear.css\"; // Composables\n\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useBackgroundColor, useTextColor } from \"../../composables/color.mjs\";\nimport { useIntersectionObserver } from \"../../composables/intersectionObserver.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useRtl } from \"../../composables/rtl.mjs\"; // Utilities\n\nimport { convertToUnit, defineComponent } from \"../../util/index.mjs\";\nimport { computed, Transition } from 'vue';\nexport var VProgressLinear = defineComponent({\n  name: 'VProgressLinear',\n  props: _objectSpread(_objectSpread(_objectSpread({\n    active: {\n      type: Boolean,\n      \"default\": true\n    },\n    bgColor: String,\n    bgOpacity: [Number, String],\n    bufferValue: {\n      type: [Number, String],\n      \"default\": 0\n    },\n    clickable: Boolean,\n    color: String,\n    height: {\n      type: [Number, String],\n      \"default\": 4\n    },\n    indeterminate: Boolean,\n    max: {\n      type: [Number, String],\n      \"default\": 100\n    },\n    modelValue: {\n      type: [Number, String],\n      \"default\": 0\n    },\n    reverse: Boolean,\n    stream: Boolean,\n    striped: Boolean,\n    roundedBar: Boolean\n  }, makeRoundedProps()), makeTagProps()), makeThemeProps()),\n  emits: {\n    'update:modelValue': function updateModelValue(value) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var progress = useProxiedModel(props, 'modelValue');\n\n    var _useRtl = useRtl(),\n        isRtl = _useRtl.isRtl;\n\n    var _provideTheme = provideTheme(props),\n        themeClasses = _provideTheme.themeClasses;\n\n    var _useTextColor = useTextColor(props, 'color'),\n        textColorClasses = _useTextColor.textColorClasses,\n        textColorStyles = _useTextColor.textColorStyles;\n\n    var _useBackgroundColor = useBackgroundColor(computed(function () {\n      return props.bgColor || props.color;\n    })),\n        backgroundColorClasses = _useBackgroundColor.backgroundColorClasses,\n        backgroundColorStyles = _useBackgroundColor.backgroundColorStyles;\n\n    var _useBackgroundColor2 = useBackgroundColor(props, 'color'),\n        barColorClasses = _useBackgroundColor2.backgroundColorClasses,\n        barColorStyles = _useBackgroundColor2.backgroundColorStyles;\n\n    var _useRounded = useRounded(props),\n        roundedClasses = _useRounded.roundedClasses;\n\n    var _useIntersectionObser = useIntersectionObserver(),\n        intersectionRef = _useIntersectionObser.intersectionRef,\n        isIntersecting = _useIntersectionObser.isIntersecting;\n\n    var max = computed(function () {\n      return parseInt(props.max, 10);\n    });\n    var height = computed(function () {\n      return parseInt(props.height, 10);\n    });\n    var normalizedBuffer = computed(function () {\n      return parseFloat(props.bufferValue) / max.value * 100;\n    });\n    var normalizedValue = computed(function () {\n      return parseFloat(progress.value) / max.value * 100;\n    });\n    var isReversed = computed(function () {\n      return isRtl.value !== props.reverse;\n    });\n    var transition = computed(function () {\n      return props.indeterminate ? 'fade-transition' : 'slide-x-transition';\n    });\n    var opacity = computed(function () {\n      return props.bgOpacity == null ? props.bgOpacity : parseFloat(props.bgOpacity);\n    });\n\n    function handleClick(e) {\n      if (!intersectionRef.value) return;\n\n      var _intersectionRef$valu = intersectionRef.value.getBoundingClientRect(),\n          left = _intersectionRef$valu.left,\n          right = _intersectionRef$valu.right,\n          width = _intersectionRef$valu.width;\n\n      var value = isReversed.value ? width - e.clientX + (right - width) : e.clientX - left;\n      progress.value = Math.round(value / width * max.value);\n    }\n\n    return function () {\n      return _createVNode(props.tag, {\n        \"ref\": intersectionRef,\n        \"class\": ['v-progress-linear', {\n          'v-progress-linear--active': props.active && isIntersecting.value,\n          'v-progress-linear--reverse': isReversed.value,\n          'v-progress-linear--rounded': props.rounded,\n          'v-progress-linear--rounded-bar': props.roundedBar,\n          'v-progress-linear--striped': props.striped\n        }, roundedClasses.value, themeClasses.value],\n        \"style\": {\n          height: props.active ? convertToUnit(height.value) : 0,\n          '--v-progress-linear-height': convertToUnit(height.value)\n        },\n        \"role\": \"progressbar\",\n        \"aria-valuemin\": \"0\",\n        \"aria-valuemax\": props.max,\n        \"aria-valuenow\": props.indeterminate ? undefined : normalizedValue.value,\n        \"onClick\": props.clickable && handleClick\n      }, {\n        \"default\": function _default() {\n          var _objectSpread2;\n\n          return [props.stream && _createVNode(\"div\", {\n            \"class\": ['v-progress-linear__stream', textColorClasses.value],\n            \"style\": _objectSpread(_objectSpread({}, textColorStyles.value), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, isReversed.value ? 'left' : 'right', convertToUnit(-height.value)), _defineProperty(_objectSpread2, \"borderTop\", \"\".concat(convertToUnit(height.value / 2), \" dotted\")), _defineProperty(_objectSpread2, \"opacity\", opacity.value), _defineProperty(_objectSpread2, \"top\", \"calc(50% - \".concat(convertToUnit(height.value / 4), \")\")), _defineProperty(_objectSpread2, \"width\", convertToUnit(100 - normalizedBuffer.value, '%')), _defineProperty(_objectSpread2, '--v-progress-linear-stream-to', convertToUnit(height.value * (isReversed.value ? 1 : -1))), _objectSpread2))\n          }, null), _createVNode(\"div\", {\n            \"class\": ['v-progress-linear__background', backgroundColorClasses.value],\n            \"style\": [backgroundColorStyles.value, {\n              opacity: opacity.value,\n              width: convertToUnit(!props.stream ? 100 : normalizedBuffer.value, '%')\n            }]\n          }, null), _createVNode(Transition, {\n            \"name\": transition.value\n          }, {\n            \"default\": function _default() {\n              return [!props.indeterminate ? _createVNode(\"div\", {\n                \"class\": ['v-progress-linear__determinate', barColorClasses.value],\n                \"style\": [barColorStyles.value, {\n                  width: convertToUnit(normalizedValue.value, '%')\n                }]\n              }, null) : _createVNode(\"div\", {\n                \"class\": \"v-progress-linear__indeterminate\"\n              }, [['long', 'short'].map(function (bar) {\n                return _createVNode(\"div\", {\n                  \"key\": bar,\n                  \"class\": ['v-progress-linear__indeterminate', bar, barColorClasses.value],\n                  \"style\": barColorStyles.value\n                }, null);\n              })])];\n            }\n          }), slots[\"default\"] && _createVNode(\"div\", {\n            \"class\": \"v-progress-linear__content\"\n          }, [slots[\"default\"]({\n            value: normalizedValue.value,\n            buffer: normalizedBuffer.value\n          })])];\n        }\n      });\n    };\n  }\n});","map":{"version":3,"mappings":"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","names":["makeRoundedProps","useRounded","makeTagProps","makeThemeProps","provideTheme","useBackgroundColor","useTextColor","useIntersectionObserver","useProxiedModel","useRtl","convertToUnit","defineComponent","computed","Transition","VProgressLinear","name","props","active","type","Boolean","default","bgColor","String","bgOpacity","Number","bufferValue","clickable","color","height","indeterminate","max","modelValue","reverse","stream","striped","roundedBar","emits","value","setup","_ref","slots","progress","isRtl","themeClasses","textColorClasses","textColorStyles","backgroundColorClasses","backgroundColorStyles","barColorClasses","barColorStyles","roundedClasses","intersectionRef","isIntersecting","parseInt","normalizedBuffer","parseFloat","normalizedValue","isReversed","transition","opacity","handleClick","e","getBoundingClientRect","left","right","width","clientX","Math","round","rounded","undefined","map","bar","buffer"],"sources":["../../../src/components/VProgressLinear/VProgressLinear.tsx"],"sourcesContent":["// Styles\nimport './VProgressLinear.sass'\n\n// Composables\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useBackgroundColor, useTextColor } from '@/composables/color'\nimport { useIntersectionObserver } from '@/composables/intersectionObserver'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useRtl } from '@/composables/rtl'\n\n// Utilities\nimport { convertToUnit, defineComponent } from '@/util'\nimport { computed, Transition } from 'vue'\n\nexport const VProgressLinear = defineComponent({\n  name: 'VProgressLinear',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    bgColor: String,\n    bgOpacity: [Number, String],\n    bufferValue: {\n      type: [Number, String],\n      default: 0,\n    },\n    clickable: Boolean,\n    color: String,\n    height: {\n      type: [Number, String],\n      default: 4,\n    },\n    indeterminate: Boolean,\n    max: {\n      type: [Number, String],\n      default: 100,\n    },\n    modelValue: {\n      type: [Number, String],\n      default: 0,\n    },\n    reverse: Boolean,\n    stream: Boolean,\n    striped: Boolean,\n    roundedBar: Boolean,\n\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n  },\n\n  emits: {\n    'update:modelValue': (value: number) => true,\n  },\n\n  setup (props, { slots }) {\n    const progress = useProxiedModel(props, 'modelValue')\n    const { isRtl } = useRtl()\n    const { themeClasses } = provideTheme(props)\n    const { textColorClasses, textColorStyles } = useTextColor(props, 'color')\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(computed(() => props.bgColor || props.color))\n    const { backgroundColorClasses: barColorClasses, backgroundColorStyles: barColorStyles } = useBackgroundColor(props, 'color')\n    const { roundedClasses } = useRounded(props)\n    const { intersectionRef, isIntersecting } = useIntersectionObserver()\n\n    const max = computed(() => parseInt(props.max, 10))\n    const height = computed(() => parseInt(props.height, 10))\n    const normalizedBuffer = computed(() => parseFloat(props.bufferValue) / max.value * 100)\n    const normalizedValue = computed(() => parseFloat(progress.value) / max.value * 100)\n    const isReversed = computed(() => isRtl.value !== props.reverse)\n    const transition = computed(() => props.indeterminate ? 'fade-transition' : 'slide-x-transition')\n    const opacity = computed(() => {\n      return props.bgOpacity == null\n        ? props.bgOpacity\n        : parseFloat(props.bgOpacity)\n    })\n\n    function handleClick (e: MouseEvent) {\n      if (!intersectionRef.value) return\n\n      const { left, right, width } = intersectionRef.value.getBoundingClientRect()\n      const value = isReversed.value ? (width - e.clientX) + (right - width) : e.clientX - left\n\n      progress.value = Math.round(value / width * max.value)\n    }\n\n    return () => (\n      <props.tag\n        ref={ intersectionRef }\n        class={[\n          'v-progress-linear',\n          {\n            'v-progress-linear--active': props.active && isIntersecting.value,\n            'v-progress-linear--reverse': isReversed.value,\n            'v-progress-linear--rounded': props.rounded,\n            'v-progress-linear--rounded-bar': props.roundedBar,\n            'v-progress-linear--striped': props.striped,\n          },\n          roundedClasses.value,\n          themeClasses.value,\n        ]}\n        style={{\n          height: props.active ? convertToUnit(height.value) : 0,\n          '--v-progress-linear-height': convertToUnit(height.value),\n        }}\n        role=\"progressbar\"\n        aria-valuemin=\"0\"\n        aria-valuemax={ props.max }\n        aria-valuenow={ props.indeterminate ? undefined : normalizedValue.value }\n        onClick={ props.clickable && handleClick }\n      >\n        { props.stream && (\n          <div\n            class={[\n              'v-progress-linear__stream',\n              textColorClasses.value,\n            ]}\n            style={{\n              ...textColorStyles.value,\n              [isReversed.value ? 'left' : 'right']: convertToUnit(-height.value),\n              borderTop: `${convertToUnit(height.value / 2)} dotted`,\n              opacity: opacity.value,\n              top: `calc(50% - ${convertToUnit(height.value / 4)})`,\n              width: convertToUnit(100 - normalizedBuffer.value, '%'),\n              '--v-progress-linear-stream-to': convertToUnit(height.value * (isReversed.value ? 1 : -1)),\n            }}\n          />\n        ) }\n\n        <div\n          class={[\n            'v-progress-linear__background',\n            backgroundColorClasses.value,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            {\n              opacity: opacity.value,\n              width: convertToUnit((!props.stream ? 100 : normalizedBuffer.value), '%'),\n            },\n          ]}\n        />\n\n        <Transition name={ transition.value }>\n          { !props.indeterminate ? (\n            <div\n              class={[\n                'v-progress-linear__determinate',\n                barColorClasses.value,\n              ]}\n              style={[\n                barColorStyles.value,\n                { width: convertToUnit(normalizedValue.value, '%') },\n              ]}\n            />\n          ) : (\n            <div class=\"v-progress-linear__indeterminate\">\n              { ['long', 'short'].map(bar => (\n                <div\n                  key={ bar }\n                  class={[\n                    'v-progress-linear__indeterminate',\n                    bar,\n                    barColorClasses.value,\n                  ]}\n                  style={ barColorStyles.value }\n                />\n              )) }\n            </div>\n          ) }\n        </Transition>\n\n        { slots.default && (\n          <div class=\"v-progress-linear__content\">\n            { slots.default({ value: normalizedValue.value, buffer: normalizedBuffer.value }) }\n          </div>\n        ) }\n      </props.tag>\n    )\n  },\n})\n"]},"metadata":{},"sourceType":"module"}