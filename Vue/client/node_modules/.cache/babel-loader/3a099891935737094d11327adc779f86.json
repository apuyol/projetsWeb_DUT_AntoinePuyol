{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.parse-int.js\";\n// Utilities\nimport { computed, isRef } from 'vue';\nimport { propsFactory } from \"../util/index.mjs\"; // Types\n// Composables\n\nexport var makeElevationProps = propsFactory({\n  elevation: {\n    type: [Number, String],\n    validator: function validator(v) {\n      var value = parseInt(v);\n      return !isNaN(value) && value >= 0 && // Material Design has a maximum elevation of 24\n      // https://material.io/design/environment/elevation.html#default-elevations\n      value <= 24;\n    }\n  }\n}, 'elevation');\nexport function useElevation(props) {\n  var elevationClasses = computed(function () {\n    var elevation = isRef(props) ? props.value : props.elevation;\n    var classes = [];\n    if (elevation == null) return classes;\n    classes.push(\"elevation-\".concat(elevation));\n    return classes;\n  });\n  return {\n    elevationClasses: elevationClasses\n  };\n}","map":{"version":3,"mappings":";;AAAA;AACA,SAASA,QAAT,EAAmBC,KAAnB,QAAgC,KAAhC;SACSC,oB,qBAET;AAMA;;AACA,OAAO,IAAMC,kBAAkB,GAAGD,YAAY,CAAC;AAC7CE,WAAS,EAAE;AACTC,QAAI,EAAE,CAACC,MAAD,EAASC,MAAT,CADG;AAETC,aAFS,qBAEEC,CAFF,EAEU;AACjB,UAAMC,KAAK,GAAGC,QAAQ,CAACF,CAAD,CAAtB;AAEA,aACE,CAACG,KAAK,CAACF,KAAD,CAAN,IACAA,KAAK,IAAI,CADT,IAEA;AACA;AACAA,WAAK,IAAI,EALX;AAOD;AAZQ;AADkC,CAAD,EAe3C,WAf2C,CAAvC;AAqBP,OAAO,SAASG,YAAT,CAAuBC,KAAvB,EAAgG;AACrG,MAAMC,gBAAgB,GAAGf,QAAQ,CAAC,YAAM;AACtC,QAAMI,SAAS,GAAGH,KAAK,CAACa,KAAD,CAALb,GAAea,KAAK,CAACJ,KAArBT,GAA6Ba,KAAK,CAACV,SAArD;AACA,QAAMY,OAAiB,GAAG,EAA1B;AAEA,QAAIZ,SAAS,IAAI,IAAjB,EAAuB,OAAOY,OAAP;AAEvBA,WAAO,CAACC,IAARD,qBAA0BZ,SAA1BY;AAEA,WAAOA,OAAP;AAR+B,IAAjC;AAWA,SAAO;AAAED;AAAF,GAAP;AACD","names":["computed","isRef","propsFactory","makeElevationProps","elevation","type","Number","String","validator","v","value","parseInt","isNaN","useElevation","props","elevationClasses","classes","push"],"sources":["../../src/composables/elevation.ts"],"sourcesContent":["// Utilities\nimport { computed, isRef } from 'vue'\nimport { propsFactory } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\nexport interface ElevationProps {\n  elevation?: number | string | null\n}\n\n// Composables\nexport const makeElevationProps = propsFactory({\n  elevation: {\n    type: [Number, String],\n    validator (v: any) {\n      const value = parseInt(v)\n\n      return (\n        !isNaN(value) &&\n        value >= 0 &&\n        // Material Design has a maximum elevation of 24\n        // https://material.io/design/environment/elevation.html#default-elevations\n        value <= 24\n      )\n    },\n  },\n}, 'elevation')\n\ntype ElevationData = {\n  elevationClasses: Ref<string[]>\n}\n\nexport function useElevation (props: ElevationProps | Ref<number | string | undefined>): ElevationData {\n  const elevationClasses = computed(() => {\n    const elevation = isRef(props) ? props.value : props.elevation\n    const classes: string[] = []\n\n    if (elevation == null) return classes\n\n    classes.push(`elevation-${elevation}`)\n\n    return classes\n  })\n\n  return { elevationClasses }\n}\n"]},"metadata":{},"sourceType":"module"}