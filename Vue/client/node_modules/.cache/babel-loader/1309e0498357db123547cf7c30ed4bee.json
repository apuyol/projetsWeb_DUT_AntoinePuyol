{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nexport var singleOpenStrategy = function singleOpenStrategy(_ref) {\n  var id = _ref.id,\n      value = _ref.value,\n      opened = _ref.opened,\n      parents = _ref.parents;\n\n  if (value) {\n    var newOpened = new Set();\n    newOpened.add(id);\n    var parent = parents.get(id);\n\n    while (parent != null) {\n      newOpened.add(parent);\n      parent = parents.get(parent);\n    }\n\n    return newOpened;\n  } else {\n    opened[\"delete\"](id);\n    return opened;\n  }\n};\nexport var multipleOpenStrategy = function multipleOpenStrategy(_ref2) {\n  var id = _ref2.id,\n      value = _ref2.value,\n      opened = _ref2.opened,\n      parents = _ref2.parents;\n\n  if (value) {\n    var parent = parents.get(id);\n    opened.add(id);\n\n    while (parent != null && parent !== id) {\n      opened.add(parent);\n      parent = parents.get(parent);\n    }\n\n    return opened;\n  } else {\n    opened[\"delete\"](id);\n  }\n\n  return opened;\n};","map":{"version":3,"mappings":";;;;AASA,OAAO,IAAMA,kBAAkC,GAAG,SAArCA,kBAAqC,OAAoC;AAAA,MAAjCC,EAAiC,QAAjCA,EAAiC;AAAA,MAA7BC,KAA6B,QAA7BA,KAA6B;AAAA,MAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AACpF,MAAIF,KAAJ,EAAW;AACT,QAAMG,SAAS,GAAG,IAAIC,GAAJ,EAAlB;AACAD,aAAS,CAACE,GAAVF,CAAcJ,EAAdI;AAEA,QAAIG,MAAM,GAAGJ,OAAO,CAACK,GAARL,CAAYH,EAAZG,CAAb;;AAEA,WAAOI,MAAM,IAAI,IAAjB,EAAuB;AACrBH,eAAS,CAACE,GAAVF,CAAcG,MAAdH;AACAG,YAAM,GAAGJ,OAAO,CAACK,GAARL,CAAYI,MAAZJ,CAATI;AACD;;AAED,WAAOH,SAAP;AAXF,SAYO;AACLF,UAAM,UAANA,CAAcF,EAAdE;AACA,WAAOA,MAAP;AACD;AAhBI;AAmBP,OAAO,IAAMO,oBAAoC,GAAG,SAAvCA,oBAAuC,QAAoC;AAAA,MAAjCT,EAAiC,SAAjCA,EAAiC;AAAA,MAA7BC,KAA6B,SAA7BA,KAA6B;AAAA,MAAtBC,MAAsB,SAAtBA,MAAsB;AAAA,MAAdC,OAAc,SAAdA,OAAc;;AACtF,MAAIF,KAAJ,EAAW;AACT,QAAIM,MAAM,GAAGJ,OAAO,CAACK,GAARL,CAAYH,EAAZG,CAAb;AACAD,UAAM,CAACI,GAAPJ,CAAWF,EAAXE;;AAEA,WAAOK,MAAM,IAAI,IAAVA,IAAkBA,MAAM,KAAKP,EAApC,EAAwC;AACtCE,YAAM,CAACI,GAAPJ,CAAWK,MAAXL;AACAK,YAAM,GAAGJ,OAAO,CAACK,GAARL,CAAYI,MAAZJ,CAATI;AACD;;AAED,WAAOL,MAAP;AATF,SAUO;AACLA,UAAM,UAANA,CAAcF,EAAdE;AACD;;AACD,SAAOA,MAAP;AAdK","names":["singleOpenStrategy","id","value","opened","parents","newOpened","Set","add","parent","get","multipleOpenStrategy"],"sources":["../../../src/composables/nested/openStrategies.ts"],"sourcesContent":["export type OpenStrategyFn = (data: {\n  id: string\n  value: boolean\n  opened: Set<string>\n  children: Map<string, string[]>\n  parents: Map<string, string>\n  event?: Event\n}) => Set<string>\n\nexport const singleOpenStrategy: OpenStrategyFn = ({ id, value, opened, parents }) => {\n  if (value) {\n    const newOpened = new Set<string>()\n    newOpened.add(id)\n\n    let parent = parents.get(id)\n\n    while (parent != null) {\n      newOpened.add(parent)\n      parent = parents.get(parent)\n    }\n\n    return newOpened\n  } else {\n    opened.delete(id)\n    return opened\n  }\n}\n\nexport const multipleOpenStrategy: OpenStrategyFn = ({ id, value, opened, parents }) => {\n  if (value) {\n    let parent = parents.get(id)\n    opened.add(id)\n\n    while (parent != null && parent !== id) {\n      opened.add(parent)\n      parent = parents.get(parent)\n    }\n\n    return opened\n  } else {\n    opened.delete(id)\n  }\n  return opened\n}\n"]},"metadata":{},"sourceType":"module"}