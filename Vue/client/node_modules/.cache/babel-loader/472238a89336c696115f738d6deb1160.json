{"ast":null,"code":"import _defineProperty from \"D:/Stage/App/xr-place-application/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { createVNode as _createVNode } from \"vue\"; // Components\n\nimport { VProgressLinear } from \"../components/VProgressLinear/index.mjs\"; // Utilities\n\nimport { computed } from 'vue';\nimport { getCurrentInstanceName, propsFactory } from \"../util/index.mjs\"; // Types\n// Composables\n\nexport var makeLoaderProps = propsFactory({\n  loading: Boolean\n}, 'loader');\nexport function useLoader(props) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentInstanceName();\n  var loaderClasses = computed(function () {\n    return _defineProperty({}, \"\".concat(name, \"--loading\"), props.loading);\n  });\n  return {\n    loaderClasses: loaderClasses\n  };\n}\nexport function LoaderSlot(props, _ref) {\n  var _slots$default;\n\n  var slots = _ref.slots;\n  return _createVNode(\"div\", {\n    \"class\": \"\".concat(props.name, \"__loader\")\n  }, [((_slots$default = slots[\"default\"]) == null ? void 0 : _slots$default.call(slots, {\n    color: props.color,\n    isActive: props.active\n  })) || _createVNode(VProgressLinear, {\n    \"active\": props.active,\n    \"color\": props.color,\n    \"height\": \"2\",\n    \"indeterminate\": true\n  }, null)]);\n}","map":{"version":3,"mappings":";;mDAAA;;SACSA,uB,2CAET;;AACA,SAASC,QAAT,QAAyB,KAAzB;SACSC,wBAAwBC,oB,qBAEjC;AAcA;;AACA,OAAO,IAAMC,eAAe,GAAGD,YAAY,CAAC;AAC1CE,SAAO,EAAEC;AADiC,CAAD,EAExC,QAFwC,CAApC;AAIP,OAAO,SAASC,SAAT,CACLC,KADK,EAGL;AAAA,MADAC,IACA,uEADOP,sBAAsB,EAC7B;AACA,MAAMQ,aAAa,GAAGT,QAAQ,CAAC;AAAA,yCACzBQ,IADyB,gBACPD,KAAK,CAACH,OADC;AAAA,GAAD,CAA9B;AAIA,SAAO;AAAEK;AAAF,GAAP;AACD;AAED,OAAO,SAASC,UAAT,CACLH,KADK,QASL;AAAA;;AAAA,MADEI,KACF,QADEA,KACF;AACA;AAAA,uBACiBJ,KAAK,CAACC,IADvB;AAAA,MAEM,wBAAK,WAAL,gDAAgB;AAChBI,SAAK,EAAEL,KAAK,CAACK,KADG;AAEhBC,YAAQ,EAAEN,KAAK,CAACO;AAFA,GAAhB;AAAA,cAKWP,KAAK,CAACO,MALjB;AAAA,aAMUP,KAAK,CAACK,KANhB;AAAA,cAOS,GAPT;AAAA;AAAA,UAFN;AAeD","names":["VProgressLinear","computed","getCurrentInstanceName","propsFactory","makeLoaderProps","loading","Boolean","useLoader","props","name","loaderClasses","LoaderSlot","slots","color","isActive","active"],"sources":["../../src/composables/loader.tsx"],"sourcesContent":["// Components\nimport { VProgressLinear } from '@/components/VProgressLinear'\n\n// Utilities\nimport { computed } from 'vue'\nimport { getCurrentInstanceName, propsFactory } from '@/util'\n\n// Types\nimport type { ExtractPropTypes } from 'vue'\nimport type { SetupContext } from '@vue/runtime-core'\nimport type { MakeSlots, SlotsToProps } from '@/util'\n\nexport interface LoaderSlotProps {\n  color: string | undefined\n  isActive: boolean\n}\n\nexport interface LoaderProps {\n  loading: boolean | string\n}\n\n// Composables\nexport const makeLoaderProps = propsFactory({\n  loading: Boolean,\n}, 'loader')\n\nexport function useLoader (\n  props: LoaderProps,\n  name = getCurrentInstanceName(),\n) {\n  const loaderClasses = computed(() => ({\n    [`${name}--loading`]: props.loading,\n  }))\n\n  return { loaderClasses }\n}\n\nexport function LoaderSlot (\n  props: {\n    active: boolean\n    name: string\n    color?: string\n  } & ExtractPropTypes<SlotsToProps<MakeSlots<{\n    default: [LoaderSlotProps]\n  }>>>,\n  { slots }: SetupContext,\n) {\n  return (\n    <div class={`${props.name}__loader`}>\n      { slots.default?.({\n        color: props.color,\n        isActive: props.active,\n      } as LoaderSlotProps) || (\n        <VProgressLinear\n          active={ props.active }\n          color={ props.color }\n          height=\"2\"\n          indeterminate\n        />\n      )}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}