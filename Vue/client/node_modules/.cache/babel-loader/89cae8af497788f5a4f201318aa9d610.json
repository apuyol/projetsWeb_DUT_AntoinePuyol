{"ast":null,"code":"import _objectSpread from \"D:/Stage/App/xr-place-application/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"D:/Stage/App/xr-place-application/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"$type\", \"$children\"];\nimport \"core-js/modules/es.array.map.js\";\nimport { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\"; // Styles\n\nimport \"./VList.css\"; // Components\n\nimport { VListChildren } from \"./VListChildren.mjs\"; // Composables\n\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { useBackgroundColor } from \"../../composables/color.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { makeNestedProps, useNested } from \"../../composables/nested/nested.mjs\";\nimport { makeVariantProps } from \"../../composables/variant.mjs\";\nimport { createList } from \"./list.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\"; // Utilities\n\nimport { computed, toRef } from 'vue';\nimport { genericComponent, useRender } from \"../../util/index.mjs\"; // Types\n\nvar parseItems = function parseItems(items) {\n  if (!items) return undefined;\n  return items.map(function (item) {\n    if (typeof item === 'string') return {\n      type: 'item',\n      value: item,\n      title: item\n    };\n\n    var $type = item.$type,\n        $children = item.$children,\n        props = _objectWithoutProperties(item, _excluded);\n\n    if ($type === 'subheader') return {\n      type: 'subheader',\n      props: props\n    };\n    if ($type === 'divider') return {\n      type: 'divider',\n      props: props\n    };\n    return {\n      type: 'item',\n      props: props,\n      children: parseItems($children)\n    };\n  });\n};\n\nexport var VList = genericComponent()({\n  name: 'VList',\n  props: _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n    activeColor: String,\n    activeClass: String,\n    bgColor: String,\n    disabled: Boolean,\n    lines: {\n      type: [Boolean, String],\n      \"default\": 'one'\n    },\n    nav: Boolean,\n    items: Array\n  }, makeNestedProps({\n    selectStrategy: 'single-leaf',\n    openStrategy: 'multiple'\n  })), makeBorderProps()), makeDensityProps()), makeDimensionProps()), makeElevationProps()), makeRoundedProps()), makeTagProps()), makeThemeProps()), makeVariantProps({\n    variant: 'text'\n  })),\n  emits: {\n    'update:selected': function updateSelected(val) {\n      return true;\n    },\n    'update:opened': function updateOpened(val) {\n      return true;\n    },\n    'click:open': function clickOpen(value) {\n      return true;\n    },\n    'click:select': function clickSelect(value) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var items = computed(function () {\n      return parseItems(props.items);\n    });\n\n    var _provideTheme = provideTheme(props),\n        themeClasses = _provideTheme.themeClasses;\n\n    var _useBackgroundColor = useBackgroundColor(toRef(props, 'bgColor')),\n        backgroundColorClasses = _useBackgroundColor.backgroundColorClasses,\n        backgroundColorStyles = _useBackgroundColor.backgroundColorStyles;\n\n    var _useBorder = useBorder(props),\n        borderClasses = _useBorder.borderClasses;\n\n    var _useDensity = useDensity(props),\n        densityClasses = _useDensity.densityClasses;\n\n    var _useDimension = useDimension(props),\n        dimensionStyles = _useDimension.dimensionStyles;\n\n    var _useElevation = useElevation(props),\n        elevationClasses = _useElevation.elevationClasses;\n\n    var _useRounded = useRounded(props),\n        roundedClasses = _useRounded.roundedClasses;\n\n    var _useNested = useNested(props),\n        open = _useNested.open,\n        select = _useNested.select;\n\n    var lineClasses = computed(function () {\n      return props.lines ? \"v-list--\".concat(props.lines, \"-line\") : undefined;\n    });\n    var activeColor = toRef(props, 'activeColor');\n    var color = toRef(props, 'color');\n    createList();\n    provideDefaults({\n      VListGroup: {\n        activeColor: activeColor,\n        color: color\n      },\n      VListItem: {\n        activeClass: toRef(props, 'activeClass'),\n        activeColor: activeColor,\n        color: color,\n        density: toRef(props, 'density'),\n        disabled: toRef(props, 'disabled'),\n        lines: toRef(props, 'lines'),\n        nav: toRef(props, 'nav'),\n        variant: toRef(props, 'variant')\n      }\n    });\n    useRender(function () {\n      return _createVNode(props.tag, {\n        \"class\": ['v-list', {\n          'v-list--disabled': props.disabled,\n          'v-list--nav': props.nav\n        }, themeClasses.value, backgroundColorClasses.value, borderClasses.value, densityClasses.value, elevationClasses.value, lineClasses.value, roundedClasses.value],\n        \"style\": [backgroundColorStyles.value, dimensionStyles.value]\n      }, {\n        \"default\": function _default() {\n          return [_createVNode(VListChildren, {\n            \"items\": items.value\n          }, slots)];\n        }\n      });\n    });\n    return {\n      open: open,\n      select: select\n    };\n  }\n});","map":{"version":3,"mappings":"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","names":["VListChildren","makeBorderProps","useBorder","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","makeRoundedProps","useRounded","makeTagProps","useBackgroundColor","makeThemeProps","provideTheme","makeNestedProps","useNested","makeVariantProps","createList","provideDefaults","computed","toRef","genericComponent","useRender","parseItems","items","undefined","map","item","type","value","title","$type","$children","props","children","VList","name","activeColor","String","activeClass","bgColor","disabled","Boolean","lines","default","nav","Array","selectStrategy","openStrategy","variant","emits","val","setup","_ref","slots","themeClasses","backgroundColorClasses","backgroundColorStyles","borderClasses","densityClasses","dimensionStyles","elevationClasses","roundedClasses","open","select","lineClasses","color","VListGroup","VListItem","density"],"sources":["../../../src/components/VList/VList.tsx"],"sourcesContent":["// Styles\nimport './VList.sass'\n\n// Components\nimport { VListChildren } from './VListChildren'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { makeNestedProps, useNested } from '@/composables/nested/nested'\nimport { makeVariantProps } from '@/composables/variant'\nimport { createList } from './list'\nimport { provideDefaults } from '@/composables/defaults'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { genericComponent, useRender } from '@/util'\n\n// Types\nimport type { Prop, PropType } from 'vue'\nimport type { MakeSlots } from '@/util'\nimport type { ListGroupActivatorSlot } from './VListGroup'\n\nexport type ListItem = {\n  [key: string]: any\n  $type?: 'item' | 'subheader' | 'divider'\n  $children?: (string | ListItem)[]\n}\n\nexport type InternalListItem = {\n  type?: 'item' | 'subheader' | 'divider'\n  props?: Record<string, any>\n  children?: InternalListItem[]\n}\n\nconst parseItems = (items?: (string | ListItem)[]): InternalListItem[] | undefined => {\n  if (!items) return undefined\n\n  return items.map(item => {\n    if (typeof item === 'string') return { type: 'item', value: item, title: item }\n\n    const { $type, $children, ...props } = item\n\n    if ($type === 'subheader') return { type: 'subheader', props }\n    if ($type === 'divider') return { type: 'divider', props }\n\n    return { type: 'item', props, children: parseItems($children) }\n  })\n}\n\nexport const VList = genericComponent<new <T>() => {\n  $props: {\n    items?: T[]\n  }\n  $slots: MakeSlots<{\n    subheader: []\n    header: [ListGroupActivatorSlot]\n    item: [T]\n  }>\n}>()({\n  name: 'VList',\n\n  props: {\n    activeColor: String,\n    activeClass: String,\n    bgColor: String,\n    disabled: Boolean,\n    lines: {\n      type: [Boolean, String] as PropType<'one' | 'two' | 'three' | false>,\n      default: 'one',\n    },\n    nav: Boolean,\n    items: Array as Prop<ListItem[]>,\n\n    ...makeNestedProps({\n      selectStrategy: 'single-leaf' as const,\n      openStrategy: 'multiple' as const,\n    }),\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'text' } as const),\n  },\n\n  emits: {\n    'update:selected': (val: string[]) => true,\n    'update:opened': (val: string[]) => true,\n    'click:open': (value: { id: string, value: boolean, path: string[] }) => true,\n    'click:select': (value: { id: string, value: boolean, path: string[] }) => true,\n  },\n\n  setup (props, { slots }) {\n    const items = computed(() => parseItems(props.items))\n    const { themeClasses } = provideTheme(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n    const { borderClasses } = useBorder(props)\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props)\n    const { open, select } = useNested(props)\n    const lineClasses = computed(() => props.lines ? `v-list--${props.lines}-line` : undefined)\n    const activeColor = toRef(props, 'activeColor')\n    const color = toRef(props, 'color')\n\n    createList()\n\n    provideDefaults({\n      VListGroup: {\n        activeColor,\n        color,\n      },\n      VListItem: {\n        activeClass: toRef(props, 'activeClass'),\n        activeColor,\n        color,\n        density: toRef(props, 'density'),\n        disabled: toRef(props, 'disabled'),\n        lines: toRef(props, 'lines'),\n        nav: toRef(props, 'nav'),\n        variant: toRef(props, 'variant'),\n      },\n    })\n\n    useRender(() => {\n      return (\n        <props.tag\n          class={[\n            'v-list',\n            {\n              'v-list--disabled': props.disabled,\n              'v-list--nav': props.nav,\n            },\n            themeClasses.value,\n            backgroundColorClasses.value,\n            borderClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            lineClasses.value,\n            roundedClasses.value,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            dimensionStyles.value,\n          ]}\n        >\n          <VListChildren items={ items.value } v-slots={ slots }></VListChildren>\n        </props.tag>\n      )\n    })\n\n    return {\n      open,\n      select,\n    }\n  },\n})\n\nexport type VList = InstanceType<typeof VList>\n"]},"metadata":{},"sourceType":"module"}