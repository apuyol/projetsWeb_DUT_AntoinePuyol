{"ast":null,"code":"import _objectSpread from \"D:/Stage/App/xr-place-application/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"D:/Stage/App/xr-place-application/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"modelValue\", \"color\"];\nimport { withDirectives as _withDirectives, resolveDirective as _resolveDirective, vShow as _vShow, Fragment as _Fragment, createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\"; // Styles\n\nimport \"./VOverlay.css\"; // Composables\n\nimport { makeActivatorProps, useActivator } from \"./useActivator.mjs\";\nimport { makePositionStrategyProps, usePositionStrategies } from \"./positionStrategies.mjs\";\nimport { makeScrollStrategyProps, useScrollStrategies } from \"./scrollStrategies.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { makeTransitionProps, MaybeTransition } from \"../../composables/transition.mjs\";\nimport { useBackButton } from \"../../composables/router.mjs\";\nimport { useBackgroundColor } from \"../../composables/color.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useRtl } from \"../../composables/rtl.mjs\";\nimport { useTeleport } from \"../../composables/teleport.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeLazyProps, useLazy } from \"../../composables/lazy.mjs\";\nimport { useStack } from \"../../composables/stack.mjs\";\nimport { useOverlay } from \"../../composables/overlay.mjs\"; // Directives\n\nimport { ClickOutside } from \"../../directives/click-outside/index.mjs\"; // Utilities\n\nimport { convertToUnit, genericComponent, getScrollParent, IN_BROWSER, standardEasing, useRender } from \"../../util/index.mjs\";\nimport { computed, mergeProps, ref, Teleport, toHandlers, Transition, watch } from 'vue'; // Types\n\nfunction Scrim(props) {\n  var modelValue = props.modelValue,\n      color = props.color,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  return _createVNode(Transition, {\n    \"name\": \"fade-transition\",\n    \"appear\": true\n  }, {\n    \"default\": function _default() {\n      return [props.modelValue && _createVNode(\"div\", _mergeProps({\n        \"class\": ['v-overlay__scrim', props.color.backgroundColorClasses.value],\n        \"style\": props.color.backgroundColorStyles.value\n      }, rest), null)];\n    }\n  });\n}\n\nexport var VOverlay = genericComponent()({\n  name: 'VOverlay',\n  directives: {\n    ClickOutside: ClickOutside\n  },\n  inheritAttrs: false,\n  props: _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n    absolute: Boolean,\n    attach: [Boolean, String, Object],\n    contained: Boolean,\n    contentClass: null,\n    noClickAnimation: Boolean,\n    modelValue: Boolean,\n    persistent: Boolean,\n    scrim: {\n      type: [String, Boolean],\n      \"default\": true\n    }\n  }, makeActivatorProps()), makeDimensionProps()), makePositionStrategyProps()), makeScrollStrategyProps()), makeThemeProps()), makeTransitionProps()), makeLazyProps()),\n  emits: {\n    'click:outside': function clickOutside(e) {\n      return true;\n    },\n    'update:modelValue': function updateModelValue(value) {\n      return true;\n    },\n    afterLeave: function afterLeave() {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots,\n        attrs = _ref.attrs,\n        emit = _ref.emit;\n    var isActive = useProxiedModel(props, 'modelValue');\n\n    var _useTeleport = useTeleport(computed(function () {\n      return props.attach || props.contained;\n    })),\n        teleportTarget = _useTeleport.teleportTarget;\n\n    var _provideTheme = provideTheme(props),\n        themeClasses = _provideTheme.themeClasses;\n\n    var _useRtl = useRtl(),\n        rtlClasses = _useRtl.rtlClasses;\n\n    var _useLazy = useLazy(props, isActive),\n        hasContent = _useLazy.hasContent,\n        _onAfterLeave = _useLazy.onAfterLeave;\n\n    var scrimColor = useBackgroundColor(computed(function () {\n      return typeof props.scrim === 'string' ? props.scrim : null;\n    }));\n\n    var _useActivator = useActivator(props, isActive),\n        activatorEl = _useActivator.activatorEl,\n        activatorRef = _useActivator.activatorRef,\n        activatorEvents = _useActivator.activatorEvents;\n\n    var _useDimension = useDimension(props),\n        dimensionStyles = _useDimension.dimensionStyles;\n\n    var _useStack = useStack(isActive),\n        isTop = _useStack.isTop;\n\n    var root = ref();\n    var contentEl = ref();\n\n    var _usePositionStrategie = usePositionStrategies(props, {\n      contentEl: contentEl,\n      activatorEl: activatorEl,\n      isActive: isActive\n    }),\n        contentStyles = _usePositionStrategie.contentStyles,\n        updatePosition = _usePositionStrategie.updatePosition;\n\n    useScrollStrategies(props, {\n      root: root,\n      contentEl: contentEl,\n      activatorEl: activatorEl,\n      isActive: isActive,\n      updatePosition: updatePosition\n    });\n\n    function onClickOutside(e) {\n      emit('click:outside', e);\n      if (!props.persistent) isActive.value = false;else animateClick();\n    }\n\n    function closeConditional() {\n      return isActive.value && isTop.value;\n    }\n\n    IN_BROWSER && watch(isActive, function (val) {\n      if (val) {\n        window.addEventListener('keydown', onKeydown);\n      } else {\n        window.removeEventListener('keydown', onKeydown);\n      }\n    }, {\n      immediate: true\n    });\n\n    function onKeydown(e) {\n      if (e.key === 'Escape' && isTop.value) {\n        if (!props.persistent) {\n          isActive.value = false;\n        } else animateClick();\n      }\n    }\n\n    useBackButton(function (next) {\n      if (isTop.value && isActive.value) {\n        next(false);\n        if (!props.persistent) isActive.value = false;else animateClick();\n      } else {\n        next();\n      }\n    });\n    var top = ref();\n    watch(function () {\n      return isActive.value && (props.absolute || props.contained) && teleportTarget.value == null;\n    }, function (val) {\n      if (val) {\n        var scrollParent = getScrollParent(root.value);\n\n        if (scrollParent && scrollParent !== document.scrollingElement) {\n          top.value = scrollParent.scrollTop;\n        }\n      }\n    }); // Add a quick \"bounce\" animation to the content\n\n    function animateClick() {\n      var _contentEl$value;\n\n      if (props.noClickAnimation) return;\n      (_contentEl$value = contentEl.value) == null ? void 0 : _contentEl$value.animate([{\n        transformOrigin: 'center'\n      }, {\n        transform: 'scale(1.03)'\n      }, {\n        transformOrigin: 'center'\n      }], {\n        duration: 150,\n        easing: standardEasing\n      });\n    }\n\n    var _useOverlay = useOverlay(isActive),\n        overlayZIndex = _useOverlay.overlayZIndex;\n\n    useRender(function () {\n      var _slots$activator, _slots$default;\n\n      return _createVNode(_Fragment, null, [(_slots$activator = slots.activator) == null ? void 0 : _slots$activator.call(slots, {\n        isActive: isActive.value,\n        props: mergeProps({\n          ref: activatorRef\n        }, toHandlers(activatorEvents.value), props.activatorProps)\n      }), IN_BROWSER && _createVNode(Teleport, {\n        \"disabled\": !teleportTarget.value,\n        \"to\": teleportTarget.value\n      }, {\n        \"default\": function _default() {\n          return [hasContent.value && _createVNode(\"div\", _mergeProps({\n            \"class\": ['v-overlay', {\n              'v-overlay--absolute': props.absolute || props.contained,\n              'v-overlay--active': isActive.value,\n              'v-overlay--contained': props.contained\n            }, themeClasses.value, rtlClasses.value],\n            \"style\": {\n              top: convertToUnit(top.value),\n              zIndex: overlayZIndex.value\n            },\n            \"ref\": root\n          }, attrs), [_createVNode(Scrim, {\n            \"color\": scrimColor,\n            \"modelValue\": isActive.value && !!props.scrim\n          }, null), _createVNode(MaybeTransition, {\n            \"appear\": true,\n            \"persisted\": true,\n            \"transition\": props.transition,\n            \"target\": activatorEl.value,\n            \"onAfterLeave\": function onAfterLeave() {\n              _onAfterLeave();\n\n              emit('afterLeave');\n            }\n          }, {\n            \"default\": function _default() {\n              return [_withDirectives(_createVNode(\"div\", {\n                \"ref\": contentEl,\n                \"class\": ['v-overlay__content', props.contentClass],\n                \"style\": [dimensionStyles.value, contentStyles.value]\n              }, [(_slots$default = slots[\"default\"]) == null ? void 0 : _slots$default.call(slots, {\n                isActive: isActive\n              })]), [[_vShow, isActive.value], [_resolveDirective(\"click-outside\"), {\n                handler: onClickOutside,\n                closeConditional: closeConditional,\n                include: function include() {\n                  return [activatorEl.value];\n                }\n              }]])];\n            }\n          })])];\n        }\n      })]);\n    });\n    return {\n      animateClick: animateClick,\n      contentEl: contentEl,\n      activatorEl: activatorEl\n    };\n  }\n});","map":{"version":3,"mappings":"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","names":["makeActivatorProps","useActivator","makePositionStrategyProps","usePositionStrategies","makeScrollStrategyProps","useScrollStrategies","makeThemeProps","provideTheme","makeTransitionProps","MaybeTransition","useBackButton","useBackgroundColor","useProxiedModel","useRtl","useTeleport","makeDimensionProps","useDimension","makeLazyProps","useLazy","useStack","useOverlay","ClickOutside","convertToUnit","genericComponent","getScrollParent","IN_BROWSER","standardEasing","useRender","computed","mergeProps","ref","Teleport","toHandlers","Transition","watch","Scrim","props","modelValue","color","rest","backgroundColorClasses","value","backgroundColorStyles","VOverlay","name","directives","inheritAttrs","absolute","Boolean","attach","String","Object","contained","contentClass","noClickAnimation","persistent","scrim","type","default","emits","e","afterLeave","setup","_ref","slots","attrs","emit","isActive","teleportTarget","themeClasses","rtlClasses","hasContent","onAfterLeave","scrimColor","activatorEl","activatorRef","activatorEvents","dimensionStyles","isTop","root","contentEl","contentStyles","updatePosition","onClickOutside","animateClick","closeConditional","val","window","addEventListener","onKeydown","removeEventListener","immediate","key","next","top","scrollParent","document","scrollingElement","scrollTop","animate","transformOrigin","transform","duration","easing","overlayZIndex","activator","_slots$activator","activatorProps","zIndex","transition","_slots$default","handler","include"],"sources":["../../../src/components/VOverlay/VOverlay.tsx"],"sourcesContent":["// Styles\nimport './VOverlay.sass'\n\n// Composables\nimport { makeActivatorProps, useActivator } from './useActivator'\nimport { makePositionStrategyProps, usePositionStrategies } from './positionStrategies'\nimport { makeScrollStrategyProps, useScrollStrategies } from './scrollStrategies'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\nimport { useBackButton } from '@/composables/router'\nimport { useBackgroundColor } from '@/composables/color'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useRtl } from '@/composables/rtl'\nimport { useTeleport } from '@/composables/teleport'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeLazyProps, useLazy } from '@/composables/lazy'\nimport { useStack } from '@/composables/stack'\nimport { useOverlay } from '@/composables/overlay'\n\n// Directives\nimport { ClickOutside } from '@/directives/click-outside'\n\n// Utilities\nimport {\n  convertToUnit,\n  genericComponent,\n  getScrollParent,\n  IN_BROWSER,\n  standardEasing,\n  useRender,\n} from '@/util'\nimport {\n  computed,\n  mergeProps,\n  ref,\n  Teleport,\n  toHandlers,\n  Transition,\n  watch,\n} from 'vue'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { MakeSlots } from '@/util'\nimport type { BackgroundColorData } from '@/composables/color'\n\ninterface ScrimProps {\n  [key: string]: unknown\n  modelValue: boolean\n  color: BackgroundColorData\n}\nfunction Scrim (props: ScrimProps) {\n  const { modelValue, color, ...rest } = props\n  return (\n    <Transition name=\"fade-transition\" appear>\n      { props.modelValue && (\n        <div\n          class={[\n            'v-overlay__scrim',\n            props.color.backgroundColorClasses.value,\n          ]}\n          style={ props.color.backgroundColorStyles.value }\n          { ...rest }\n        />\n      )}\n    </Transition>\n  )\n}\n\nexport type OverlaySlots = MakeSlots<{\n  default: [{ isActive: Ref<boolean> }]\n  activator: [{ isActive: boolean, props: Record<string, any> }]\n}>\n\nexport const VOverlay = genericComponent<new () => {\n  $slots: OverlaySlots\n}>()({\n  name: 'VOverlay',\n\n  directives: { ClickOutside },\n\n  inheritAttrs: false,\n\n  props: {\n    absolute: Boolean,\n    attach: [Boolean, String, Object] as PropType<boolean | string | Element>,\n    contained: Boolean,\n    contentClass: null,\n    noClickAnimation: Boolean,\n    modelValue: Boolean,\n    persistent: Boolean,\n    scrim: {\n      type: [String, Boolean],\n      default: true,\n    },\n\n    ...makeActivatorProps(),\n    ...makeDimensionProps(),\n    ...makePositionStrategyProps(),\n    ...makeScrollStrategyProps(),\n    ...makeThemeProps(),\n    ...makeTransitionProps(),\n    ...makeLazyProps(),\n  },\n\n  emits: {\n    'click:outside': (e: MouseEvent) => true,\n    'update:modelValue': (value: boolean) => true,\n    afterLeave: () => true,\n  },\n\n  setup (props, { slots, attrs, emit }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { teleportTarget } = useTeleport(computed(() => props.attach || props.contained))\n    const { themeClasses } = provideTheme(props)\n    const { rtlClasses } = useRtl()\n    const { hasContent, onAfterLeave } = useLazy(props, isActive)\n    const scrimColor = useBackgroundColor(computed(() => {\n      return typeof props.scrim === 'string' ? props.scrim : null\n    }))\n    const { activatorEl, activatorRef, activatorEvents } = useActivator(props, isActive)\n    const { dimensionStyles } = useDimension(props)\n    const { isTop } = useStack(isActive)\n\n    const root = ref<HTMLElement>()\n    const contentEl = ref<HTMLElement>()\n    const { contentStyles, updatePosition } = usePositionStrategies(props, {\n      contentEl,\n      activatorEl,\n      isActive,\n    })\n    useScrollStrategies(props, {\n      root,\n      contentEl,\n      activatorEl,\n      isActive,\n      updatePosition,\n    })\n\n    function onClickOutside (e: MouseEvent) {\n      emit('click:outside', e)\n\n      if (!props.persistent) isActive.value = false\n      else animateClick()\n    }\n\n    function closeConditional () {\n      return isActive.value && isTop.value\n    }\n\n    IN_BROWSER && watch(isActive, val => {\n      if (val) {\n        window.addEventListener('keydown', onKeydown)\n      } else {\n        window.removeEventListener('keydown', onKeydown)\n      }\n    }, { immediate: true })\n\n    function onKeydown (e: KeyboardEvent) {\n      if (e.key === 'Escape' && isTop.value) {\n        if (!props.persistent) {\n          isActive.value = false\n        } else animateClick()\n      }\n    }\n\n    useBackButton(next => {\n      if (isTop.value && isActive.value) {\n        next(false)\n        if (!props.persistent) isActive.value = false\n        else animateClick()\n      } else {\n        next()\n      }\n    })\n\n    const top = ref<number>()\n    watch(() => isActive.value && (props.absolute || props.contained) && teleportTarget.value == null, val => {\n      if (val) {\n        const scrollParent = getScrollParent(root.value)\n        if (scrollParent && scrollParent !== document.scrollingElement) {\n          top.value = scrollParent.scrollTop\n        }\n      }\n    })\n\n    // Add a quick \"bounce\" animation to the content\n    function animateClick () {\n      if (props.noClickAnimation) return\n\n      contentEl.value?.animate([\n        { transformOrigin: 'center' },\n        { transform: 'scale(1.03)' },\n        { transformOrigin: 'center' },\n      ], {\n        duration: 150,\n        easing: standardEasing,\n      })\n    }\n\n    const { overlayZIndex } = useOverlay(isActive)\n\n    useRender(() => (\n      <>\n        { slots.activator?.({\n          isActive: isActive.value,\n          props: mergeProps({\n            ref: activatorRef,\n          }, toHandlers(activatorEvents.value), props.activatorProps),\n        }) }\n\n        { IN_BROWSER && (\n          <Teleport\n            disabled={ !teleportTarget.value }\n            to={ teleportTarget.value }\n          >\n            { hasContent.value && (\n              <div\n                class={[\n                  'v-overlay',\n                  {\n                    'v-overlay--absolute': props.absolute || props.contained,\n                    'v-overlay--active': isActive.value,\n                    'v-overlay--contained': props.contained,\n                  },\n                  themeClasses.value,\n                  rtlClasses.value,\n                ]}\n                style={{\n                  top: convertToUnit(top.value),\n                  zIndex: overlayZIndex.value,\n                }}\n                ref={ root }\n                {...attrs}\n              >\n                <Scrim\n                  color={ scrimColor }\n                  modelValue={ isActive.value && !!props.scrim }\n                />\n                <MaybeTransition\n                  appear\n                  persisted\n                  transition={ props.transition }\n                  target={ activatorEl.value }\n                  onAfterLeave={() => { onAfterLeave(); emit('afterLeave') }}\n                >\n                  <div\n                    ref={ contentEl }\n                    v-show={ isActive.value }\n                    v-click-outside={{ handler: onClickOutside, closeConditional, include: () => [activatorEl.value] }}\n                    class={[\n                      'v-overlay__content',\n                      props.contentClass,\n                    ]}\n                    style={[\n                      dimensionStyles.value,\n                      contentStyles.value,\n                    ]}\n                  >\n                    { slots.default?.({ isActive }) }\n                  </div>\n                </MaybeTransition>\n              </div>\n            )}\n          </Teleport>\n        ) }\n      </>\n    ))\n\n    return {\n      animateClick,\n      contentEl,\n      activatorEl,\n    }\n  },\n})\n\nexport type VOverlay = InstanceType<typeof VOverlay>\n"]},"metadata":{},"sourceType":"module"}