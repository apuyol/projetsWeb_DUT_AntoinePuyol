{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = [\"src\"];\nconst _hoisted_2 = {\n  ref: \"can\",\n  style: {\n    \"width\": \"100%\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_yourPanZoom = _resolveComponent(\"yourPanZoom\");\n\n  return _openBlock(), _createBlock(_component_yourPanZoom, {\n    selector: \".zoomable\",\n    style: {\n      \"width\": \"100% height: 100%\"\n    }\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"img\", {\n      src: $data.image,\n      style: {\n        \"object-fit\": \"contain\",\n        \"width\": \"100%\",\n        \"height\": \"100%\"\n      },\n      class: \"zoomable\",\n      id: \"image\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_1), _createElementVNode(\"canvas\", _hoisted_2, null, 512\n    /* NEED_PATCH */\n    )]),\n    _: 1\n    /* STABLE */\n\n  });\n}","map":{"version":3,"mappings":";;;AAQYA,KAAG,EAAC;AAAMC,OAAmB,EAAnB;AAAA;AAAA;;;;;uBAPpBC,aAQcC,sBARd,EAQc;AARDC,YAAQ,EAAC,WAQR;AARoBH,SAAgC,EAAhC;AAAA;AAAA;AAQpB,GARd;sBACE,MAKE,CALFI,oBAKE,KALF,EAKE;AAJCC,SAAG,EAAEC,WAIN;AAHAN,WAAsD,EAAtD;AAAA;AAAA;AAAA;AAAA,OAGA;AAFAO,WAAK,EAAC,UAEN;AADAC,QAAE,EAAC;AACH,KALF;;AAAA,iBAKE,EACFJ,oBAA+C,QAA/C,cAA+C,IAA/C,EAA+C;AAAA;AAA/C,KADE;;;;GANJ","names":["ref","style","_createBlock","_component_yourPanZoom","selector","_createElementVNode","src","$data","class","id"],"sourceRoot":"","sources":["D:\\Stage\\App\\xr-place-application\\client\\src\\components\\RightPanel.vue"],"sourcesContent":["<template>\n  <yourPanZoom selector=\".zoomable\" style=\"width: 100% height: 100%\">\n    <img\n      :src=\"image\"\n      style=\"object-fit: contain; width: 100%; height: 100%\"\n      class=\"zoomable\"\n      id=\"image\"\n    />\n    <canvas ref=\"can\" style=\"width: 100%\"></canvas>\n  </yourPanZoom>\n</template>\n\n<script>\nimport image from \"./ressources/planIUT.png\";\nimport { fabric } from \"fabric\";\n\nexport default {\n  mounted() {\n    const ref = this.$refs.can;\n    const canvas = new fabric.Canvas(ref);\n    fabric.Image.fromURL(image, function (oImg) {\n      oImg.scale(0.5).set(\"flipX\", true);\n      canvas.add(oImg);\n    });\n    const rect = new fabric.Rect({\n      fill: \"red\",\n      width: 20,\n      height: 20,\n    });\n    canvas.add(rect);\n  },\n\n  data() {\n    return {\n      image: image,\n    };\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}