{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport PopupComponent from \"./Popup/PopupMyComponents.vue\";\nvar sphereId = 0;\nvar textId = 0;\nvar imageId = 0;\nexport default {\n  components: {\n    PopupComponent: PopupComponent\n  },\n  data: function data() {\n    return {\n      popupOpen: false,\n      spheres: [{\n        id: sphereId++,\n        name: \"sphere 1\"\n      }, {\n        id: sphereId++,\n        name: \"sphere 2\"\n      }, {\n        id: sphereId++,\n        name: \"sphere 3\"\n      }],\n      texts: [{\n        id: textId++,\n        name: \"texte 1\",\n        txt: \"I am text 1\"\n      }, {\n        id: textId++,\n        name: \"texte 2\",\n        txt: \"I am text 1\"\n      }, {\n        id: textId++,\n        name: \"texte 3\",\n        txt: \"I am text 1\"\n      }],\n      images: []\n    };\n  },\n  methods: {\n    addSphere: function addSphere(n) {\n      this.spheres.push({\n        id: sphereId++,\n        name: n\n      });\n    },\n    addText: function addText(n, t) {\n      this.texts.push({\n        id: textId++,\n        name: n,\n        txt: t\n      });\n    },\n    addImage: function addImage(n, f) {\n      this.images.push({\n        id: imageId++,\n        name: n,\n        file: f\n      });\n    },\n    remove: function remove(component, type) {\n      if (type == \"sphere\") {\n        this.spheres = this.spheres.filter(function (t) {\n          return t !== component;\n        });\n      } else if (type == \"text\") {\n        this.texts = this.texts.filter(function (t) {\n          return t !== component;\n        });\n      } else if (type == \"image\") {\n        this.images = this.images.filter(function (t) {\n          return t !== component;\n        });\n      }\n    },\n    openOrClosePopup: function openOrClosePopup() {\n      this.popupOpen = !this.popupOpen;\n    },\n    openOrCloseEditPopup: function openOrCloseEditPopup() {\n      this.popupOpen = !this.popupOpen;\n    }\n  }\n};","map":{"version":3,"mappings":";;AA2FA,OAAOA,cAAP,MAA2B,+BAA3B;AAEA,IAAIC,QAAO,GAAI,CAAf;AACA,IAAIC,MAAK,GAAI,CAAb;AACA,IAAIC,OAAM,GAAI,CAAd;AAEA,eAAe;AACbC,YAAU,EAAE;AAAEJ,kBAAa,EAAbA;AAAF,GADC;AAGbK,MAHa,kBAGN;AACL,WAAO;AACLC,eAAS,EAAE,KADN;AAELC,aAAO,EAAE,CACP;AAAEC,UAAE,EAAEP,QAAQ,EAAd;AAAkBQ,YAAI,EAAE;AAAxB,OADO,EAEP;AAAED,UAAE,EAAEP,QAAQ,EAAd;AAAkBQ,YAAI,EAAE;AAAxB,OAFO,EAGP;AAAED,UAAE,EAAEP,QAAQ,EAAd;AAAkBQ,YAAI,EAAE;AAAxB,OAHO,CAFJ;AAOLC,WAAK,EAAE,CACL;AAAEF,UAAE,EAAEN,MAAM,EAAZ;AAAgBO,YAAI,EAAE,SAAtB;AAAiCE,WAAG,EAAE;AAAtC,OADK,EAEL;AAAEH,UAAE,EAAEN,MAAM,EAAZ;AAAgBO,YAAI,EAAE,SAAtB;AAAiCE,WAAG,EAAE;AAAtC,OAFK,EAGL;AAAEH,UAAE,EAAEN,MAAM,EAAZ;AAAgBO,YAAI,EAAE,SAAtB;AAAiCE,WAAG,EAAE;AAAtC,OAHK,CAPF;AAYLC,YAAM,EAAE;AAZH,KAAP;AAcD,GAlBY;AAmBbC,SAAO,EAAE;AACPC,aADO,qBACGC,CADH,EACM;AACX,WAAKR,OAAL,CAAaS,IAAb,CAAkB;AAAER,UAAE,EAAEP,QAAQ,EAAd;AAAkBQ,YAAI,EAAEM;AAAxB,OAAlB;AACD,KAHM;AAIPE,WAJO,mBAICF,CAJD,EAIIG,CAJJ,EAIO;AACZ,WAAKR,KAAL,CAAWM,IAAX,CAAgB;AAAER,UAAE,EAAEN,MAAM,EAAZ;AAAgBO,YAAI,EAAEM,CAAtB;AAAyBJ,WAAG,EAAEO;AAA9B,OAAhB;AACD,KANM;AAOPC,YAPO,oBAOEJ,CAPF,EAOKK,CAPL,EAOQ;AACb,WAAKR,MAAL,CAAYI,IAAZ,CAAiB;AAAER,UAAE,EAAEL,OAAO,EAAb;AAAiBM,YAAI,EAAEM,CAAvB;AAA0BM,YAAI,EAAED;AAAhC,OAAjB;AACD,KATM;AAUPE,UAVO,kBAUAC,SAVA,EAUWC,IAVX,EAUiB;AACtB,UAAIA,IAAG,IAAK,QAAZ,EAAsB;AACpB,aAAKjB,OAAL,GAAe,KAAKA,OAAL,CAAakB,MAAb,CAAoB,UAACP,CAAD;AAAA,iBAAOA,MAAMK,SAAb;AAAA,SAApB,CAAf;AACF,OAFA,MAEO,IAAIC,IAAG,IAAK,MAAZ,EAAoB;AACzB,aAAKd,KAAL,GAAa,KAAKA,KAAL,CAAWe,MAAX,CAAkB,UAACP,CAAD;AAAA,iBAAOA,MAAMK,SAAb;AAAA,SAAlB,CAAb;AACF,OAFO,MAEA,IAAIC,IAAG,IAAK,OAAZ,EAAqB;AAC1B,aAAKZ,MAAL,GAAc,KAAKA,MAAL,CAAYa,MAAZ,CAAmB,UAACP,CAAD;AAAA,iBAAOA,MAAMK,SAAb;AAAA,SAAnB,CAAd;AACF;AACD,KAlBM;AAmBPG,oBAnBO,8BAmBY;AACjB,WAAKpB,SAAL,GAAiB,CAAC,KAAKA,SAAvB;AACD,KArBM;AAsBPqB,wBAtBO,kCAsBgB;AACrB,WAAKrB,SAAL,GAAiB,CAAC,KAAKA,SAAvB;AACD;AAxBM;AAnBI,CAAf","names":["PopupComponent","sphereId","textId","imageId","components","data","popupOpen","spheres","id","name","texts","txt","images","methods","addSphere","n","push","addText","t","addImage","f","file","remove","component","type","filter","openOrClosePopup","openOrCloseEditPopup"],"sourceRoot":"","sources":["D:\\Stage\\App\\xr-place-application\\client\\src\\components\\MyComponents.vue"],"sourcesContent":["<template>\r\n  <PopupComponent\r\n    v-if=\"popupOpen\"\r\n    :status=\"openOrClosePopup\"\r\n    :addSphere=\"addSphere\"\r\n    :addImage=\"addImage\"\r\n    :addText=\"addText\"\r\n  />\r\n  <h3>Spheres</h3>\r\n  <ul>\r\n    <li v-for=\"sphere in spheres\" :key=\"sphere.id\" class=\"scene\">\r\n      <v-btn\r\n        icon=\"mdi-cog\"\r\n        color=\"#607D8B\"\r\n        size=\"25\"\r\n        variant=\"outlined\"\r\n      ></v-btn>\r\n      <p>{{ sphere.name }}</p>\r\n      <v-btn\r\n        icon=\"mdi-close\"\r\n        color=\"#EF5350\"\r\n        size=\"25\"\r\n        variant=\"outlined\"\r\n        @click=\"removeDoor(component, 'sphere')\"\r\n      ></v-btn>\r\n    </li>\r\n  </ul>\r\n  <h3>Textes</h3>\r\n  <ul>\r\n    <li v-for=\"text in texts\" :key=\"text.id\" class=\"scene\">\r\n      <v-btn\r\n        icon=\"mdi-cog\"\r\n        color=\"#607D8B\"\r\n        size=\"25\"\r\n        variant=\"outlined\"\r\n      ></v-btn>\r\n      <p>{{ text.name }}</p>\r\n      <v-btn\r\n        icon=\"mdi-close\"\r\n        color=\"#EF5350\"\r\n        size=\"25\"\r\n        variant=\"outlined\"\r\n        @click=\"removeDoor(component, 'text')\"\r\n      ></v-btn>\r\n    </li>\r\n  </ul>\r\n  <h3>Images</h3>\r\n  <ul>\r\n    <li v-for=\"image in images\" :key=\"image.id\" class=\"scene\">\r\n      <v-btn\r\n        icon=\"mdi-cog\"\r\n        color=\"#607D8B\"\r\n        size=\"25\"\r\n        variant=\"outlined\"\r\n      ></v-btn>\r\n      <p>{{ image.name }}</p>\r\n      <v-btn\r\n        icon=\"mdi-close\"\r\n        color=\"#EF5350\"\r\n        size=\"25\"\r\n        variant=\"outlined\"\r\n        @click=\"removeDoor(component, 'image')\"\r\n      ></v-btn>\r\n    </li>\r\n  </ul>\r\n  <div class=\"scene\" style=\"width: 100%\">\r\n    <v-btn\r\n      icon=\"mdi-plus\"\r\n      color=\"#81C784\"\r\n      class=\"add\"\r\n      size=\"25\"\r\n      variant=\"outlined\"\r\n      @click=\"openOrClosePopup\"\r\n    ></v-btn>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.scene {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 5%;\r\n}\r\n\r\n.add {\r\n  display: flex;\r\n  margin-left: auto;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport PopupComponent from \"./Popup/PopupMyComponents.vue\";\r\n\r\nlet sphereId = 0;\r\nlet textId = 0;\r\nlet imageId = 0;\r\n\r\nexport default {\r\n  components: { PopupComponent },\r\n\r\n  data() {\r\n    return {\r\n      popupOpen: false,\r\n      spheres: [\r\n        { id: sphereId++, name: \"sphere 1\" },\r\n        { id: sphereId++, name: \"sphere 2\" },\r\n        { id: sphereId++, name: \"sphere 3\" },\r\n      ],\r\n      texts: [\r\n        { id: textId++, name: \"texte 1\", txt: \"I am text 1\" },\r\n        { id: textId++, name: \"texte 2\", txt: \"I am text 1\" },\r\n        { id: textId++, name: \"texte 3\", txt: \"I am text 1\" },\r\n      ],\r\n      images: [],\r\n    };\r\n  },\r\n  methods: {\r\n    addSphere(n) {\r\n      this.spheres.push({ id: sphereId++, name: n });\r\n    },\r\n    addText(n, t) {\r\n      this.texts.push({ id: textId++, name: n, txt: t });\r\n    },\r\n    addImage(n, f) {\r\n      this.images.push({ id: imageId++, name: n, file: f });\r\n    },\r\n    remove(component, type) {\r\n      if (type == \"sphere\") {\r\n        this.spheres = this.spheres.filter((t) => t !== component);\r\n      } else if (type == \"text\") {\r\n        this.texts = this.texts.filter((t) => t !== component);\r\n      } else if (type == \"image\") {\r\n        this.images = this.images.filter((t) => t !== component);\r\n      }\r\n    },\r\n    openOrClosePopup() {\r\n      this.popupOpen = !this.popupOpen;\r\n    },\r\n    openOrCloseEditPopup() {\r\n      this.popupOpen = !this.popupOpen;\r\n    },\r\n  },\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}