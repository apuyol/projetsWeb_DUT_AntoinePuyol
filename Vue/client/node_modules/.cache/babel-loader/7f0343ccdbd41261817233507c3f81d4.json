{"ast":null,"code":"import image from \"./ressources/planIUT.png\";\nimport { fabric } from \"fabric\";\nlet canva = null;\nexport default {\n  emits: [\"myCanva\"],\n\n  mounted() {\n    var canvas = new fabric.Canvas(\"c\");\n    fabric.Image.fromURL(image, function (oImg) {\n      canvas.setDimensions({\n        width: oImg.width,\n        height: oImg.height\n      });\n      canvas.setBackgroundImage(oImg);\n    }); // Zoom du site de fabric\n\n    canvas.on(\"mouse:wheel\", function (opt) {\n      var delta = opt.e.deltaY;\n      var zoom = canvas.getZoom();\n      zoom *= 0.999 ** delta;\n      if (zoom > 20) zoom = 20;\n      if (zoom < 0.01) zoom = 0.01;\n      canvas.setZoom(zoom);\n      opt.e.preventDefault();\n      opt.e.stopPropagation();\n    });\n    canvas.width = 500;\n    canva = canvas;\n    this.$emit(\"myCanva\", canvas);\n  },\n\n  methods: {\n    getPos(image) {\n      console.log(this.$refs.image.getBoundingClientRect().left);\n      console.log(this.$refs.image.getBoundingClientRect().top);\n    },\n\n    test() {\n      console.log(canva.item(1).center());\n    },\n\n    getMouseCoords(event) {\n      var pointer = canva.getPointer(event.e);\n      var posX = pointer.x;\n      var posY = pointer.y;\n      console.log(posX + \", \" + posY); // Log to console\n    }\n\n  },\n\n  data() {\n    return {\n      image: image\n    };\n  }\n\n};","map":{"version":3,"mappings":"AAMA,OAAOA,KAAP,MAAkB,0BAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,IAAIC,KAAI,GAAI,IAAZ;AACA,eAAe;AACbC,OAAK,EAAE,CAAC,SAAD,CADM;;AAEbC,SAAO,GAAG;AACR,QAAIC,MAAK,GAAI,IAAIJ,MAAM,CAACK,MAAX,CAAkB,GAAlB,CAAb;AAEAL,UAAM,CAACM,KAAP,CAAaC,OAAb,CAAqBR,KAArB,EAA4B,UAAUS,IAAV,EAAgB;AAC1CJ,YAAM,CAACK,aAAP,CAAqB;AAAEC,aAAK,EAAEF,IAAI,CAACE,KAAd;AAAqBC,cAAM,EAAEH,IAAI,CAACG;AAAlC,OAArB;AACAP,YAAM,CAACQ,kBAAP,CAA0BJ,IAA1B;AACD,KAHD,EAHQ,CAOR;;AACAJ,UAAM,CAACS,EAAP,CAAU,aAAV,EAAyB,UAAUC,GAAV,EAAe;AACtC,UAAIC,KAAI,GAAID,GAAG,CAACE,CAAJ,CAAMC,MAAlB;AACA,UAAIC,IAAG,GAAId,MAAM,CAACe,OAAP,EAAX;AACAD,UAAG,IAAK,SAASH,KAAjB;AACA,UAAIG,IAAG,GAAI,EAAX,EAAeA,IAAG,GAAI,EAAP;AACf,UAAIA,IAAG,GAAI,IAAX,EAAiBA,IAAG,GAAI,IAAP;AACjBd,YAAM,CAACgB,OAAP,CAAeF,IAAf;AACAJ,SAAG,CAACE,CAAJ,CAAMK,cAAN;AACAP,SAAG,CAACE,CAAJ,CAAMM,eAAN;AACD,KATD;AAUAlB,UAAM,CAACM,KAAP,GAAe,GAAf;AACAT,SAAI,GAAIG,MAAR;AACA,SAAKmB,KAAL,CAAW,SAAX,EAAsBnB,MAAtB;AACD,GAvBY;;AAwBboB,SAAO,EAAE;AACPC,UAAM,CAAC1B,KAAD,EAAQ;AACZ2B,aAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAW7B,KAAX,CAAiB8B,qBAAjB,GAAyCC,IAArD;AACAJ,aAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAW7B,KAAX,CAAiB8B,qBAAjB,GAAyCE,GAArD;AACD,KAJM;;AAKPC,QAAI,GAAG;AACLN,aAAO,CAACC,GAAR,CAAY1B,KAAK,CAACgC,IAAN,CAAW,CAAX,EAAcC,MAAd,EAAZ;AACD,KAPM;;AAQPC,kBAAc,CAACC,KAAD,EAAQ;AACpB,UAAIC,OAAM,GAAIpC,KAAK,CAACqC,UAAN,CAAiBF,KAAK,CAACpB,CAAvB,CAAd;AACA,UAAIuB,IAAG,GAAIF,OAAO,CAACG,CAAnB;AACA,UAAIC,IAAG,GAAIJ,OAAO,CAACK,CAAnB;AACAhB,aAAO,CAACC,GAAR,CAAYY,IAAG,GAAI,IAAP,GAAcE,IAA1B,EAJoB,CAIa;AAClC;;AAbM,GAxBI;;AAuCbE,MAAI,GAAG;AACL,WAAO;AACL5C,WAAK,EAAEA;AADF,KAAP;AAGD;;AA3CY,CAAf","names":["image","fabric","canva","emits","mounted","canvas","Canvas","Image","fromURL","oImg","setDimensions","width","height","setBackgroundImage","on","opt","delta","e","deltaY","zoom","getZoom","setZoom","preventDefault","stopPropagation","$emit","methods","getPos","console","log","$refs","getBoundingClientRect","left","top","test","item","center","getMouseCoords","event","pointer","getPointer","posX","x","posY","y","data"],"sourceRoot":"","sources":["D:\\Stage\\App\\xr-place-application\\client\\src\\components\\RightPanel.vue"],"sourcesContent":["<template>\n  <canvas id=\"c\" @click=\"test\"></canvas>\n  <button @click=\"test\">test</button>\n</template>\n\n<script>\nimport image from \"./ressources/planIUT.png\";\nimport { fabric } from \"fabric\";\n\nlet canva = null;\nexport default {\n  emits: [\"myCanva\"],\n  mounted() {\n    var canvas = new fabric.Canvas(\"c\");\n\n    fabric.Image.fromURL(image, function (oImg) {\n      canvas.setDimensions({ width: oImg.width, height: oImg.height });\n      canvas.setBackgroundImage(oImg);\n    });\n    // Zoom du site de fabric\n    canvas.on(\"mouse:wheel\", function (opt) {\n      var delta = opt.e.deltaY;\n      var zoom = canvas.getZoom();\n      zoom *= 0.999 ** delta;\n      if (zoom > 20) zoom = 20;\n      if (zoom < 0.01) zoom = 0.01;\n      canvas.setZoom(zoom);\n      opt.e.preventDefault();\n      opt.e.stopPropagation();\n    });\n    canvas.width = 500;\n    canva = canvas;\n    this.$emit(\"myCanva\", canvas);\n  },\n  methods: {\n    getPos(image) {\n      console.log(this.$refs.image.getBoundingClientRect().left);\n      console.log(this.$refs.image.getBoundingClientRect().top);\n    },\n    test() {\n      console.log(canva.item(1).center());\n    },\n    getMouseCoords(event) {\n      var pointer = canva.getPointer(event.e);\n      var posX = pointer.x;\n      var posY = pointer.y;\n      console.log(posX + \", \" + posY); // Log to console\n    },\n  },\n  data() {\n    return {\n      image: image,\n    };\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}