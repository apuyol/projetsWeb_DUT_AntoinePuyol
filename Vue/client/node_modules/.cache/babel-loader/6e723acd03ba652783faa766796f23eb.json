{"ast":null,"code":"import _createForOfIteratorHelper from \"D:/Stage/App/xr-place-application/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\n// Utilities\nimport { computed } from 'vue';\nimport { getCurrentInstanceName, propsFactory } from \"../util/index.mjs\"; // Types\n// Composables\n\nexport var makeBorderProps = propsFactory({\n  border: [Boolean, Number, String]\n}, 'border');\nexport function useBorder(props) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCurrentInstanceName();\n  var borderClasses = computed(function () {\n    var classes = [];\n\n    if (props.border != null && props.border !== false) {\n      classes.push(\"\".concat(name, \"--border\"));\n    }\n\n    if (typeof props.border === 'string' && props.border !== '' || props.border === 0) {\n      var _iterator = _createForOfIteratorHelper(String(props.border).split(' ')),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var value = _step.value;\n          classes.push(\"border-\".concat(value));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n\n    return classes;\n  });\n  return {\n    borderClasses: borderClasses\n  };\n}","map":{"version":3,"mappings":";;;;AAAA;AACA,SAASA,QAAT,QAAyB,KAAzB;SACSC,wBAAwBC,oB,qBAEjC;AAKA;;AACA,OAAO,IAAMC,eAAe,GAAGD,YAAY,CAAC;AAC1CE,QAAM,EAAE,CAACC,OAAD,EAAUC,MAAV,EAAkBC,MAAlB;AADkC,CAAD,EAExC,QAFwC,CAApC;AAIP,OAAO,SAASC,SAAT,CACLC,KADK,EAGL;AAAA,MADAC,IACA,uEADOT,sBAAsB,EAC7B;AACA,MAAMU,aAAa,GAAGX,QAAQ,CAAC,YAAM;AACnC,QAAMY,OAAiB,GAAG,EAA1B;;AAEA,QAAIH,KAAK,CAACL,MAANK,IAAgB,IAAhBA,IAAwBA,KAAK,CAACL,MAANK,KAAiB,KAA7C,EAAoD;AAClDG,aAAO,CAACC,IAARD,WAAgBF,IAAhBE;AACD;;AAED,QACG,OAAOH,KAAK,CAACL,MAAb,KAAwB,QAAxB,IAAoCK,KAAK,CAACL,MAANK,KAAiB,EAArD,IACDA,KAAK,CAACL,MAANK,KAAiB,CAFnB,EAGE;AAAA,iDACoBF,MAAM,CAACE,KAAK,CAACL,MAAP,CAANG,CAAqBO,KAArBP,CAA2B,GAA3BA,CADpB;AAAA;;AAAA;AACA,4DAAqD;AAAA,cAA1CQ,KAA0C;AACnDH,iBAAO,CAACC,IAARD,kBAAuBG,KAAvBH;AACD;AAHD;AAAA;AAAA;AAAA;AAAA;AAID;;AAED,WAAOA,OAAP;AAhB4B,IAA9B;AAmBA,SAAO;AAAED;AAAF,GAAP;AACD","names":["computed","getCurrentInstanceName","propsFactory","makeBorderProps","border","Boolean","Number","String","useBorder","props","name","borderClasses","classes","push","split","value"],"sources":["../../src/composables/border.ts"],"sourcesContent":["// Utilities\nimport { computed } from 'vue'\nimport { getCurrentInstanceName, propsFactory } from '@/util'\n\n// Types\nexport interface BorderProps {\n  border?: boolean | number | string\n}\n\n// Composables\nexport const makeBorderProps = propsFactory({\n  border: [Boolean, Number, String],\n}, 'border')\n\nexport function useBorder (\n  props: BorderProps,\n  name = getCurrentInstanceName(),\n) {\n  const borderClasses = computed(() => {\n    const classes: string[] = []\n\n    if (props.border != null && props.border !== false) {\n      classes.push(`${name}--border`)\n    }\n\n    if (\n      (typeof props.border === 'string' && props.border !== '') ||\n      props.border === 0\n    ) {\n      for (const value of String(props.border).split(' ')) {\n        classes.push(`border-${value}`)\n      }\n    }\n\n    return classes\n  })\n\n  return { borderClasses }\n}\n"]},"metadata":{},"sourceType":"module"}