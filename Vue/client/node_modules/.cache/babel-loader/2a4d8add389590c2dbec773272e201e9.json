{"ast":null,"code":"import _objectSpread from \"D:/Stage/App/xr-place-application/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VIcon.css\"; // Composables\n\nimport { makeSizeProps, useSize } from \"../../composables/size.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { useIcon } from \"../../composables/icons.mjs\";\nimport { useTextColor } from \"../../composables/color.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\"; // Utilities\n\nimport { computed, toRef } from 'vue';\nimport { convertToUnit, defineComponent, flattenFragments, propsFactory } from \"../../util/index.mjs\"; // Types\n\nexport var makeVIconProps = propsFactory(_objectSpread(_objectSpread(_objectSpread({\n  color: String,\n  start: Boolean,\n  end: Boolean,\n  icon: {\n    type: [String, Object]\n  }\n}, makeSizeProps()), makeTagProps({\n  tag: 'i'\n})), makeThemeProps()), 'v-icon');\nexport var VIcon = defineComponent({\n  name: 'VIcon',\n  props: makeVIconProps(),\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var slotIcon;\n\n    if (slots[\"default\"]) {\n      slotIcon = computed(function () {\n        var _slots$default, _flattenFragments$fil;\n\n        var slot = (_slots$default = slots[\"default\"]) == null ? void 0 : _slots$default.call(slots);\n        if (!slot) return;\n        return (_flattenFragments$fil = flattenFragments(slot).filter(function (node) {\n          return node.children && typeof node.children === 'string';\n        })[0]) == null ? void 0 : _flattenFragments$fil.children;\n      });\n    }\n\n    var _provideTheme = provideTheme(props),\n        themeClasses = _provideTheme.themeClasses;\n\n    var _useIcon = useIcon(slotIcon || props),\n        iconData = _useIcon.iconData;\n\n    var _useSize = useSize(props),\n        sizeClasses = _useSize.sizeClasses;\n\n    var _useTextColor = useTextColor(toRef(props, 'color')),\n        textColorClasses = _useTextColor.textColorClasses,\n        textColorStyles = _useTextColor.textColorStyles;\n\n    return function () {\n      return _createVNode(iconData.value.component, {\n        \"tag\": props.tag,\n        \"icon\": iconData.value.icon,\n        \"class\": ['v-icon', 'notranslate', sizeClasses.value, textColorClasses.value, themeClasses.value, {\n          'v-icon--start': props.start,\n          'v-icon--end': props.end\n        }],\n        \"style\": [!sizeClasses.value ? {\n          fontSize: convertToUnit(props.size),\n          width: convertToUnit(props.size),\n          height: convertToUnit(props.size)\n        } : undefined, textColorStyles.value],\n        \"aria-hidden\": \"true\"\n      }, null);\n    };\n  }\n});","map":{"version":3,"mappings":";;;mDAAA;;AACA,qB,CAEA;;SACSA,eAAeC,e;SACfC,oB;SACAC,e;SACAC,oB;SACAC,gBAAgBC,oB,+BAEzB;;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,KAAhC;SACSC,eAAeC,iBAAiBC,kBAAkBC,oB,wBAE3D;;AAIA,OAAO,IAAMC,cAAc,GAAGD,YAAY;AACxCE,OAAK,EAAEC,MADiC;AAExCC,OAAK,EAAEC,OAFiC;AAGxCC,KAAG,EAAED,OAHmC;AAIxCE,MAAI,EAAE;AACJC,QAAI,EAAE,CAACL,MAAD,EAASM,MAAT;AADF;AAJkC,GAQrCrB,aAAa,EARwB,GASrCE,YAAY,CAAC;AAAEoB,KAAG,EAAE;AAAP,CAAD,CATyB,GAUrCjB,cAAc,EAVuB,GAWvC,QAXuC,CAAnC;AAaP,OAAO,IAAMkB,KAAK,GAAGb,eAAe,CAAC;AACnCc,MAAI,EAAE,OAD6B;AAGnCC,OAAK,EAAEZ,cAAc,EAHc;AAKnCa,OALmC,iBAK5BD,KAL4B,EAK9BE,IAL8B,EAKV;AAAA,QAATC,KAAS,QAATA,KAAS;AACvB,QAAIC,QAAJ;;AACA,QAAID,KAAK,WAAT,EAAmB;AACjBC,cAAQ,GAAGtB,QAAQ,CAAC,YAAM;AAAA;;AACxB,YAAMuB,IAAI,qBAAGF,KAAK,WAAR,qBAAGG,0BAAb;AACA,YAAI,CAACD,IAAL,EAAW;AAEX,wCAAOnB,gBAAgB,CAACmB,IAAD,CAAhBnB,CAAuBqB,MAAvBrB,CAA8BsB,cAAI;AAAA,iBACvCA,IAAI,CAACC,QAALD,IAAiB,OAAOA,IAAI,CAACC,QAAZ,KAAyB,QADH;AAAA,SAAlCvB,EAEL,CAFKA,CAAP,qBAAOwB,sBAEDD,QAFN;AAJiB,QAAnBL;AAQD;;AAED,wBAAyBvB,YAAY,CAACmB,KAAD,CAArC;AAAA,QAAQW,YAAR,iBAAQA,YAAR;;AACA,mBAAqBjC,OAAO,CAAC0B,QAAQ,IAAIJ,KAAb,CAA5B;AAAA,QAAQY,QAAR,YAAQA,QAAR;;AACA,mBAAwBpC,OAAO,CAACwB,KAAD,CAA/B;AAAA,QAAQa,WAAR,YAAQA,WAAR;;AACA,wBAA8ClC,YAAY,CAACI,KAAK,CAACiB,KAAD,EAAQ,OAAR,CAAN,CAA1D;AAAA,QAAQc,gBAAR,iBAAQA,gBAAR;AAAA,QAA0BC,eAA1B,iBAA0BA,eAA1B;;AAEA,WAAO,YAAM;AACX;AAAA,eAEUf,KAAK,CAACH,GAFhB;AAAA,gBAGWe,QAAQ,CAACI,KAATJ,CAAelB,IAH1B;AAAA,iBAIW,CACL,QADK,EAEL,aAFK,EAGLmB,WAAW,CAACG,KAHP,EAILF,gBAAgB,CAACE,KAJZ,EAKLL,YAAY,CAACK,KALR,EAML;AACE,2BAAiBhB,KAAK,CAACT,KADzB;AAEE,yBAAeS,KAAK,CAACP;AAFvB,SANK,CAJX;AAAA,iBAeW,CACL,CAACoB,WAAW,CAACG,KAAb,GAAsB;AACpBC,kBAAQ,EAAEjC,aAAa,CAACgB,KAAK,CAACkB,IAAP,CADH;AAEpBC,eAAK,EAAEnC,aAAa,CAACgB,KAAK,CAACkB,IAAP,CAFA;AAGpBE,gBAAM,EAAEpC,aAAa,CAACgB,KAAK,CAACkB,IAAP;AAHD,SAAtB,GAIKG,SALA,EAMLN,eAAe,CAACC,KANX,CAfX;AAAA,uBAuBgB;AAvBhB;AADF;AA4BD;AAnDkC,CAAD,CAA7B","names":["makeSizeProps","useSize","makeTagProps","useIcon","useTextColor","makeThemeProps","provideTheme","computed","toRef","convertToUnit","defineComponent","flattenFragments","propsFactory","makeVIconProps","color","String","start","Boolean","end","icon","type","Object","tag","VIcon","name","props","setup","_ref","slots","slotIcon","slot","_slots$default","filter","node","children","_flattenFragments$fil","themeClasses","iconData","sizeClasses","textColorClasses","textColorStyles","value","fontSize","size","width","height","undefined"],"sources":["../../../src/components/VIcon/VIcon.tsx"],"sourcesContent":["// Styles\nimport './VIcon.sass'\n\n// Composables\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { useIcon } from '@/composables/icons'\nimport { useTextColor } from '@/composables/color'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, defineComponent, flattenFragments, propsFactory } from '@/util'\n\n// Types\nimport type { IconValue } from '@/composables/icons'\nimport type { ComputedRef, PropType } from 'vue'\n\nexport const makeVIconProps = propsFactory({\n  color: String,\n  start: Boolean,\n  end: Boolean,\n  icon: {\n    type: [String, Object] as PropType<IconValue>,\n  },\n\n  ...makeSizeProps(),\n  ...makeTagProps({ tag: 'i' }),\n  ...makeThemeProps(),\n}, 'v-icon')\n\nexport const VIcon = defineComponent({\n  name: 'VIcon',\n\n  props: makeVIconProps(),\n\n  setup (props, { slots }) {\n    let slotIcon: ComputedRef<string | undefined> | undefined\n    if (slots.default) {\n      slotIcon = computed(() => {\n        const slot = slots.default?.()\n        if (!slot) return\n\n        return flattenFragments(slot).filter(node =>\n          node.children && typeof node.children === 'string'\n        )[0]?.children as string\n      })\n    }\n\n    const { themeClasses } = provideTheme(props)\n    const { iconData } = useIcon(slotIcon || props)\n    const { sizeClasses } = useSize(props)\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'color'))\n\n    return () => {\n      return (\n        <iconData.value.component\n          tag={ props.tag }\n          icon={ iconData.value.icon }\n          class={[\n            'v-icon',\n            'notranslate',\n            sizeClasses.value,\n            textColorClasses.value,\n            themeClasses.value,\n            {\n              'v-icon--start': props.start,\n              'v-icon--end': props.end,\n            },\n          ]}\n          style={[\n            !sizeClasses.value ? ({\n              fontSize: convertToUnit(props.size),\n              width: convertToUnit(props.size),\n              height: convertToUnit(props.size),\n            }) : undefined,\n            textColorStyles.value,\n          ]}\n          aria-hidden=\"true\"\n        />\n      )\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}