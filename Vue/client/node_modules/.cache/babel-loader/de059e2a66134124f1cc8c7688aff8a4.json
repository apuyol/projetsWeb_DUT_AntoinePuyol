{"ast":null,"code":"import _objectSpread from \"D:/Stage/App/xr-place-application/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport { resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VInput.css\"; // Components\n\nimport { VIcon } from \"../VIcon/index.mjs\";\nimport { VMessages } from \"../VMessages/index.mjs\"; // Composables\n\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeValidationProps, useValidation } from \"../../composables/validation.mjs\"; // Utilities\n\nimport { computed } from 'vue';\nimport { genericComponent, getUid, pick, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\n\nexport var makeVInputProps = propsFactory(_objectSpread(_objectSpread({\n  id: String,\n  appendIcon: String,\n  prependIcon: String,\n  hideDetails: [Boolean, String],\n  messages: {\n    type: [Array, String],\n    \"default\": function _default() {\n      return [];\n    }\n  },\n  direction: {\n    type: String,\n    \"default\": 'horizontal',\n    validator: function validator(v) {\n      return ['horizontal', 'vertical'].includes(v);\n    }\n  }\n}, makeDensityProps()), makeValidationProps()));\nexport var VInput = genericComponent()({\n  name: 'VInput',\n  props: _objectSpread({}, makeVInputProps()),\n  emits: {\n    'click:prepend': function clickPrepend(e) {\n      return true;\n    },\n    'click:append': function clickAppend(e) {\n      return true;\n    },\n    'update:modelValue': function updateModelValue(val) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots,\n        emit = _ref.emit;\n\n    var _useDensity = useDensity(props),\n        densityClasses = _useDensity.densityClasses;\n\n    var _useValidation = useValidation(props),\n        errorMessages = _useValidation.errorMessages,\n        isDirty = _useValidation.isDirty,\n        isDisabled = _useValidation.isDisabled,\n        isReadonly = _useValidation.isReadonly,\n        isPristine = _useValidation.isPristine,\n        isValid = _useValidation.isValid,\n        isValidating = _useValidation.isValidating,\n        reset = _useValidation.reset,\n        resetValidation = _useValidation.resetValidation,\n        validate = _useValidation.validate,\n        validationClasses = _useValidation.validationClasses;\n\n    var uid = getUid();\n    var id = computed(function () {\n      return props.id || \"input-\".concat(uid);\n    });\n    var slotProps = computed(function () {\n      return {\n        id: id,\n        isDirty: isDirty,\n        isDisabled: isDisabled,\n        isReadonly: isReadonly,\n        isPristine: isPristine,\n        isValid: isValid,\n        isValidating: isValidating,\n        reset: reset,\n        resetValidation: resetValidation,\n        validate: validate\n      };\n    });\n    useRender(function () {\n      var _props$messages, _slots$prepend, _slots$default, _slots$append, _slots$details;\n\n      var hasPrepend = !!(slots.prepend || props.prependIcon);\n      var hasAppend = !!(slots.append || props.appendIcon);\n      var hasMessages = !!((_props$messages = props.messages) != null && _props$messages.length || errorMessages.value.length);\n      var hasDetails = !props.hideDetails || props.hideDetails === 'auto' && hasMessages;\n      return _createVNode(\"div\", {\n        \"class\": ['v-input', \"v-input--\".concat(props.direction), densityClasses.value, validationClasses.value]\n      }, [hasPrepend && _createVNode(\"div\", {\n        \"class\": \"v-input__prepend\"\n      }, [slots == null ? void 0 : (_slots$prepend = slots.prepend) == null ? void 0 : _slots$prepend.call(slots, slotProps.value), props.prependIcon && _createVNode(VIcon, {\n        \"onClick\": function onClick(e) {\n          return emit('click:prepend', e);\n        },\n        \"icon\": props.prependIcon\n      }, null)]), slots[\"default\"] && _createVNode(\"div\", {\n        \"class\": \"v-input__control\"\n      }, [(_slots$default = slots[\"default\"]) == null ? void 0 : _slots$default.call(slots, slotProps.value)]), hasAppend && _createVNode(\"div\", {\n        \"class\": \"v-input__append\"\n      }, [slots == null ? void 0 : (_slots$append = slots.append) == null ? void 0 : _slots$append.call(slots, slotProps.value), props.appendIcon && _createVNode(VIcon, {\n        \"onClick\": function onClick(e) {\n          return emit('click:append', e);\n        },\n        \"icon\": props.appendIcon\n      }, null)]), hasDetails && _createVNode(\"div\", {\n        \"class\": \"v-input__details\"\n      }, [_createVNode(VMessages, {\n        \"active\": hasMessages,\n        \"messages\": errorMessages.value.length > 0 ? errorMessages.value : props.messages\n      }, {\n        message: slots.message\n      }), (_slots$details = slots.details) == null ? void 0 : _slots$details.call(slots, slotProps.value)])]);\n    });\n    return {\n      reset: reset,\n      resetValidation: resetValidation,\n      validate: validate\n    };\n  }\n});\nexport function filterInputProps(props) {\n  return pick(props, Object.keys(VInput.props));\n}","map":{"version":3,"mappings":"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","names":["VIcon","VMessages","makeDensityProps","useDensity","makeValidationProps","useValidation","computed","genericComponent","getUid","pick","propsFactory","useRender","makeVInputProps","id","String","appendIcon","prependIcon","hideDetails","Boolean","messages","type","Array","default","direction","validator","v","includes","VInput","name","props","emits","e","val","setup","_ref","slots","emit","densityClasses","errorMessages","isDirty","isDisabled","isReadonly","isPristine","isValid","isValidating","reset","resetValidation","validate","validationClasses","uid","slotProps","hasPrepend","prepend","hasAppend","append","hasMessages","length","value","hasDetails","_slots$prepend","_slots$default","_slots$append","message","details","_slots$details","filterInputProps","Object","keys"],"sources":["../../../src/components/VInput/VInput.tsx"],"sourcesContent":["// Styles\nimport './VInput.sass'\n\n// Components\nimport { VIcon } from '@/components/VIcon'\nimport { VMessages } from '@/components/VMessages'\n\n// Composables\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeValidationProps, useValidation } from '@/composables/validation'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, getUid, pick, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { ComputedRef, ExtractPropTypes, PropType, Ref } from 'vue'\nimport type { MakeSlots } from '@/util'\n\nexport interface VInputSlot {\n  id: ComputedRef<string>\n  isDirty: ComputedRef<boolean>\n  isDisabled: ComputedRef<boolean>\n  isReadonly: ComputedRef<boolean>\n  isPristine: Ref<boolean>\n  isValid: ComputedRef<boolean | null>\n  isValidating: Ref<boolean>\n  reset: () => void\n  resetValidation: () => void\n  validate: () => void\n}\n\nexport const makeVInputProps = propsFactory({\n  id: String,\n  appendIcon: String,\n  prependIcon: String,\n  hideDetails: [Boolean, String] as PropType<boolean | 'auto'>,\n  messages: {\n    type: [Array, String] as PropType<string | string[]>,\n    default: () => ([]),\n  },\n  direction: {\n    type: String as PropType<'horizontal' | 'vertical'>,\n    default: 'horizontal',\n    validator: (v: any) => ['horizontal', 'vertical'].includes(v),\n  },\n\n  ...makeDensityProps(),\n  ...makeValidationProps(),\n})\n\nexport type VInputSlots = MakeSlots<{\n  default: [VInputSlot]\n  prepend: [VInputSlot]\n  append: [VInputSlot]\n  details: [VInputSlot]\n}>\n\nexport const VInput = genericComponent<new <T>() => {\n  $slots: VInputSlots\n}>()({\n  name: 'VInput',\n\n  props: {\n    ...makeVInputProps(),\n  },\n\n  emits: {\n    'click:prepend': (e: MouseEvent) => true,\n    'click:append': (e: MouseEvent) => true,\n    'update:modelValue': (val: any) => true,\n  },\n\n  setup (props, { slots, emit }) {\n    const { densityClasses } = useDensity(props)\n    const {\n      errorMessages,\n      isDirty,\n      isDisabled,\n      isReadonly,\n      isPristine,\n      isValid,\n      isValidating,\n      reset,\n      resetValidation,\n      validate,\n      validationClasses,\n    } = useValidation(props)\n\n    const uid = getUid()\n    const id = computed(() => props.id || `input-${uid}`)\n\n    const slotProps = computed<VInputSlot>(() => ({\n      id,\n      isDirty,\n      isDisabled,\n      isReadonly,\n      isPristine,\n      isValid,\n      isValidating,\n      reset,\n      resetValidation,\n      validate,\n    }))\n\n    useRender(() => {\n      const hasPrepend = !!(slots.prepend || props.prependIcon)\n      const hasAppend = !!(slots.append || props.appendIcon)\n      const hasMessages = !!(\n        props.messages?.length ||\n        errorMessages.value.length\n      )\n      const hasDetails = !props.hideDetails || (\n        props.hideDetails === 'auto' &&\n        hasMessages\n      )\n\n      return (\n        <div class={[\n          'v-input',\n          `v-input--${props.direction}`,\n          densityClasses.value,\n          validationClasses.value,\n        ]}\n        >\n          { hasPrepend && (\n            <div\n              class=\"v-input__prepend\"\n            >\n              { slots?.prepend?.(slotProps.value) }\n\n              { props.prependIcon && (\n                <VIcon\n                  onClick={ (e: MouseEvent) => emit('click:prepend', e) }\n                  icon={ props.prependIcon }\n                />\n              ) }\n            </div>\n          ) }\n\n          { slots.default && (\n            <div class=\"v-input__control\">\n              { slots.default?.(slotProps.value) }\n            </div>\n          ) }\n\n          { hasAppend && (\n            <div\n              class=\"v-input__append\"\n            >\n              { slots?.append?.(slotProps.value) }\n\n              { props.appendIcon && (\n                <VIcon\n                  onClick={ (e: MouseEvent) => emit('click:append', e) }\n                  icon={ props.appendIcon }\n                />\n              ) }\n            </div>\n          ) }\n\n          { hasDetails && (\n            <div class=\"v-input__details\">\n              <VMessages\n                active={ hasMessages }\n                messages={ errorMessages.value.length > 0\n                  ? errorMessages.value\n                  : props.messages\n                }\n                v-slots={{ message: slots.message }}\n              />\n\n              { slots.details?.(slotProps.value) }\n            </div>\n          ) }\n        </div>\n      )\n    })\n\n    return {\n      reset,\n      resetValidation,\n      validate,\n    }\n  },\n})\n\nexport type VInput = InstanceType<typeof VInput>\n\nexport function filterInputProps (props: ExtractPropTypes<ReturnType<typeof makeVInputProps>>) {\n  return pick(props, Object.keys(VInput.props) as any)\n}\n"]},"metadata":{},"sourceType":"module"}