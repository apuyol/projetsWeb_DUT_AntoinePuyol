{"ast":null,"code":"import _createForOfIteratorHelper from \"D:/Stage/App/xr-place-application/client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"D:/Stage/App/xr-place-application/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.array.filter.js\";\n// Utilities\nimport { computed, inject, provide, ref } from 'vue';\nimport { useProxiedModel } from \"./proxiedModel.mjs\";\nimport { consoleWarn, propsFactory } from \"../util/index.mjs\"; // Types\n\nexport var FormKey = Symbol[\"for\"]('vuetify:form');\nexport var makeFormProps = propsFactory({\n  disabled: Boolean,\n  fastFail: Boolean,\n  lazyValidation: Boolean,\n  readonly: Boolean,\n  modelValue: {\n    type: Boolean,\n    \"default\": null\n  }\n});\nexport function createForm(props) {\n  var model = useProxiedModel(props, 'modelValue');\n  var isDisabled = computed(function () {\n    return props.disabled;\n  });\n  var isReadonly = computed(function () {\n    return props.readonly;\n  });\n  var isValidating = ref(false);\n  var items = ref([]);\n  var errorMessages = ref([]);\n\n  function validate() {\n    return _validate.apply(this, arguments);\n  }\n\n  function _validate() {\n    _validate = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var results, valid, _iterator, _step, item, itemErrorMessages;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              results = [];\n              valid = true;\n              errorMessages.value = [];\n              model.value = null;\n              isValidating.value = true;\n              _iterator = _createForOfIteratorHelper(items.value);\n              _context.prev = 6;\n\n              _iterator.s();\n\n            case 8:\n              if ((_step = _iterator.n()).done) {\n                _context.next = 18;\n                break;\n              }\n\n              item = _step.value;\n              _context.next = 12;\n              return item.validate();\n\n            case 12:\n              itemErrorMessages = _context.sent;\n\n              if (itemErrorMessages.length > 0) {\n                valid = false;\n                results.push({\n                  id: item.id,\n                  errorMessages: itemErrorMessages\n                });\n              }\n\n              if (!(!valid && props.fastFail)) {\n                _context.next = 16;\n                break;\n              }\n\n              return _context.abrupt(\"break\", 18);\n\n            case 16:\n              _context.next = 8;\n              break;\n\n            case 18:\n              _context.next = 23;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](6);\n\n              _iterator.e(_context.t0);\n\n            case 23:\n              _context.prev = 23;\n\n              _iterator.f();\n\n              return _context.finish(23);\n\n            case 26:\n              errorMessages.value = results;\n              model.value = valid;\n              isValidating.value = false;\n              return _context.abrupt(\"return\", {\n                valid: valid,\n                errorMessages: errorMessages.value\n              });\n\n            case 30:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[6, 20, 23, 26]]);\n    }));\n    return _validate.apply(this, arguments);\n  }\n\n  function reset() {\n    items.value.forEach(function (item) {\n      return item.reset();\n    });\n    model.value = null;\n  }\n\n  function resetValidation() {\n    items.value.forEach(function (item) {\n      return item.resetValidation();\n    });\n    errorMessages.value = [];\n    model.value = null;\n  }\n\n  provide(FormKey, {\n    register: function register(id, validate, reset, resetValidation) {\n      if (items.value.some(function (item) {\n        return item.id === id;\n      })) {\n        consoleWarn(\"Duplicate input name \\\"\".concat(id, \"\\\"\"));\n      }\n\n      items.value.push({\n        id: id,\n        validate: validate,\n        reset: reset,\n        resetValidation: resetValidation\n      });\n    },\n    unregister: function unregister(id) {\n      items.value = items.value.filter(function (item) {\n        return item.id !== id;\n      });\n    },\n    isDisabled: isDisabled,\n    isReadonly: isReadonly,\n    isValidating: isValidating,\n    items: items\n  });\n  return {\n    errorMessages: errorMessages,\n    isDisabled: isDisabled,\n    isReadonly: isReadonly,\n    isValidating: isValidating,\n    items: items,\n    validate: validate,\n    reset: reset,\n    resetValidation: resetValidation\n  };\n}\nexport function useForm() {\n  return inject(FormKey, null);\n}","map":{"version":3,"mappings":"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","names":["computed","inject","provide","ref","useProxiedModel","consoleWarn","propsFactory","FormKey","Symbol","makeFormProps","disabled","Boolean","fastFail","lazyValidation","readonly","modelValue","type","default","createForm","props","model","isDisabled","isReadonly","isValidating","items","errorMessages","validate","results","valid","value","item","itemErrorMessages","length","push","id","reset","forEach","resetValidation","register","some","unregister","filter","useForm"],"sources":["../../src/composables/form.ts"],"sourcesContent":["// Utilities\nimport { computed, inject, provide, ref } from 'vue'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { consoleWarn, propsFactory } from '@/util'\n\n// Types\nimport type { ComputedRef, InjectionKey, PropType, Ref } from 'vue'\n\nexport interface FormProvide {\n  register: (\n    id: number | string,\n    validate: () => Promise<string[]>,\n    reset: () => void,\n    resetValidation: () => void\n  ) => void\n  unregister: (id: number | string) => void\n  items: Ref<FormField[]>\n  isDisabled: ComputedRef<boolean>\n  isReadonly: ComputedRef<boolean>\n  isValidating: Ref<boolean>\n}\n\ninterface FormField {\n  id: number | string\n  validate: () => Promise<string[]>\n  reset: () => void\n  resetValidation: () => void\n}\n\ninterface FormValidationResult {\n  id: number | string\n  errorMessages: string[]\n}\n\nexport const FormKey: InjectionKey<FormProvide> = Symbol.for('vuetify:form')\n\nexport interface FormProps {\n  disabled: boolean\n  fastFail: boolean\n  lazyValidation: boolean\n  readonly: boolean\n  modelValue: boolean | null\n  'onUpdate:modelValue': ((val: boolean | null) => void) | undefined\n}\n\nexport const makeFormProps = propsFactory({\n  disabled: Boolean,\n  fastFail: Boolean,\n  lazyValidation: Boolean,\n  readonly: Boolean,\n  modelValue: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n})\n\nexport function createForm (props: FormProps) {\n  const model = useProxiedModel(props, 'modelValue')\n\n  const isDisabled = computed(() => props.disabled)\n  const isReadonly = computed(() => props.readonly)\n  const isValidating = ref(false)\n  const items = ref<FormField[]>([])\n  const errorMessages = ref<FormValidationResult[]>([])\n\n  async function validate () {\n    const results = []\n    let valid = true\n\n    errorMessages.value = []\n    model.value = null\n    isValidating.value = true\n\n    for (const item of items.value) {\n      const itemErrorMessages = await item.validate()\n\n      if (itemErrorMessages.length > 0) {\n        valid = false\n\n        results.push({\n          id: item.id,\n          errorMessages: itemErrorMessages,\n        })\n      }\n\n      if (!valid && props.fastFail) break\n    }\n\n    errorMessages.value = results\n    model.value = valid\n    isValidating.value = false\n\n    return { valid, errorMessages: errorMessages.value }\n  }\n\n  function reset () {\n    items.value.forEach(item => item.reset())\n    model.value = null\n  }\n\n  function resetValidation () {\n    items.value.forEach(item => item.resetValidation())\n    errorMessages.value = []\n    model.value = null\n  }\n\n  provide(FormKey, {\n    register: (id, validate, reset, resetValidation) => {\n      if (items.value.some(item => item.id === id)) {\n        consoleWarn(`Duplicate input name \"${id}\"`)\n      }\n\n      items.value.push({\n        id,\n        validate,\n        reset,\n        resetValidation,\n      })\n    },\n    unregister: id => {\n      items.value = items.value.filter(item => {\n        return item.id !== id\n      })\n    },\n    isDisabled,\n    isReadonly,\n    isValidating,\n    items,\n  })\n\n  return {\n    errorMessages,\n    isDisabled,\n    isReadonly,\n    isValidating,\n    items,\n    validate,\n    reset,\n    resetValidation,\n  }\n}\n\nexport function useForm () {\n  return inject(FormKey, null)\n}\n"]},"metadata":{},"sourceType":"module"}