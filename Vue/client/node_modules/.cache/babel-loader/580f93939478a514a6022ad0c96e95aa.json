{"ast":null,"code":"import _objectSpread from \"D:/Stage/App/xr-place-application/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"D:/Stage/App/xr-place-application/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"D:/Stage/App/xr-place-application/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.string.anchor.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.parse-int.js\";\nimport \"core-js/modules/es.array.includes.js\";\n// Utilities\nimport { computed, effectScope, nextTick, onScopeDispose, ref, watch, watchEffect } from 'vue';\nimport { convertToUnit, getScrollParent, IN_BROWSER, isFixedPosition, nullifyTransforms, propsFactory } from \"../../util/index.mjs\";\nimport { oppositeAnchor, parseAnchor, physicalAnchor } from \"./util/anchor.mjs\";\nimport { anchorToPoint, getOffset } from \"./util/point.mjs\"; // Types\n\nimport { Box } from \"../../util/box.mjs\";\nvar positionStrategies = {\n  \"static\": staticPositionStrategy,\n  // specific viewport position, usually centered\n  connected: connectedPositionStrategy // connected to a certain element\n\n};\nexport var makePositionStrategyProps = propsFactory({\n  positionStrategy: {\n    type: [String, Function],\n    \"default\": 'static',\n    validator: function validator(val) {\n      return typeof val === 'function' || val in positionStrategies;\n    }\n  },\n  anchor: {\n    type: String,\n    \"default\": 'bottom'\n  },\n  origin: {\n    type: String,\n    \"default\": 'auto'\n  },\n  offset: [Number, String]\n});\nexport function usePositionStrategies(props, data) {\n  var contentStyles = ref({});\n  var updatePosition = ref();\n  var scope;\n  watchEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var _scope;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            (_scope = scope) == null ? void 0 : _scope.stop();\n            updatePosition.value = undefined;\n\n            if (IN_BROWSER && data.isActive.value && props.positionStrategy) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 4:\n            scope = effectScope();\n            _context.next = 7;\n            return nextTick();\n\n          case 7:\n            scope.run(function () {\n              if (typeof props.positionStrategy === 'function') {\n                var _props$positionStrate;\n\n                updatePosition.value = (_props$positionStrate = props.positionStrategy(data, props, contentStyles)) == null ? void 0 : _props$positionStrate.updatePosition;\n              } else {\n                var _positionStrategies$p;\n\n                updatePosition.value = (_positionStrategies$p = positionStrategies[props.positionStrategy](data, props, contentStyles)) == null ? void 0 : _positionStrategies$p.updatePosition;\n              }\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })));\n  IN_BROWSER && window.addEventListener('resize', onResize, {\n    passive: true\n  });\n  onScopeDispose(function () {\n    var _scope2;\n\n    IN_BROWSER && window.removeEventListener('resize', onResize);\n    updatePosition.value = undefined;\n    (_scope2 = scope) == null ? void 0 : _scope2.stop();\n  });\n\n  function onResize(e) {\n    var _updatePosition$value;\n\n    (_updatePosition$value = updatePosition.value) == null ? void 0 : _updatePosition$value.call(updatePosition, e);\n  }\n\n  return {\n    contentStyles: contentStyles,\n    updatePosition: updatePosition\n  };\n}\n\nfunction staticPositionStrategy() {// TODO\n}\n\nfunction connectedPositionStrategy(data, props, contentStyles) {\n  var activatorFixed = isFixedPosition(data.activatorEl.value);\n\n  if (activatorFixed) {\n    Object.assign(contentStyles.value, {\n      position: 'fixed'\n    });\n  }\n\n  var preferredAnchor = computed(function () {\n    return parseAnchor(props.anchor);\n  });\n  var preferredOrigin = computed(function () {\n    return props.origin === 'overlap' ? preferredAnchor.value : props.origin === 'auto' ? oppositeAnchor(preferredAnchor.value) : parseAnchor(props.origin);\n  });\n  var doesOverlap = computed(function () {\n    return preferredAnchor.value.side === preferredOrigin.value.side;\n  });\n  var configuredMaxHeight = computed(function () {\n    var val = parseFloat(props.maxHeight);\n    return isNaN(val) ? Infinity : val;\n  });\n  var configuredMinWidth = computed(function () {\n    var val = parseFloat(props.minWidth);\n    return isNaN(val) ? Infinity : val;\n  });\n  var observe = false;\n\n  if (IN_BROWSER) {\n    var observer = new ResizeObserver(function () {\n      if (observe) updatePosition();\n    });\n    observer.observe(data.activatorEl.value);\n    observer.observe(data.contentEl.value);\n    onScopeDispose(function () {\n      observer.disconnect();\n    });\n  } // eslint-disable-next-line max-statements\n\n\n  function updatePosition() {\n    var _props$maxWidth;\n\n    observe = false;\n    requestAnimationFrame(function () {\n      requestAnimationFrame(function () {\n        return observe = true;\n      });\n    });\n    var targetBox = data.activatorEl.value.getBoundingClientRect(); // TODO: offset shouldn't affect width\n\n    if (props.offset) {\n      targetBox.x -= +props.offset;\n      targetBox.y -= +props.offset;\n      targetBox.width += +props.offset * 2;\n      targetBox.height += +props.offset * 2;\n    }\n\n    var scrollParent = getScrollParent(data.contentEl.value);\n    var viewportWidth = scrollParent.clientWidth;\n    var viewportHeight = Math.min(scrollParent.clientHeight, window.innerHeight);\n    var contentBox;\n    {\n      var scrollables = new Map();\n      data.contentEl.value.querySelectorAll('*').forEach(function (el) {\n        var x = el.scrollLeft;\n        var y = el.scrollTop;\n\n        if (x || y) {\n          scrollables.set(el, [x, y]);\n        }\n      });\n      var initialMaxWidth = data.contentEl.value.style.maxWidth;\n      var initialMaxHeight = data.contentEl.value.style.maxHeight;\n      data.contentEl.value.style.removeProperty('max-width');\n      data.contentEl.value.style.removeProperty('max-height');\n      contentBox = nullifyTransforms(data.contentEl.value);\n      contentBox.x -= parseFloat(data.contentEl.value.style.left) || 0;\n      contentBox.y -= parseFloat(data.contentEl.value.style.top) || 0;\n      data.contentEl.value.style.maxWidth = initialMaxWidth;\n      data.contentEl.value.style.maxHeight = initialMaxHeight;\n      scrollables.forEach(function (position, el) {\n        el.scrollTo.apply(el, _toConsumableArray(position));\n      });\n    }\n    var contentHeight = Math.min(configuredMaxHeight.value, contentBox.height); // Regard undefined maxWidth as maximally occupying whole remaining space by default\n\n    var maxFreeSpaceWidth = props.maxWidth === undefined ? Number.MAX_VALUE : parseInt((_props$maxWidth = props.maxWidth) != null ? _props$maxWidth : 0, 10);\n    var viewportMargin = 12;\n    var freeSpace = {\n      top: targetBox.top - viewportMargin,\n      bottom: viewportHeight - targetBox.bottom - viewportMargin,\n      left: Math.min(targetBox.left - viewportMargin, maxFreeSpaceWidth),\n      right: Math.min(viewportWidth - targetBox.right - viewportMargin, maxFreeSpaceWidth)\n    };\n    var fitsY = preferredAnchor.value.side === 'bottom' && contentHeight <= freeSpace.bottom || preferredAnchor.value.side === 'top' && contentHeight <= freeSpace.top;\n    var anchor = fitsY ? preferredAnchor.value : preferredAnchor.value.side === 'bottom' && freeSpace.top > freeSpace.bottom || preferredAnchor.value.side === 'top' && freeSpace.bottom > freeSpace.top ? oppositeAnchor(preferredAnchor.value) : preferredAnchor.value;\n    var origin = fitsY ? preferredOrigin.value : oppositeAnchor(anchor);\n    var canFill = doesOverlap.value || ['center', 'top', 'bottom'].includes(anchor.side);\n    var maxWidth = canFill ? Math.min(viewportWidth, Math.max(targetBox.width, viewportWidth - viewportMargin * 2)) : anchor.side === 'end' ? freeSpace.right : anchor.side === 'start' ? freeSpace.left : null;\n    var minWidth = Math.min(configuredMinWidth.value, maxWidth, targetBox.width);\n    var maxHeight = fitsY ? configuredMaxHeight.value : Math.min(configuredMaxHeight.value, Math.floor(anchor.side === 'top' ? freeSpace.top : freeSpace.bottom));\n    var targetPoint = anchorToPoint(anchor, targetBox);\n    var contentPoint = anchorToPoint(origin, new Box(_objectSpread(_objectSpread({}, contentBox), {}, {\n      height: Math.min(contentHeight, maxHeight)\n    })));\n\n    var _getOffset = getOffset(targetPoint, contentPoint),\n        x = _getOffset.x,\n        y = _getOffset.y;\n\n    Object.assign(contentStyles.value, {\n      '--v-overlay-anchor-origin': physicalAnchor(anchor, data.activatorEl.value),\n      top: convertToUnit(Math.round(y)),\n      left: convertToUnit(Math.round(x)),\n      // TODO: right for origin=\"end\", rtl\n      transformOrigin: physicalAnchor(origin, data.activatorEl.value),\n      minWidth: convertToUnit(minWidth),\n      maxWidth: convertToUnit(maxWidth),\n      maxHeight: convertToUnit(maxHeight)\n    });\n  }\n\n  watch(function () {\n    return [preferredAnchor.value, preferredOrigin.value, props.offset];\n  }, function () {\n    return updatePosition();\n  }, {\n    immediate: !activatorFixed\n  });\n  if (activatorFixed) nextTick(function () {\n    return updatePosition();\n  });\n  requestAnimationFrame(function () {\n    if (contentStyles.value.maxHeight) updatePosition();\n  });\n  return {\n    updatePosition: updatePosition\n  };\n}","map":{"version":3,"mappings":"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","names":["computed","effectScope","nextTick","onScopeDispose","ref","watch","watchEffect","convertToUnit","getScrollParent","IN_BROWSER","isFixedPosition","nullifyTransforms","propsFactory","oppositeAnchor","parseAnchor","physicalAnchor","anchorToPoint","getOffset","Box","positionStrategies","static","staticPositionStrategy","connected","connectedPositionStrategy","makePositionStrategyProps","positionStrategy","type","String","Function","default","validator","val","anchor","origin","offset","Number","usePositionStrategies","props","data","contentStyles","updatePosition","scope","stop","value","undefined","isActive","run","_props$positionStrate","_positionStrategies$p","window","addEventListener","onResize","passive","removeEventListener","e","activatorFixed","activatorEl","Object","assign","position","preferredAnchor","preferredOrigin","doesOverlap","side","configuredMaxHeight","parseFloat","maxHeight","isNaN","Infinity","configuredMinWidth","minWidth","observe","observer","ResizeObserver","contentEl","disconnect","requestAnimationFrame","targetBox","getBoundingClientRect","x","y","width","height","scrollParent","viewportWidth","clientWidth","viewportHeight","Math","min","clientHeight","innerHeight","contentBox","scrollables","Map","querySelectorAll","forEach","el","scrollLeft","scrollTop","set","initialMaxWidth","style","maxWidth","initialMaxHeight","removeProperty","left","top","scrollTo","contentHeight","maxFreeSpaceWidth","MAX_VALUE","parseInt","viewportMargin","freeSpace","bottom","right","fitsY","canFill","includes","max","floor","targetPoint","contentPoint","round","transformOrigin","immediate"],"sources":["../../../src/components/VOverlay/positionStrategies.ts"],"sourcesContent":["// Utilities\nimport { computed, effectScope, nextTick, onScopeDispose, ref, watch, watchEffect } from 'vue'\nimport { convertToUnit, getScrollParent, IN_BROWSER, isFixedPosition, nullifyTransforms, propsFactory } from '@/util'\nimport { oppositeAnchor, parseAnchor, physicalAnchor } from './util/anchor'\nimport { anchorToPoint, getOffset } from './util/point'\n\n// Types\nimport type { EffectScope, PropType, Ref } from 'vue'\nimport type { Anchor } from './util/anchor'\nimport { Box } from '@/util/box'\n\nexport interface PositionStrategyData {\n  contentEl: Ref<HTMLElement | undefined>\n  activatorEl: Ref<HTMLElement | undefined>\n  isActive: Ref<boolean>\n}\n\nconst positionStrategies = {\n  static: staticPositionStrategy, // specific viewport position, usually centered\n  connected: connectedPositionStrategy, // connected to a certain element\n}\n\nexport interface StrategyProps {\n  positionStrategy: keyof typeof positionStrategies | (\n    (\n      data: PositionStrategyData,\n      props: StrategyProps,\n      contentStyles: Ref<Record<string, string>>\n    ) => undefined | { updatePosition: (e: Event) => void }\n  )\n  anchor: Anchor\n  origin: Anchor | 'auto' | 'overlap'\n  offset?: number | string\n  maxHeight?: number | string\n  maxWidth?: number | string\n  minHeight?: number | string\n  minWidth?: number | string\n}\n\nexport const makePositionStrategyProps = propsFactory({\n  positionStrategy: {\n    type: [String, Function] as PropType<StrategyProps['positionStrategy']>,\n    default: 'static',\n    validator: (val: any) => typeof val === 'function' || val in positionStrategies,\n  },\n  anchor: {\n    type: String as PropType<StrategyProps['anchor']>,\n    default: 'bottom',\n  },\n  origin: {\n    type: String as PropType<StrategyProps['origin']>,\n    default: 'auto',\n  },\n  offset: [Number, String],\n})\n\nexport function usePositionStrategies (\n  props: StrategyProps,\n  data: PositionStrategyData\n) {\n  const contentStyles = ref({})\n  const updatePosition = ref<(e: Event) => void>()\n\n  let scope: EffectScope | undefined\n  watchEffect(async () => {\n    scope?.stop()\n    updatePosition.value = undefined\n\n    if (!(IN_BROWSER && data.isActive.value && props.positionStrategy)) return\n\n    scope = effectScope()\n    await nextTick()\n    scope.run(() => {\n      if (typeof props.positionStrategy === 'function') {\n        updatePosition.value = props.positionStrategy(data, props, contentStyles)?.updatePosition\n      } else {\n        updatePosition.value = positionStrategies[props.positionStrategy](data, props, contentStyles)?.updatePosition\n      }\n    })\n  })\n\n  IN_BROWSER && window.addEventListener('resize', onResize, { passive: true })\n\n  onScopeDispose(() => {\n    IN_BROWSER && window.removeEventListener('resize', onResize)\n    updatePosition.value = undefined\n    scope?.stop()\n  })\n\n  function onResize (e: Event) {\n    updatePosition.value?.(e)\n  }\n\n  return {\n    contentStyles,\n    updatePosition,\n  }\n}\n\nfunction staticPositionStrategy () {\n  // TODO\n}\n\nfunction connectedPositionStrategy (data: PositionStrategyData, props: StrategyProps, contentStyles: Ref<Record<string, string>>) {\n  const activatorFixed = isFixedPosition(data.activatorEl.value)\n  if (activatorFixed) {\n    Object.assign(contentStyles.value, {\n      position: 'fixed',\n    })\n  }\n\n  const preferredAnchor = computed(() => parseAnchor(props.anchor))\n  const preferredOrigin = computed(() =>\n    props.origin === 'overlap' ? preferredAnchor.value\n    : props.origin === 'auto' ? oppositeAnchor(preferredAnchor.value)\n    : parseAnchor(props.origin)\n  )\n  const doesOverlap = computed(() => {\n    return preferredAnchor.value.side === preferredOrigin.value.side\n  })\n\n  const configuredMaxHeight = computed(() => {\n    const val = parseFloat(props.maxHeight!)\n    return isNaN(val) ? Infinity : val\n  })\n\n  const configuredMinWidth = computed(() => {\n    const val = parseFloat(props.minWidth!)\n    return isNaN(val) ? Infinity : val\n  })\n\n  let observe = false\n  if (IN_BROWSER) {\n    const observer = new ResizeObserver(() => {\n      if (observe) updatePosition()\n    })\n    observer.observe(data.activatorEl.value!)\n    observer.observe(data.contentEl.value!)\n\n    onScopeDispose(() => {\n      observer.disconnect()\n    })\n  }\n\n  // eslint-disable-next-line max-statements\n  function updatePosition () {\n    observe = false\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => observe = true)\n    })\n\n    const targetBox = data.activatorEl.value!.getBoundingClientRect()\n    // TODO: offset shouldn't affect width\n    if (props.offset) {\n      targetBox.x -= +props.offset\n      targetBox.y -= +props.offset\n      targetBox.width += +props.offset * 2\n      targetBox.height += +props.offset * 2\n    }\n\n    const scrollParent = getScrollParent(data.contentEl.value)\n    const viewportWidth = scrollParent.clientWidth\n    const viewportHeight = Math.min(scrollParent.clientHeight, window.innerHeight)\n\n    let contentBox\n    {\n      const scrollables = new Map<Element, [number, number]>()\n      data.contentEl.value!.querySelectorAll('*').forEach(el => {\n        const x = el.scrollLeft\n        const y = el.scrollTop\n        if (x || y) {\n          scrollables.set(el, [x, y])\n        }\n      })\n\n      const initialMaxWidth = data.contentEl.value!.style.maxWidth\n      const initialMaxHeight = data.contentEl.value!.style.maxHeight\n      data.contentEl.value!.style.removeProperty('max-width')\n      data.contentEl.value!.style.removeProperty('max-height')\n\n      contentBox = nullifyTransforms(data.contentEl.value!)\n      contentBox.x -= parseFloat(data.contentEl.value!.style.left) || 0\n      contentBox.y -= parseFloat(data.contentEl.value!.style.top) || 0\n\n      data.contentEl.value!.style.maxWidth = initialMaxWidth\n      data.contentEl.value!.style.maxHeight = initialMaxHeight\n      scrollables.forEach((position, el) => {\n        el.scrollTo(...position)\n      })\n    }\n\n    const contentHeight = Math.min(configuredMaxHeight.value, contentBox.height)\n\n    // Regard undefined maxWidth as maximally occupying whole remaining space by default\n    const maxFreeSpaceWidth = props.maxWidth === undefined ? Number.MAX_VALUE : parseInt(props.maxWidth ?? 0, 10)\n\n    const viewportMargin = 12\n    const freeSpace = {\n      top: targetBox.top - viewportMargin,\n      bottom: viewportHeight - targetBox.bottom - viewportMargin,\n      left: Math.min(targetBox.left - viewportMargin, maxFreeSpaceWidth),\n      right: Math.min(viewportWidth - targetBox.right - viewportMargin, maxFreeSpaceWidth),\n    }\n\n    const fitsY = (preferredAnchor.value.side === 'bottom' && contentHeight <= freeSpace.bottom) ||\n      (preferredAnchor.value.side === 'top' && contentHeight <= freeSpace.top)\n\n    const anchor = fitsY ? preferredAnchor.value\n      : (preferredAnchor.value.side === 'bottom' && freeSpace.top > freeSpace.bottom) ||\n      (preferredAnchor.value.side === 'top' && freeSpace.bottom > freeSpace.top) ? oppositeAnchor(preferredAnchor.value)\n      : preferredAnchor.value\n    const origin = fitsY ? preferredOrigin.value : oppositeAnchor(anchor)\n\n    const canFill = doesOverlap.value || ['center', 'top', 'bottom'].includes(anchor.side)\n\n    const maxWidth = canFill ? Math.min(viewportWidth, Math.max(targetBox.width, viewportWidth - viewportMargin * 2))\n      : anchor.side === 'end' ? freeSpace.right\n      : anchor.side === 'start' ? freeSpace.left\n      : null\n    const minWidth = Math.min(configuredMinWidth.value, maxWidth!, targetBox.width)\n    const maxHeight = fitsY ? configuredMaxHeight.value : Math.min(\n      configuredMaxHeight.value,\n      Math.floor(anchor.side === 'top' ? freeSpace.top : freeSpace.bottom)\n    )\n\n    const targetPoint = anchorToPoint(anchor, targetBox)\n    const contentPoint = anchorToPoint(origin, new Box({\n      ...contentBox,\n      height: Math.min(contentHeight, maxHeight),\n    }))\n\n    const { x, y } = getOffset(targetPoint, contentPoint)\n\n    Object.assign(contentStyles.value, {\n      '--v-overlay-anchor-origin': physicalAnchor(anchor, data.activatorEl.value!),\n      top: convertToUnit(Math.round(y)),\n      left: convertToUnit(Math.round(x)), // TODO: right for origin=\"end\", rtl\n      transformOrigin: physicalAnchor(origin, data.activatorEl.value!),\n      minWidth: convertToUnit(minWidth),\n      maxWidth: convertToUnit(maxWidth),\n      maxHeight: convertToUnit(maxHeight),\n    })\n  }\n\n  watch(\n    () => [preferredAnchor.value, preferredOrigin.value, props.offset],\n    () => updatePosition(),\n    { immediate: !activatorFixed }\n  )\n\n  if (activatorFixed) nextTick(() => updatePosition())\n  requestAnimationFrame(() => {\n    if (contentStyles.value.maxHeight) updatePosition()\n  })\n\n  return { updatePosition }\n}\n"]},"metadata":{},"sourceType":"module"}