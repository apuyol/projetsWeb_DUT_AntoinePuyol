{"ast":null,"code":"import _objectSpread from \"D:/Stage/App/xr-place-application/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { withDirectives as _withDirectives, vShow as _vShow, createVNode as _createVNode } from \"vue\"; // Components\n\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VExpandTransition } from \"../transitions/index.mjs\"; // Composables\n\nimport { useList } from \"./list.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { useNestedGroupActivator, useNestedItem } from \"../../composables/nested/nested.mjs\"; // Utilities\n\nimport { computed, toRef } from 'vue';\nimport { defineComponent, genericComponent } from \"../../util/index.mjs\"; // Types\n\nvar VListGroupActivator = defineComponent({\n  name: 'VListGroupActivator',\n  setup: function setup(_, _ref) {\n    var slots = _ref.slots;\n    useNestedGroupActivator();\n    return function () {\n      var _slots$default;\n\n      return (_slots$default = slots[\"default\"]) == null ? void 0 : _slots$default.call(slots);\n    };\n  }\n});\nexport var VListGroup = genericComponent()({\n  name: 'VListGroup',\n  props: _objectSpread({\n    activeColor: String,\n    color: String,\n    collapseIcon: {\n      type: String,\n      \"default\": '$collapse'\n    },\n    expandIcon: {\n      type: String,\n      \"default\": '$expand'\n    },\n    value: null\n  }, makeTagProps()),\n  setup: function setup(props, _ref2) {\n    var slots = _ref2.slots;\n\n    var _useNestedItem = useNestedItem(toRef(props, 'value'), true),\n        isOpen = _useNestedItem.isOpen,\n        open = _useNestedItem.open;\n\n    var list = useList();\n\n    var onClick = function onClick(e) {\n      open(!isOpen.value, e);\n    };\n\n    var activatorProps = computed(function () {\n      var _props$activeColor;\n\n      return {\n        onClick: onClick,\n        appendIcon: isOpen.value ? props.collapseIcon : props.expandIcon,\n        \"class\": 'v-list-group__header',\n        color: isOpen.value ? (_props$activeColor = props.activeColor) != null ? _props$activeColor : props.color : undefined\n      };\n    });\n    return function () {\n      var _slots$default2;\n\n      return _createVNode(props.tag, {\n        \"class\": ['v-list-group', {\n          'v-list-group--prepend': list == null ? void 0 : list.hasPrepend.value\n        }]\n      }, {\n        \"default\": function _default() {\n          return [slots.activator && _createVNode(VDefaultsProvider, {\n            \"defaults\": {\n              VListItemIcon: {\n                color: activatorProps.value.color\n              }\n            }\n          }, {\n            \"default\": function _default() {\n              return [_createVNode(VListGroupActivator, null, {\n                \"default\": function _default() {\n                  return [slots.activator({\n                    props: activatorProps.value,\n                    isOpen: isOpen\n                  })];\n                }\n              })];\n            }\n          }), _createVNode(VExpandTransition, null, {\n            \"default\": function _default() {\n              return [_withDirectives(_createVNode(\"div\", {\n                \"class\": \"v-list-group__items\"\n              }, [(_slots$default2 = slots[\"default\"]) == null ? void 0 : _slots$default2.call(slots)]), [[_vShow, isOpen.value]])];\n            }\n          })];\n        }\n      });\n    };\n  }\n});","map":{"version":3,"mappings":";uGAAA;;SACSA,yB;SACAC,yB,4BAET;;SACSC,e;SACAC,oB;SACAC,yBAAyBC,qB,uCAElC;;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,KAAhC;SACSC,iBAAiBC,wB,wBAE1B;;AAcA,IAAMC,mBAAmB,GAAGF,eAAe,CAAC;AAC1CG,MAAI,EAAE,qBADoC;AAG1CC,OAH0C,iBAGnCC,CAHmC,EAGrCC,IAHqC,EAGrB;AAAA,QAATC,KAAS,QAATA,KAAS;AACnBX,2BAAuB;AAEvB,WAAO;AAAA;;AAAA,+BAAMW,KAAK,WAAX,qBAAMC,0BAAN;AAAP;AACD;AAPyC,CAAD,CAA3C;AAUA,OAAO,IAAMC,UAAU,GAAGR,gBAAgB,GAQrC;AACHE,MAAI,EAAE,YADH;AAGHO,OAAK;AACHC,eAAW,EAAEC,MADV;AAEHC,SAAK,EAAED,MAFJ;AAGHE,gBAAY,EAAE;AACZC,UAAI,EAAEH,MADM;AAEZI,iBAAS;AAFG,KAHX;AAOHC,cAAU,EAAE;AACVF,UAAI,EAAEH,MADI;AAEVI,iBAAS;AAFC,KAPT;AAWHE,SAAK,EAAE;AAXJ,KAaAvB,YAAY,EAbZ,CAHF;AAmBHS,OAnBG,iBAmBIM,KAnBJ,EAmBES,KAnBF,EAmBsB;AAAA,QAATZ,KAAS,SAATA,KAAS;;AACvB,yBAAyBV,aAAa,CAACE,KAAK,CAACW,KAAD,EAAQ,OAAR,CAAN,EAAwB,IAAxB,CAAtC;AAAA,QAAQU,MAAR,kBAAQA,MAAR;AAAA,QAAgBC,IAAhB,kBAAgBA,IAAhB;;AACA,QAAMC,IAAI,GAAG5B,OAAO,EAApB;;AAEA,QAAM6B,OAAO,GAAIC,SAAXD,OAAWC,EAAD,EAAc;AAC5BH,UAAI,CAAC,CAACD,MAAM,CAACF,KAAT,EAAgBM,CAAhB,CAAJH;AADF;;AAIA,QAAMI,cAAoD,GAAG3B,QAAQ,CAAC;AAAA;;AAAA,aAAO;AAC3EyB,eAD2E,EAC3EA,OAD2E;AAE3EG,kBAAU,EAAEN,MAAM,CAACF,KAAPE,GAAeV,KAAK,CAACI,YAArBM,GAAoCV,KAAK,CAACO,UAFqB;AAG3EU,iBAAO,sBAHoE;AAI3Ed,aAAK,EAAEO,MAAM,CAACF,KAAPE,yBAAeV,KAAK,CAACC,WAArB,iCAAoCD,KAAK,CAACG,KAA1CO,GAAkDQ;AAJkB,OAAP;AAAD,MAArE;AAOA,WAAO,YAAM;AAAA;;AACX;AAAA,iBAEW,CACL,cADK,EAEL;AACE,mCAAyBN,IAAzB,QAAyBA,GAAzB,MAAyBA,OAAI,CAAEO,UAANP,CAAiBJ;AAD5C,SAFK;AAFX;AAAA;AAAA,kBASMX,KAAK,CAACuB,SAANvB;AAAA,wBAEY;AACRwB,2BAAa,EAAE;AAAElB,qBAAK,EAAEY,cAAc,CAACP,KAAfO,CAAqBZ;AAA9B;AADP;AAFZ;AAAA;AAAA;AAAA;AAAA,0BAOMN,KAAK,CAACuB,SAANvB,CAAgB;AAAEG,yBAAK,EAAEe,cAAc,CAACP,KAAxB;AAA+BE;AAA/B,mBAAhBb,CAPN;AAAA;AAAA;AAAA;AAAA,YATN;AAAA;AAAA;AAAA,yBAqBiB;AArBjB,qCAsBUA,KAAK,WAtBf,qBAsBUyB,2BAtBV,cAqB+CZ,MAAM,CAACF,KArBtD;AAAA;AAAA;AAAA;AAAA;AADF;AA6BD;AA/DE,CARqC,CAAnC","names":["VDefaultsProvider","VExpandTransition","useList","makeTagProps","useNestedGroupActivator","useNestedItem","computed","toRef","defineComponent","genericComponent","VListGroupActivator","name","setup","_","_ref","slots","_slots$default","VListGroup","props","activeColor","String","color","collapseIcon","type","default","expandIcon","value","_ref2","isOpen","open","list","onClick","e","activatorProps","appendIcon","class","undefined","hasPrepend","activator","VListItemIcon","_slots$default2"],"sources":["../../../src/components/VList/VListGroup.tsx"],"sourcesContent":["// Components\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VExpandTransition } from '@/components/transitions'\n\n// Composables\nimport { useList } from './list'\nimport { makeTagProps } from '@/composables/tag'\nimport { useNestedGroupActivator, useNestedItem } from '@/composables/nested/nested'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { defineComponent, genericComponent } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\nimport type { MakeSlots } from '@/util'\nimport type { InternalListItem } from './VList'\n\nexport type ListGroupActivatorSlot = {\n  props: {\n    onClick: (e: Event) => void\n    appendIcon: string\n    class: string\n    color?: string\n  }\n}\n\nconst VListGroupActivator = defineComponent({\n  name: 'VListGroupActivator',\n\n  setup (_, { slots }) {\n    useNestedGroupActivator()\n\n    return () => slots.default?.()\n  },\n})\n\nexport const VListGroup = genericComponent<new <T extends InternalListItem>() => {\n  $props: {\n    items?: T[]\n  }\n  $slots: MakeSlots<{\n    activator: [ListGroupActivatorSlot]\n    default: []\n  }>\n}>()({\n  name: 'VListGroup',\n\n  props: {\n    activeColor: String,\n    color: String,\n    collapseIcon: {\n      type: String,\n      default: '$collapse',\n    },\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    value: null,\n\n    ...makeTagProps(),\n  },\n\n  setup (props, { slots }) {\n    const { isOpen, open } = useNestedItem(toRef(props, 'value'), true)\n    const list = useList()\n\n    const onClick = (e: Event) => {\n      open(!isOpen.value, e)\n    }\n\n    const activatorProps: Ref<ListGroupActivatorSlot['props']> = computed(() => ({\n      onClick,\n      appendIcon: isOpen.value ? props.collapseIcon : props.expandIcon,\n      class: 'v-list-group__header',\n      color: isOpen.value ? props.activeColor ?? props.color : undefined,\n    }))\n\n    return () => {\n      return (\n        <props.tag\n          class={[\n            'v-list-group',\n            {\n              'v-list-group--prepend': list?.hasPrepend.value,\n            },\n          ]}\n        >\n          { slots.activator && (\n            <VDefaultsProvider\n              defaults={{\n                VListItemIcon: { color: activatorProps.value.color },\n              }}\n            >\n              <VListGroupActivator>\n                { slots.activator({ props: activatorProps.value, isOpen }) }\n              </VListGroupActivator>\n            </VDefaultsProvider>\n          ) }\n          <VExpandTransition>\n            <div class=\"v-list-group__items\" v-show={isOpen.value}>\n              { slots.default?.() }\n            </div>\n          </VExpandTransition>\n        </props.tag>\n      )\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}