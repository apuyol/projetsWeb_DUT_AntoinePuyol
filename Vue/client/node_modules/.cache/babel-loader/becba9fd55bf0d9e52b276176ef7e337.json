{"ast":null,"code":"import _objectSpread from \"D:/Stage/App/xr-place-application/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport { mergeProps as _mergeProps, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\"; // Components\n\nimport { VDivider } from \"../VDivider/index.mjs\";\nimport { VListGroup } from \"./VListGroup.mjs\";\nimport { VListItem } from \"./VListItem.mjs\";\nimport { VListSubheader } from \"./VListSubheader.mjs\"; // Utilities\n\nimport { genericComponent } from \"../../util/index.mjs\";\nimport { createList } from \"./list.mjs\"; // Types\n\nexport var VListChildren = genericComponent()({\n  name: 'VListChildren',\n  props: {\n    items: Array\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    createList();\n    return function () {\n      var _slots$default, _slots$default2, _props$items;\n\n      return (_slots$default = (_slots$default2 = slots[\"default\"]) == null ? void 0 : _slots$default2.call(slots)) != null ? _slots$default : (_props$items = props.items) == null ? void 0 : _props$items.map(function (_ref2) {\n        var children = _ref2.children,\n            itemProps = _ref2.props,\n            type = _ref2.type;\n        if (type === 'divider') return _createVNode(VDivider, itemProps, null);\n        if (type === 'subheader') return _createVNode(VListSubheader, itemProps, slots);\n        return children ? _createVNode(VListGroup, {\n          \"value\": itemProps == null ? void 0 : itemProps.value\n        }, {\n          activator: function activator(_ref3) {\n            var activatorProps = _ref3.props;\n            return slots.header ? slots.header(_objectSpread(_objectSpread({}, itemProps), activatorProps)) : _createVNode(VListItem, _mergeProps(itemProps, activatorProps), slots);\n          },\n          \"default\": function _default() {\n            return _createVNode(VListChildren, {\n              \"items\": children\n            }, slots);\n          }\n        }) : slots.item ? slots.item(itemProps) : _createVNode(VListItem, itemProps, slots);\n      });\n    };\n  }\n});","map":{"version":3,"mappings":";;qHAAA;;SACSA,gB;SACAC,kB;SACAC,iB;SACAC,sB,wBAET;;SACSC,wB;SACAC,kB,cAET;;AAOA,OAAO,IAAMC,aAAa,GAAGF,gBAAgB,GAWxC;AACHG,MAAI,EAAE,eADH;AAGHC,OAAK,EAAE;AACLC,SAAK,EAAEC;AADF,GAHJ;AAOHC,OAPG,iBAOIH,KAPJ,EAOEI,IAPF,EAOsB;AAAA,QAATC,KAAS,QAATA,KAAS;AACvBR,cAAU;AAEV,WAAO;AAAA;;AAAA,kDAAMQ,KAAK,WAAX,qBAAMC,2BAAN,6CAA2BN,KAAK,CAACC,KAAjC,qBAA2BM,aAAaC,GAAb,CAAiB,iBAA0C;AAAA,YAAvCC,QAAuC,SAAvCA,QAAuC;AAAA,YAAtBC,SAAsB,SAA7BV,KAA6B;AAAA,YAAXW,IAAW,SAAXA,IAAW;AAC3F,YAAIA,IAAI,KAAK,SAAb,EAAwB,8BAAqBD,SAArB;AAExB,YAAIC,IAAI,KAAK,WAAb,EAA0B,oCAA2BD,SAA3B,EAAgDL,KAAhD;AAE1B,eAAOI,QAAQ;AAAA,mBAEHC,SAFG,QAEHA,GAFG,MAEHA,YAAS,CAAEE;AAFR;AAKTC,mBAAS,EAAE;AAAA,gBAAUC,cAAV,SAAGd,KAAH;AAAA,mBAA+BK,KAAK,CAACU,MAANV,GACtCA,KAAK,CAACU,MAANV,iCAAkBK,SAAlBL,GAAgCS,cAAhCT,EADsCA,uCAEtBK,SAFsB,EAELI,cAFK,GAEsBT,KAFtB,CAA/B;AALF;AAQTW,qBAAS;AAAA;AAAA,uBACgBP;AADhB,eACqCJ,KADrC;AAAA;AARA,aAcbA,KAAK,CAACY,IAANZ,GAAaA,KAAK,CAACY,IAANZ,CAAWK,SAAXL,CAAbA,2BAAqDK,SAArD,EAA2EL,KAA3E,CAdF;AALgC,QAA3B;AAAP;AAsBD;AAhCE,CAXwC,CAAtC","names":["VDivider","VListGroup","VListItem","VListSubheader","genericComponent","createList","VListChildren","name","props","items","Array","setup","_ref","slots","_slots$default2","_props$items","map","children","itemProps","type","value","activator","activatorProps","header","default","item"],"sources":["../../../src/components/VList/VListChildren.tsx"],"sourcesContent":["// Components\nimport { VDivider } from '../VDivider'\nimport { VListGroup } from './VListGroup'\nimport { VListItem } from './VListItem'\nimport { VListSubheader } from './VListSubheader'\n\n// Utilities\nimport { genericComponent } from '@/util'\nimport { createList } from './list'\n\n// Types\nimport type { InternalListItem } from './VList'\nimport type { ListItemSubtitleSlot, ListItemTitleSlot } from './VListItem'\nimport type { ListGroupActivatorSlot } from './VListGroup'\nimport type { MakeSlots } from '@/util'\nimport type { Prop } from 'vue'\n\nexport const VListChildren = genericComponent<new <T extends InternalListItem>() => {\n  $props: {\n    items?: T[]\n  }\n  $slots: MakeSlots<{\n    default: []\n    header: [ListGroupActivatorSlot]\n    item: [T]\n    title: [ListItemTitleSlot]\n    subtitle: [ListItemSubtitleSlot]\n  }>\n}>()({\n  name: 'VListChildren',\n\n  props: {\n    items: Array as Prop<InternalListItem[]>,\n  },\n\n  setup (props, { slots }) {\n    createList()\n\n    return () => slots.default?.() ?? props.items?.map(({ children, props: itemProps, type }) => {\n      if (type === 'divider') return <VDivider {...itemProps} />\n\n      if (type === 'subheader') return <VListSubheader {...itemProps} v-slots={ slots } />\n\n      return children ? (\n        <VListGroup\n          value={ itemProps?.value }\n        >\n          {{\n            activator: ({ props: activatorProps }) => slots.header\n              ? slots.header({ ...itemProps, ...activatorProps })\n              : <VListItem { ...itemProps } { ...activatorProps } v-slots={ slots } />,\n            default: () => (\n              <VListChildren items={ children } v-slots={ slots } />\n            ),\n          }}\n        </VListGroup>\n      ) : (\n        slots.item ? slots.item(itemProps) : <VListItem { ...itemProps } v-slots={ slots } />\n      )\n    })\n  },\n})\n"]},"metadata":{},"sourceType":"module"}