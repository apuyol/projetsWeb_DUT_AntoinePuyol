{"ast":null,"code":"import PopupScene from \"./Popup/PopupScenes.vue\";\nlet sceneId = 0;\nexport default {\n  components: {\n    PopupScene\n  },\n\n  data() {\n    return {\n      popupSceneComponentOpen: false,\n      popupEditOpen: false,\n      popupScenesOpen: false,\n      selectedScene: null,\n      selectedSceneComponent: null,\n      scenes: [{\n        id: sceneId++,\n        name: \"GMP\",\n        sceneComponents: [{\n          id: 0,\n          name: \"Atelier\"\n        }, {\n          id: 1,\n          name: \"1er étage\"\n        }, {\n          id: 2,\n          name: \"2ème étage\"\n        }]\n      }, {\n        id: sceneId++,\n        name: \"Info\",\n        sceneComponents: [{\n          id: 0,\n          name: \"Acceuil\"\n        }, {\n          id: 1,\n          name: \"1er étage\"\n        }, {\n          id: 2,\n          name: \"2ème étage\"\n        }]\n      }]\n    };\n  },\n\n  methods: {\n    openOrClosePopup(scene) {\n      this.popupSceneComponentOpen = !this.popupSceneComponentOpen;\n      this.selectedScene = scene;\n    },\n\n    openOrCloseEditPopup(group, sphere) {\n      this.popupEditOpen = !this.popupEditOpen;\n      this.selectedGroup = group;\n      this.selectedSphere = sphere;\n    },\n\n    openOrCloseScenesPopup() {\n      this.popupScenesOpen = !this.popupScenesOpen;\n    },\n\n    addSphere(group, n) {\n      this.groups[group.id].spheres.push({\n        id: this.groups[group.id].spheres.length,\n        name: n\n      });\n    },\n\n    deleteSphere(group, sphere) {\n      this.groups[group.id].spheres = this.groups[group.id].spheres.filter(s => s !== sphere);\n    },\n\n    editSphere(group, sphere, name) {\n      this.groups[group.id].spheres[sphere.id].name = name;\n    },\n\n    addScene(name) {\n      this.scenes.push({\n        id: sceneId++,\n        name: name,\n        sceneComponents: []\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA4EA,OAAOA,UAAP,MAAuB,yBAAvB;AAEA,IAAIC,OAAM,GAAI,CAAd;AAEA,eAAe;AACbC,YAAU,EAAE;AAAEF;AAAF,GADC;;AAEbG,MAAI,GAAG;AACL,WAAO;AACLC,6BAAuB,EAAE,KADpB;AAELC,mBAAa,EAAE,KAFV;AAGLC,qBAAe,EAAE,KAHZ;AAILC,mBAAa,EAAE,IAJV;AAKLC,4BAAsB,EAAE,IALnB;AAMLC,YAAM,EAAE,CACN;AACEC,UAAE,EAAET,OAAO,EADb;AAEEU,YAAI,EAAE,KAFR;AAGEC,uBAAe,EAAE,CACf;AAAEF,YAAE,EAAE,CAAN;AAASC,cAAI,EAAE;AAAf,SADe,EAEf;AAAED,YAAE,EAAE,CAAN;AAASC,cAAI,EAAE;AAAf,SAFe,EAGf;AAAED,YAAE,EAAE,CAAN;AAASC,cAAI,EAAE;AAAf,SAHe;AAHnB,OADM,EAUN;AACED,UAAE,EAAET,OAAO,EADb;AAEEU,YAAI,EAAE,MAFR;AAGEC,uBAAe,EAAE,CACf;AAAEF,YAAE,EAAE,CAAN;AAASC,cAAI,EAAE;AAAf,SADe,EAEf;AAAED,YAAE,EAAE,CAAN;AAASC,cAAI,EAAE;AAAf,SAFe,EAGf;AAAED,YAAE,EAAE,CAAN;AAASC,cAAI,EAAE;AAAf,SAHe;AAHnB,OAVM;AANH,KAAP;AA2BD,GA9BY;;AA+BbE,SAAO,EAAE;AACPC,oBAAgB,CAACC,KAAD,EAAQ;AACtB,WAAKX,uBAAL,GAA+B,CAAC,KAAKA,uBAArC;AACA,WAAKG,aAAL,GAAqBQ,KAArB;AACD,KAJM;;AAKPC,wBAAoB,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAClC,WAAKb,aAAL,GAAqB,CAAC,KAAKA,aAA3B;AACA,WAAKc,aAAL,GAAqBF,KAArB;AACA,WAAKG,cAAL,GAAsBF,MAAtB;AACD,KATM;;AAUPG,0BAAsB,GAAG;AACvB,WAAKf,eAAL,GAAuB,CAAC,KAAKA,eAA7B;AACD,KAZM;;AAaPgB,aAAS,CAACL,KAAD,EAAQM,CAAR,EAAW;AAClB,WAAKC,MAAL,CAAYP,KAAK,CAACP,EAAlB,EAAsBe,OAAtB,CAA8BC,IAA9B,CAAmC;AACjChB,UAAE,EAAE,KAAKc,MAAL,CAAYP,KAAK,CAACP,EAAlB,EAAsBe,OAAtB,CAA8BE,MADD;AAEjChB,YAAI,EAAEY;AAF2B,OAAnC;AAID,KAlBM;;AAmBPK,gBAAY,CAACX,KAAD,EAAQC,MAAR,EAAgB;AAC1B,WAAKM,MAAL,CAAYP,KAAK,CAACP,EAAlB,EAAsBe,OAAtB,GAAgC,KAAKD,MAAL,CAAYP,KAAK,CAACP,EAAlB,EAAsBe,OAAtB,CAA8BI,MAA9B,CAC7BC,CAAD,IAAOA,MAAMZ,MADiB,CAAhC;AAGD,KAvBM;;AAwBPa,cAAU,CAACd,KAAD,EAAQC,MAAR,EAAgBP,IAAhB,EAAsB;AAC9B,WAAKa,MAAL,CAAYP,KAAK,CAACP,EAAlB,EAAsBe,OAAtB,CAA8BP,MAAM,CAACR,EAArC,EAAyCC,IAAzC,GAAgDA,IAAhD;AACD,KA1BM;;AA2BPqB,YAAQ,CAACrB,IAAD,EAAO;AACb,WAAKF,MAAL,CAAYiB,IAAZ,CAAiB;AAAEhB,UAAE,EAAET,OAAO,EAAb;AAAiBU,YAAI,EAAEA,IAAvB;AAA6BC,uBAAe,EAAE;AAA9C,OAAjB;AACD;;AA7BM;AA/BI,CAAf","names":["PopupScene","sceneId","components","data","popupSceneComponentOpen","popupEditOpen","popupScenesOpen","selectedScene","selectedSceneComponent","scenes","id","name","sceneComponents","methods","openOrClosePopup","scene","openOrCloseEditPopup","group","sphere","selectedGroup","selectedSphere","openOrCloseScenesPopup","addSphere","n","groups","spheres","push","length","deleteSphere","filter","s","editSphere","addScene"],"sourceRoot":"","sources":["D:\\Stage\\App\\xr-place-application\\client\\src\\components\\MyScenes.vue"],"sourcesContent":["<template>\n  <PopupScene\n    v-if=\"popupScenesOpen\"\n    :status=\"openOrCloseScenesPopup\"\n    :add=\"addScene\"\n  />\n  <v-expansion-panels>\n    <ul style=\"width: 95%\">\n      <li v-for=\"scene in scenes\" :key=\"scene.id\" class=\"scene\">\n        <v-expansion-panel>\n          <v-expansion-panel-title>{{ scene.name }}</v-expansion-panel-title>\n          <v-expansion-panel-text>\n            <ul>\n              <li\n                v-for=\"sceneComponent in scene.sceneComponents\"\n                :key=\"sceneComponent.id\"\n                class=\"scene\"\n              >\n                <v-btn\n                  icon=\"mdi-cog\"\n                  color=\"#607D8B\"\n                  size=\"25\"\n                  variant=\"outlined\"\n                  @click=\"openOrCloseEditPopup(group, sphere)\"\n                ></v-btn>\n                <p>{{ sceneComponent.name }}</p>\n                <v-btn\n                  icon=\"mdi-close\"\n                  color=\"#EF5350\"\n                  size=\"25\"\n                  variant=\"outlined\"\n                  @click=\"deleteSphere(group, sphere)\"\n                ></v-btn>\n              </li>\n            </ul>\n            <div class=\"scene\" style=\"width: 100%\">\n              <v-btn\n                icon=\"mdi-plus\"\n                color=\"#81C784\"\n                class=\"add\"\n                size=\"25\"\n                variant=\"outlined\"\n                @click=\"openOrClosePopup(sphere)\"\n              ></v-btn>\n            </div>\n          </v-expansion-panel-text>\n        </v-expansion-panel>\n      </li>\n    </ul>\n    <div class=\"scene\" style=\"width: 100%\">\n      <v-btn\n        icon=\"mdi-plus\"\n        color=\"#81C784\"\n        class=\"add\"\n        size=\"25\"\n        variant=\"outlined\"\n        @click=\"openOrCloseScenesPopup\"\n      ></v-btn>\n    </div>\n  </v-expansion-panels>\n</template>\n\n<style scoped>\n.scene {\n  display: flex;\n  justify-content: space-between;\n  margin: 5%;\n}\n\n.add {\n  display: flex;\n  margin-left: auto;\n}\n</style>\n\n<script>\nimport PopupScene from \"./Popup/PopupScenes.vue\";\n\nlet sceneId = 0;\n\nexport default {\n  components: { PopupScene },\n  data() {\n    return {\n      popupSceneComponentOpen: false,\n      popupEditOpen: false,\n      popupScenesOpen: false,\n      selectedScene: null,\n      selectedSceneComponent: null,\n      scenes: [\n        {\n          id: sceneId++,\n          name: \"GMP\",\n          sceneComponents: [\n            { id: 0, name: \"Atelier\" },\n            { id: 1, name: \"1er étage\" },\n            { id: 2, name: \"2ème étage\" },\n          ],\n        },\n        {\n          id: sceneId++,\n          name: \"Info\",\n          sceneComponents: [\n            { id: 0, name: \"Acceuil\" },\n            { id: 1, name: \"1er étage\" },\n            { id: 2, name: \"2ème étage\" },\n          ],\n        },\n      ],\n    };\n  },\n  methods: {\n    openOrClosePopup(scene) {\n      this.popupSceneComponentOpen = !this.popupSceneComponentOpen;\n      this.selectedScene = scene;\n    },\n    openOrCloseEditPopup(group, sphere) {\n      this.popupEditOpen = !this.popupEditOpen;\n      this.selectedGroup = group;\n      this.selectedSphere = sphere;\n    },\n    openOrCloseScenesPopup() {\n      this.popupScenesOpen = !this.popupScenesOpen;\n    },\n    addSphere(group, n) {\n      this.groups[group.id].spheres.push({\n        id: this.groups[group.id].spheres.length,\n        name: n,\n      });\n    },\n    deleteSphere(group, sphere) {\n      this.groups[group.id].spheres = this.groups[group.id].spheres.filter(\n        (s) => s !== sphere\n      );\n    },\n    editSphere(group, sphere, name) {\n      this.groups[group.id].spheres[sphere.id].name = name;\n    },\n    addScene(name) {\n      this.scenes.push({ id: sceneId++, name: name, sceneComponents: [] });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}