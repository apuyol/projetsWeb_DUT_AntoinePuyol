{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { createTextVNode as _createTextVNode, createVNode as _createVNode, Fragment as _Fragment } from \"vue\"; // Styles\n\nimport \"./VCombobox.css\"; // Components\n\nimport { genItem, makeSelectProps } from \"../VSelect/VSelect.mjs\";\nimport { VChip } from \"../VChip/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VList, VListItem } from \"../VList/index.mjs\";\nimport { VMenu } from \"../VMenu/index.mjs\";\nimport { VTextField } from \"../VTextField/index.mjs\"; // Composables\n\nimport { makeFilterProps, useFilter } from \"../../composables/filter.mjs\";\nimport { makeTransitionProps } from \"../../composables/transition.mjs\";\nimport { useForwardRef } from \"../../composables/forwardRef.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useTextColor } from \"../../composables/color.mjs\"; // Utility\n\nimport { computed, nextTick, ref, watch } from 'vue';\nimport { genericComponent, useRender, wrapInArray } from \"../../util/index.mjs\"; // Types\n\nfunction highlightResult(text, matches, length) {\n  if (Array.isArray(matches)) throw new Error('Multiple matches is not implemented');\n  return typeof matches === 'number' && ~matches ? _createVNode(_Fragment, null, [_createVNode(\"span\", {\n    \"class\": \"v-combobox__unmask\"\n  }, [text.substr(0, matches)]), _createVNode(\"span\", {\n    \"class\": \"v-combobox__mask\"\n  }, [text.substr(matches, length)]), _createVNode(\"span\", {\n    \"class\": \"v-combobox__unmask\"\n  }, [text.substr(matches + length)])]) : text;\n}\n\nexport const VCombobox = genericComponent()({\n  name: 'VCombobox',\n  props: {\n    // TODO: implement post keyboard support\n    // autoSelectFirst: Boolean,\n    delimiters: Array,\n    ...makeFilterProps({\n      filterKeys: ['title']\n    }),\n    ...makeSelectProps({\n      hideNoData: true\n    }),\n    ...makeTransitionProps({\n      transition: false\n    })\n  },\n  emits: {\n    'update:modelValue': val => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      t\n    } = useLocale();\n    const vTextFieldRef = ref();\n    const activator = ref();\n    const isFocused = ref(false);\n    const isPristine = ref(true);\n    const menu = ref(false);\n    const selectionIndex = ref(-1);\n    const color = computed(() => {\n      var _vTextFieldRef$value;\n\n      return (_vTextFieldRef$value = vTextFieldRef.value) == null ? void 0 : _vTextFieldRef$value.color;\n    });\n    const items = computed(() => props.items.map(genItem));\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(color);\n    const model = useProxiedModel(props, 'modelValue', [], v => wrapInArray(v || []), v => props.multiple ? v : v[0]);\n\n    const _search = ref('');\n\n    const search = computed({\n      get: () => props.multiple ? _search.value : genItem(model.value[0]).value,\n      set: val => {\n        var _props$delimiters;\n\n        if (props.multiple) {\n          _search.value = val;\n        } else {\n          model.value = [val];\n        }\n\n        if (val && props.multiple && (_props$delimiters = props.delimiters) != null && _props$delimiters.length) {\n          const values = val.split(new RegExp(`(?:${props.delimiters.join('|')})+`));\n\n          if (values.length > 1) {\n            values.forEach(v => {\n              v = v.trim();\n              if (v) select({\n                value: v\n              });\n            });\n            _search.value = '';\n          }\n        }\n\n        if (!val) selectionIndex.value = -1;\n        if (isFocused.value) menu.value = true;\n        isPristine.value = !val;\n      }\n    });\n    const {\n      filteredItems\n    } = useFilter(props, items, computed(() => isPristine.value ? undefined : search.value));\n    const selections = computed(() => {\n      const array = [];\n      let index = 0;\n\n      for (const unwrapped of model.value) {\n        const item = genItem(unwrapped);\n        const found = array.find(selection => selection.value === item.value);\n\n        if (found == null) {\n          array.push({ ...item,\n            index,\n            selected: index === selectionIndex.value\n          });\n          index++;\n        }\n      }\n\n      return array;\n    });\n    const selected = computed(() => selections.value.map(selection => selection.value));\n    const selection = computed(() => selections.value[selectionIndex.value]);\n\n    function onClear(e) {\n      model.value = [];\n\n      if (props.openOnClear) {\n        menu.value = true;\n      }\n    }\n\n    function onClickControl() {\n      if (props.hideNoData && !filteredItems.value.length) return;\n      menu.value = true;\n    }\n\n    function onKeydown(e) {\n      const selectionStart = vTextFieldRef.value.selectionStart;\n      const length = selected.value.length;\n      if (selectionIndex.value > -1) e.preventDefault();\n\n      if (['Enter', 'ArrowDown'].includes(e.key)) {\n        menu.value = true;\n      }\n\n      if (['Escape'].includes(e.key)) {\n        menu.value = false;\n      }\n\n      if (['Enter', 'Escape', 'Tab'].includes(e.key)) {\n        isPristine.value = true;\n      }\n\n      if (!props.multiple) return;\n\n      if (['Backspace', 'Delete'].includes(e.key)) {\n        if (selectionIndex.value < 0) {\n          if (e.key === 'Backspace' && !search.value) {\n            selectionIndex.value = length - 1;\n          }\n\n          return;\n        }\n\n        select(selection.value);\n        nextTick(() => !selection.value && (selectionIndex.value = length - 2));\n      }\n\n      if (e.key === 'ArrowLeft') {\n        if (selectionIndex.value < 0 && selectionStart > 0) return;\n        const prev = selectionIndex.value > -1 ? selectionIndex.value - 1 : length - 1;\n\n        if (selections.value[prev]) {\n          selectionIndex.value = prev;\n        } else {\n          selectionIndex.value = -1;\n          vTextFieldRef.value.setSelectionRange(search.value.length, search.value.length);\n        }\n      }\n\n      if (e.key === 'ArrowRight') {\n        if (selectionIndex.value < 0) return;\n        const next = selectionIndex.value + 1;\n\n        if (selections.value[next]) {\n          selectionIndex.value = next;\n        } else {\n          selectionIndex.value = -1;\n          vTextFieldRef.value.setSelectionRange(0, 0);\n        }\n      }\n\n      if (e.key === 'Enter') {\n        select({\n          value: search.value\n        });\n        search.value = '';\n      }\n    }\n\n    function onAfterLeave() {\n      if (isFocused.value) isPristine.value = true;\n    }\n\n    function select(item) {\n      if (props.multiple) {\n        const index = selections.value.findIndex(selection => selection.value === item.value);\n\n        if (index === -1) {\n          model.value.push(item.value);\n        } else {\n          model.value = selected.value.filter(selection => selection !== item.value);\n        }\n\n        search.value = '';\n      } else {\n        search.value = item.title; // watch for search watcher to trigger\n\n        nextTick(() => {\n          menu.value = false;\n          isPristine.value = true;\n        });\n      }\n    }\n\n    watch(() => vTextFieldRef.value, val => {\n      activator.value = val.$el.querySelector('.v-input__control');\n    });\n    watch(filteredItems, val => {\n      if (!val.length && props.hideNoData) menu.value = false;\n    });\n    watch(isFocused, val => {\n      if (val) {\n        selectionIndex.value = -1;\n      } else {\n        menu.value = false;\n        if (!props.multiple || !search.value) return;\n        model.value.push(search.value);\n        search.value = '';\n      }\n    });\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip);\n      return _createVNode(VTextField, {\n        \"ref\": vTextFieldRef,\n        \"modelValue\": search.value,\n        \"onUpdate:modelValue\": $event => search.value = $event,\n        \"class\": ['v-combobox', {\n          'v-combobox--active-menu': menu.value,\n          'v-combobox--chips': !!props.chips,\n          'v-combobox--selecting-index': selectionIndex.value > -1,\n          [`v-combobox--${props.multiple ? 'multiple' : 'single'}`]: true\n        }],\n        \"appendInnerIcon\": props.items.length ? props.menuIcon : undefined,\n        \"dirty\": selected.value.length > 0,\n        \"onClick:clear\": onClear,\n        \"onClick:control\": onClickControl,\n        \"onClick:input\": onClickControl,\n        \"onFocus\": () => isFocused.value = true,\n        \"onBlur\": () => isFocused.value = false,\n        \"onKeydown\": onKeydown\n      }, { ...slots,\n        default: () => _createVNode(_Fragment, null, [activator.value && _createVNode(VMenu, {\n          \"modelValue\": menu.value,\n          \"onUpdate:modelValue\": $event => menu.value = $event,\n          \"activator\": activator.value,\n          \"contentClass\": \"v-combobox__content\",\n          \"eager\": props.eager,\n          \"openOnClick\": false,\n          \"transition\": props.transition,\n          \"onAfterLeave\": onAfterLeave\n        }, {\n          default: () => [_createVNode(VList, {\n            \"selected\": selected.value,\n            \"selectStrategy\": props.multiple ? 'independent' : 'single-independent'\n          }, {\n            default: () => [!filteredItems.value.length && !props.hideNoData && _createVNode(VListItem, {\n              \"title\": t(props.noDataText)\n            }, null), filteredItems.value.map(_ref2 => {\n              let {\n                item,\n                matches\n              } = _ref2;\n              return _createVNode(VListItem, {\n                \"value\": item.value,\n                \"onMousedown\": e => e.preventDefault(),\n                \"onClick\": () => select(item)\n              }, {\n                title: () => {\n                  var _search$value$length, _search$value;\n\n                  return isPristine.value ? item.title : highlightResult(item.title, matches.title, (_search$value$length = (_search$value = search.value) == null ? void 0 : _search$value.length) != null ? _search$value$length : 0);\n                }\n              });\n            })]\n          })]\n        }), selections.value.map((selection, index) => {\n          function onChipClose(e) {\n            e.stopPropagation();\n            e.preventDefault();\n            select(selection);\n          }\n\n          const slotProps = {\n            'onClick:close': onChipClose,\n            modelValue: true\n          };\n          return _createVNode(\"div\", {\n            \"class\": ['v-combobox__selection', selection.selected && ['v-combobox__selection--selected', textColorClasses.value]],\n            \"style\": selection.selected ? textColorStyles.value : {}\n          }, [hasChips && _createVNode(VDefaultsProvider, {\n            \"defaults\": {\n              VChip: {\n                closable: props.closableChips,\n                size: 'small',\n                text: selection.title\n              }\n            }\n          }, {\n            default: () => [slots.chip ? slots.chip({\n              props: slotProps,\n              selection\n            }) : _createVNode(VChip, slotProps, null)]\n          }), !hasChips && (slots.selection ? slots.selection({\n            selection\n          }) : _createVNode(\"span\", {\n            \"class\": \"v-combobox__selection-text\"\n          }, [selection.title, props.multiple && index < selections.value.length - 1 && _createVNode(\"span\", {\n            \"class\": \"v-combobox__selection-comma\"\n          }, [_createTextVNode(\",\")])]))]);\n        })])\n      });\n    });\n    return useForwardRef({\n      isFocused,\n      isPristine,\n      menu,\n      search,\n      selectionIndex,\n      filteredItems,\n      select\n    }, vTextFieldRef);\n  }\n\n});","map":{"version":3,"mappings":"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","names":["genItem","makeSelectProps","VChip","VDefaultsProvider","VList","VListItem","VMenu","VTextField","makeFilterProps","useFilter","makeTransitionProps","useForwardRef","useLocale","useProxiedModel","useTextColor","computed","nextTick","ref","watch","genericComponent","useRender","wrapInArray","highlightResult","text","matches","length","Array","isArray","Error","substr","VCombobox","name","props","delimiters","filterKeys","hideNoData","transition","emits","val","setup","slots","_ref","t","vTextFieldRef","activator","isFocused","isPristine","menu","selectionIndex","color","value","_vTextFieldRef$value","items","map","textColorClasses","textColorStyles","model","v","multiple","_search","search","get","set","_props$delimiters","values","split","RegExp","join","forEach","trim","select","filteredItems","undefined","selections","array","index","unwrapped","item","found","find","selection","push","selected","onClear","e","openOnClear","onClickControl","onKeydown","selectionStart","preventDefault","includes","key","prev","setSelectionRange","next","onAfterLeave","findIndex","filter","title","$el","querySelector","hasChips","chips","chip","$event","menuIcon","default","eager","noDataText","_ref2","_search$value","onChipClose","stopPropagation","slotProps","modelValue","closable","closableChips","size"],"sources":["../../../src/components/VCombobox/VCombobox.tsx"],"sourcesContent":["// Styles\nimport './VCombobox.sass'\n\n// Components\nimport { genItem, makeSelectProps } from '@/components/VSelect/VSelect'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { VTextField } from '@/components/VTextField'\n\n// Composables\nimport { makeFilterProps, useFilter } from '@/composables/filter'\nimport { makeTransitionProps } from '@/composables/transition'\nimport { useForwardRef } from '@/composables/forwardRef'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useTextColor } from '@/composables/color'\n\n// Utility\nimport { computed, nextTick, ref, watch } from 'vue'\nimport { genericComponent, useRender, wrapInArray } from '@/util'\n\n// Types\nimport type { FilterMatch } from '@/composables/filter'\nimport type { DefaultChipSlot, InternalSelectItem } from '@/components/VSelect/VSelect'\nimport type { MakeSlots } from '@/util'\nimport type { PropType } from 'vue'\n\nexport interface InternalComboboxItem extends InternalSelectItem {\n  selected: boolean\n}\n\nexport interface DefaultComboboxSlot {\n  selection: InternalComboboxItem\n}\n\nfunction highlightResult (text: string, matches: FilterMatch, length: number) {\n  if (Array.isArray(matches)) throw new Error('Multiple matches is not implemented')\n\n  return typeof matches === 'number' && ~matches\n    ? (\n      <>\n        <span class=\"v-combobox__unmask\">{ text.substr(0, matches) }</span>\n        <span class=\"v-combobox__mask\">{ text.substr(matches, length) }</span>\n        <span class=\"v-combobox__unmask\">{ text.substr(matches + length) }</span>\n      </>\n    )\n    : text\n}\n\nexport const VCombobox = genericComponent<new <T>() => {\n  $slots: MakeSlots<{\n    chip: [DefaultChipSlot]\n    default: []\n    selection: [DefaultComboboxSlot]\n  }>\n}>()({\n  name: 'VCombobox',\n\n  props: {\n    // TODO: implement post keyboard support\n    // autoSelectFirst: Boolean,\n    delimiters: Array as PropType<string[]>,\n\n    ...makeFilterProps({ filterKeys: ['title'] }),\n    ...makeSelectProps({ hideNoData: true }),\n    ...makeTransitionProps({ transition: false }),\n  },\n\n  emits: {\n    'update:modelValue': (val: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref()\n    const activator = ref()\n    const isFocused = ref(false)\n    const isPristine = ref(true)\n    const menu = ref(false)\n    const selectionIndex = ref(-1)\n    const color = computed(() => vTextFieldRef.value?.color)\n    const items = computed(() => props.items.map(genItem))\n    const { textColorClasses, textColorStyles } = useTextColor(color)\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => wrapInArray(v || []),\n      (v: any) => props.multiple ? v : v[0]\n    )\n    const _search = ref('')\n    const search = computed<string>({\n      get: () => props.multiple ? _search.value : genItem(model.value[0]).value,\n      set: val => {\n        if (props.multiple) {\n          _search.value = val\n        } else {\n          model.value = [val]\n        }\n\n        if (val && props.multiple && props.delimiters?.length) {\n          const values = val.split(new RegExp(`(?:${props.delimiters.join('|')})+`))\n          if (values.length > 1) {\n            values.forEach(v => {\n              v = v.trim()\n              if (v) select({ value: v })\n            })\n            _search.value = ''\n          }\n        }\n\n        if (!val) selectionIndex.value = -1\n        if (isFocused.value) menu.value = true\n\n        isPristine.value = !val\n      },\n    })\n    const { filteredItems } = useFilter(props, items, computed(() => isPristine.value ? undefined : search.value))\n\n    const selections = computed(() => {\n      const array: InternalComboboxItem[] = []\n      let index = 0\n      for (const unwrapped of model.value) {\n        const item = genItem(unwrapped)\n\n        const found = array.find(selection => selection.value === item.value)\n\n        if (found == null) {\n          array.push({\n            ...item,\n            index,\n            selected: index === selectionIndex.value,\n          })\n\n          index++\n        }\n      }\n\n      return array\n    })\n    const selected = computed(() => selections.value.map(selection => selection.value))\n    const selection = computed(() => selections.value[selectionIndex.value])\n\n    function onClear (e: MouseEvent) {\n      model.value = []\n\n      if (props.openOnClear) {\n        menu.value = true\n      }\n    }\n    function onClickControl () {\n      if (props.hideNoData && !filteredItems.value.length) return\n\n      menu.value = true\n    }\n    function onKeydown (e: KeyboardEvent) {\n      const selectionStart = vTextFieldRef.value.selectionStart\n      const length = selected.value.length\n\n      if (selectionIndex.value > -1) e.preventDefault()\n\n      if (['Enter', 'ArrowDown'].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (['Enter', 'Escape', 'Tab'].includes(e.key)) {\n        isPristine.value = true\n      }\n\n      if (!props.multiple) return\n\n      if (['Backspace', 'Delete'].includes(e.key)) {\n        if (selectionIndex.value < 0) {\n          if (e.key === 'Backspace' && !search.value) {\n            selectionIndex.value = length - 1\n          }\n\n          return\n        }\n\n        select(selection.value)\n\n        nextTick(() => !selection.value && (selectionIndex.value = length - 2))\n      }\n\n      if (e.key === 'ArrowLeft') {\n        if (selectionIndex.value < 0 && selectionStart > 0) return\n\n        const prev = selectionIndex.value > -1\n          ? selectionIndex.value - 1\n          : length - 1\n\n        if (selections.value[prev]) {\n          selectionIndex.value = prev\n        } else {\n          selectionIndex.value = -1\n          vTextFieldRef.value.setSelectionRange(search.value.length, search.value.length)\n        }\n      }\n\n      if (e.key === 'ArrowRight') {\n        if (selectionIndex.value < 0) return\n\n        const next = selectionIndex.value + 1\n\n        if (selections.value[next]) {\n          selectionIndex.value = next\n        } else {\n          selectionIndex.value = -1\n          vTextFieldRef.value.setSelectionRange(0, 0)\n        }\n      }\n\n      if (e.key === 'Enter') {\n        select({ value: search.value })\n        search.value = ''\n      }\n    }\n    function onAfterLeave () {\n      if (isFocused.value) isPristine.value = true\n    }\n    function select (item: any) {\n      if (props.multiple) {\n        const index = selections.value.findIndex(selection => selection.value === item.value)\n\n        if (index === -1) {\n          model.value.push(item.value)\n        } else {\n          model.value = selected.value.filter(selection => selection !== item.value)\n        }\n\n        search.value = ''\n      } else {\n        search.value = item.title\n\n        // watch for search watcher to trigger\n        nextTick(() => {\n          menu.value = false\n          isPristine.value = true\n        })\n      }\n    }\n\n    watch(() => vTextFieldRef.value, val => {\n      activator.value = val.$el.querySelector('.v-input__control')\n    })\n\n    watch(filteredItems, val => {\n      if (!val.length && props.hideNoData) menu.value = false\n    })\n\n    watch(isFocused, val => {\n      if (val) {\n        selectionIndex.value = -1\n      } else {\n        menu.value = false\n\n        if (!props.multiple || !search.value) return\n\n        model.value.push(search.value)\n        search.value = ''\n      }\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          v-model={ search.value }\n          class={[\n            'v-combobox',\n            {\n              'v-combobox--active-menu': menu.value,\n              'v-combobox--chips': !!props.chips,\n              'v-combobox--selecting-index': selectionIndex.value > -1,\n              [`v-combobox--${props.multiple ? 'multiple' : 'single'}`]: true,\n            },\n          ]}\n          appendInnerIcon={ props.items.length ? props.menuIcon : undefined }\n          dirty={ selected.value.length > 0 }\n          onClick:clear={ onClear }\n          onClick:control={ onClickControl }\n          onClick:input={ onClickControl }\n          onFocus={ () => isFocused.value = true }\n          onBlur={ () => isFocused.value = false }\n          onKeydown={ onKeydown }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                { activator.value && (\n                  <VMenu\n                    v-model={ menu.value }\n                    activator={ activator.value }\n                    contentClass=\"v-combobox__content\"\n                    eager={ props.eager }\n                    openOnClick={ false }\n                    transition={ props.transition }\n                    onAfterLeave={ onAfterLeave }\n                  >\n                    <VList\n                      selected={ selected.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                    >\n                      { !filteredItems.value.length && !props.hideNoData && (\n                        <VListItem title={ t(props.noDataText) } />\n                      ) }\n\n                      { filteredItems.value.map(({ item, matches }) => (\n                        <VListItem\n                          value={ item.value }\n                          onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                          onClick={ () => select(item) }\n                        >\n                          {{\n                            title: () => {\n                              return isPristine.value\n                                ? item.title\n                                : highlightResult(item.title, matches.title, search.value?.length ?? 0)\n                            },\n                          }}\n                        </VListItem>\n                      )) }\n                    </VList>\n                  </VMenu>\n                ) }\n\n                { selections.value.map((selection, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(selection)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    modelValue: true,\n                  }\n\n                  return (\n                    <div\n                      class={[\n                        'v-combobox__selection',\n                        selection.selected && [\n                          'v-combobox__selection--selected',\n                          textColorClasses.value,\n                        ],\n                      ]}\n                      style={ selection.selected ? textColorStyles.value : {} }\n                    >\n                      { hasChips && (\n                        <VDefaultsProvider\n                          defaults={{\n                            VChip: {\n                              closable: props.closableChips,\n                              size: 'small',\n                              text: selection.title,\n                            },\n                          }}\n                        >\n                          { slots.chip\n                            ? slots.chip({ props: slotProps, selection })\n                            : (<VChip { ...slotProps } />)\n                          }\n                        </VDefaultsProvider>\n                      ) }\n\n                      { !hasChips && (\n                        slots.selection\n                          ? slots.selection({ selection })\n                          : (\n                            <span class=\"v-combobox__selection-text\">\n                              { selection.title }\n                              { props.multiple && (index < selections.value.length - 1) && (\n                                <span class=\"v-combobox__selection-comma\">,</span>\n                              ) }\n                            </span>\n                          )\n                      ) }\n                    </div>\n                  )\n                }) }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return useForwardRef({\n      isFocused,\n      isPristine,\n      menu,\n      search,\n      selectionIndex,\n      filteredItems,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VCombobox = InstanceType<typeof VCombobox>\n"]},"metadata":{},"sourceType":"module"}