{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, createVNode as _createVNode, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-1affcddc\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Spheres\", -1\n/* HOISTED */\n));\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Textes\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Images\", -1\n/* HOISTED */\n));\n\nconst _hoisted_4 = {\n  class: \"scene\",\n  style: {\n    \"width\": \"100%\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PopupComponent = _resolveComponent(\"PopupComponent\");\n\n  const _component_PopupEditComponent = _resolveComponent(\"PopupEditComponent\");\n\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [$data.popupOpen ? (_openBlock(), _createBlock(_component_PopupComponent, {\n    key: 0,\n    status: $options.openOrClosePopup,\n    addSphere: $options.addSphere,\n    addImage: $options.addImage,\n    addText: $options.addText\n  }, null, 8\n  /* PROPS */\n  , [\"status\", \"addSphere\", \"addImage\", \"addText\"])) : _createCommentVNode(\"v-if\", true), $data.editPopupOpen ? (_openBlock(), _createBlock(_component_PopupEditComponent, {\n    key: 1,\n    status: $options.openOrCloseEditPopup,\n    editImage: $options.editImage,\n    editSphere: $options.editSphere,\n    editText: $options.editText,\n    object: $data.selected,\n    typeObject: $data.selectedType\n  }, null, 8\n  /* PROPS */\n  , [\"status\", \"editImage\", \"editSphere\", \"editText\", \"object\", \"typeObject\"])) : _createCommentVNode(\"v-if\", true), _hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.spheres, sphere => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: sphere.id,\n      class: \"scene\"\n    }, [_createVNode(_component_v_btn, {\n      icon: \"mdi-cog\",\n      color: \"#607D8B\",\n      size: \"25\",\n      variant: \"outlined\",\n      onClick: $event => $options.openOrCloseEditPopup(sphere, 'sphere')\n    }, null, 8\n    /* PROPS */\n    , [\"onClick\"]), _createElementVNode(\"p\", null, _toDisplayString(sphere.name), 1\n    /* TEXT */\n    ), _createVNode(_component_v_btn, {\n      icon: \"mdi-close\",\n      color: \"#EF5350\",\n      size: \"25\",\n      variant: \"outlined\",\n      onClick: _cache[0] || (_cache[0] = $event => $options.remove(_ctx.component, 'sphere'))\n    })]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _hoisted_2, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.texts, text => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: text.id,\n      class: \"scene\"\n    }, [_createVNode(_component_v_btn, {\n      icon: \"mdi-cog\",\n      color: \"#607D8B\",\n      size: \"25\",\n      variant: \"outlined\",\n      onClick: $event => $options.openOrCloseEditPopup(text, 'text')\n    }, null, 8\n    /* PROPS */\n    , [\"onClick\"]), _createElementVNode(\"p\", null, _toDisplayString(text.name), 1\n    /* TEXT */\n    ), _createVNode(_component_v_btn, {\n      icon: \"mdi-close\",\n      color: \"#EF5350\",\n      size: \"25\",\n      variant: \"outlined\",\n      onClick: _cache[1] || (_cache[1] = $event => $options.remove(_ctx.component, 'text'))\n    })]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _hoisted_3, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.images, image => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: image.id,\n      class: \"scene\"\n    }, [_createVNode(_component_v_btn, {\n      icon: \"mdi-cog\",\n      color: \"#607D8B\",\n      size: \"25\",\n      variant: \"outlined\",\n      onClick: $event => $options.openOrCloseEditPopup(image, 'image')\n    }, null, 8\n    /* PROPS */\n    , [\"onClick\"]), _createElementVNode(\"p\", null, _toDisplayString(image.name), 1\n    /* TEXT */\n    ), _createVNode(_component_v_btn, {\n      icon: \"mdi-close\",\n      color: \"#EF5350\",\n      size: \"25\",\n      variant: \"outlined\",\n      onClick: _cache[2] || (_cache[2] = $event => $options.remove(_ctx.component, 'image'))\n    })]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_v_btn, {\n    icon: \"mdi-plus\",\n    color: \"#81C784\",\n    class: \"add\",\n    size: \"25\",\n    variant: \"outlined\",\n    onClick: $options.openOrClosePopup\n  }, null, 8\n  /* PROPS */\n  , [\"onClick\"])])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;gEAiBEA,oBAAgB,IAAhB,EAAgB,IAAhB,EAAI,SAAJ,EAAW;AAAA;AAAX;;gEAoBAA,oBAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,EAAU;AAAA;AAAV;;gEAoBAA,oBAAe,IAAf,EAAe,IAAf,EAAI,QAAJ,EAAU;AAAA;AAAV;;;AAoBKC,OAAK,EAAC;AAAQC,OAAmB,EAAnB;AAAA;AAAA;;;;;;;;;6DA3EXC,iCADRC,aAMEC,yBANF,EAME;UAAA;AAJCC,UAAM,EAAEC,yBAIT;AAHCC,aAAS,EAAED,kBAGZ;AAFCE,YAAQ,EAAEF,iBAEX;AADCG,WAAO,EAAEH;AACV,GANF;;AAAA,0FAQQJ,qCADRC,aAQEO,6BARF,EAQE;UAAA;AANCL,UAAM,EAAEC,6BAMT;AALCK,aAAS,EAAEL,kBAKZ;AAJCM,cAAU,EAAEN,mBAIb;AAHCO,YAAQ,EAAEP,iBAGX;AAFCQ,UAAM,EAAEZ,cAET;AADCa,cAAU,EAAEb;AACb,GARF;;AAAA,qHASAc,YACAjB,oBAkBK,IAlBL,EAkBK,IAlBL,EAkBK,oBAjBHkB,oBAgBKC,SAhBL,EAgBK,IAhBL,EAgBKC,YAhBgBjB,aAgBhB,EAhBMkB,MAAiB,IAAX;yBAAjBH,oBAgBK,IAhBL,EAgBK;AAhB0BI,SAAG,EAAED,MAAM,CAACE,EAgBtC;AAhB0CtB,WAAK,EAAC;AAgBhD,KAhBL,GACEuB,aAMSC,gBANT,EAMS;AALPC,UAAI,EAAC,SAKE;AAJPC,WAAK,EAAC,SAIC;AAHPC,UAAI,EAAC,IAGE;AAFPC,aAAO,EAAC,UAED;AADNC,aAAK,YAAEvB,8BAAqBc,MAArB,EAA2B,QAA3B;AACD,KANT;;AAAA,oBAOArB,oBAAwB,GAAxB,EAAwB,IAAxB,EAAwB+B,iBAAlBV,MAAM,CAACW,IAAW,CAAxB,EAAiB;AAAA;AAAjB,OACAR,aAMSC,gBANT,EAMS;AALPC,UAAI,EAAC,WAKE;AAJPC,WAAK,EAAC,SAIC;AAHPC,UAAI,EAAC,IAGE;AAFPC,aAAO,EAAC,UAED;AADNC,aAAK,sCAAEvB,gBAAO0B,cAAP,EAAgB,QAAhB,CAAF;AACC,KANT,EATF;GAgBK,CAhBL;;AAAA,GAiBG,EAlBL,GAmBAC,YACAlC,oBAkBK,IAlBL,EAkBK,IAlBL,EAkBK,oBAjBHkB,oBAgBKC,SAhBL,EAgBK,IAhBL,EAgBKC,YAhBcjB,WAgBd,EAhBMgC,IAAa,IAAT;yBAAfjB,oBAgBK,IAhBL,EAgBK;AAhBsBI,SAAG,EAAEa,IAAI,CAACZ,EAgBhC;AAhBoCtB,WAAK,EAAC;AAgB1C,KAhBL,GACEuB,aAMSC,gBANT,EAMS;AALPC,UAAI,EAAC,SAKE;AAJPC,WAAK,EAAC,SAIC;AAHPC,UAAI,EAAC,IAGE;AAFPC,aAAO,EAAC,UAED;AADNC,aAAK,YAAEvB,8BAAqB4B,IAArB,EAAyB,MAAzB;AACD,KANT;;AAAA,oBAOAnC,oBAAsB,GAAtB,EAAsB,IAAtB,EAAsB+B,iBAAhBI,IAAI,CAACH,IAAW,CAAtB,EAAe;AAAA;AAAf,OACAR,aAMSC,gBANT,EAMS;AALPC,UAAI,EAAC,WAKE;AAJPC,WAAK,EAAC,SAIC;AAHPC,UAAI,EAAC,IAGE;AAFPC,aAAO,EAAC,UAED;AADNC,aAAK,sCAAEvB,gBAAO0B,cAAP,EAAgB,MAAhB,CAAF;AACC,KANT,EATF;GAgBK,CAhBL;;AAAA,GAiBG,EAlBL,GAmBAG,YACApC,oBAkBK,IAlBL,EAkBK,IAlBL,EAkBK,oBAjBHkB,oBAgBKC,SAhBL,EAgBK,IAhBL,EAgBKC,YAhBejB,YAgBf,EAhBMkC,KAAe,IAAV;yBAAhBnB,oBAgBK,IAhBL,EAgBK;AAhBwBI,SAAG,EAAEe,KAAK,CAACd,EAgBnC;AAhBuCtB,WAAK,EAAC;AAgB7C,KAhBL,GACEuB,aAMSC,gBANT,EAMS;AALPC,UAAI,EAAC,SAKE;AAJPC,WAAK,EAAC,SAIC;AAHPC,UAAI,EAAC,IAGE;AAFPC,aAAO,EAAC,UAED;AADNC,aAAK,YAAEvB,8BAAqB8B,KAArB,EAA0B,OAA1B;AACD,KANT;;AAAA,oBAOArC,oBAAuB,GAAvB,EAAuB,IAAvB,EAAuB+B,iBAAjBM,KAAK,CAACL,IAAW,CAAvB,EAAgB;AAAA;AAAhB,OACAR,aAMSC,gBANT,EAMS;AALPC,UAAI,EAAC,WAKE;AAJPC,WAAK,EAAC,SAIC;AAHPC,UAAI,EAAC,IAGE;AAFPC,aAAO,EAAC,UAED;AADNC,aAAK,sCAAEvB,gBAAO0B,cAAP,EAAgB,OAAhB,CAAF;AACC,KANT,EATF;GAgBK,CAhBL;;AAAA,GAiBG,EAlBL,GAmBAjC,oBASM,KATN,cASM,CARJwB,aAOSC,gBAPT,EAOS;AANPC,QAAI,EAAC,UAME;AALPC,SAAK,EAAC,SAKC;AAJP1B,SAAK,EAAC,KAIC;AAHP2B,QAAI,EAAC,IAGE;AAFPC,WAAO,EAAC,UAED;AADNC,WAAK,EAAEvB;AACD,GAPT;;AAAA,gBAQI,CATN","names":["_createElementVNode","class","style","$data","_createBlock","_component_PopupComponent","status","$options","addSphere","addImage","addText","_component_PopupEditComponent","editImage","editSphere","editText","object","typeObject","_hoisted_1","_createElementBlock","_Fragment","_renderList","sphere","key","id","_createVNode","_component_v_btn","icon","color","size","variant","onClick","_toDisplayString","name","_ctx","_hoisted_2","text","_hoisted_3","image"],"sourceRoot":"","sources":["D:\\Stage\\App\\xr-place-application\\client\\src\\components\\MyComponents.vue"],"sourcesContent":["<template>\n  <PopupComponent\n    v-if=\"popupOpen\"\n    :status=\"openOrClosePopup\"\n    :addSphere=\"addSphere\"\n    :addImage=\"addImage\"\n    :addText=\"addText\"\n  />\n  <PopupEditComponent\n    v-if=\"editPopupOpen\"\n    :status=\"openOrCloseEditPopup\"\n    :editImage=\"editImage\"\n    :editSphere=\"editSphere\"\n    :editText=\"editText\"\n    :object=\"selected\"\n    :typeObject=\"selectedType\"\n  />\n  <h3>Spheres</h3>\n  <ul>\n    <li v-for=\"sphere in spheres\" :key=\"sphere.id\" class=\"scene\">\n      <v-btn\n        icon=\"mdi-cog\"\n        color=\"#607D8B\"\n        size=\"25\"\n        variant=\"outlined\"\n        @click=\"openOrCloseEditPopup(sphere, 'sphere')\"\n      ></v-btn>\n      <p>{{ sphere.name }}</p>\n      <v-btn\n        icon=\"mdi-close\"\n        color=\"#EF5350\"\n        size=\"25\"\n        variant=\"outlined\"\n        @click=\"remove(component, 'sphere')\"\n      ></v-btn>\n    </li>\n  </ul>\n  <h3>Textes</h3>\n  <ul>\n    <li v-for=\"text in texts\" :key=\"text.id\" class=\"scene\">\n      <v-btn\n        icon=\"mdi-cog\"\n        color=\"#607D8B\"\n        size=\"25\"\n        variant=\"outlined\"\n        @click=\"openOrCloseEditPopup(text, 'text')\"\n      ></v-btn>\n      <p>{{ text.name }}</p>\n      <v-btn\n        icon=\"mdi-close\"\n        color=\"#EF5350\"\n        size=\"25\"\n        variant=\"outlined\"\n        @click=\"remove(component, 'text')\"\n      ></v-btn>\n    </li>\n  </ul>\n  <h3>Images</h3>\n  <ul>\n    <li v-for=\"image in images\" :key=\"image.id\" class=\"scene\">\n      <v-btn\n        icon=\"mdi-cog\"\n        color=\"#607D8B\"\n        size=\"25\"\n        variant=\"outlined\"\n        @click=\"openOrCloseEditPopup(image, 'image')\"\n      ></v-btn>\n      <p>{{ image.name }}</p>\n      <v-btn\n        icon=\"mdi-close\"\n        color=\"#EF5350\"\n        size=\"25\"\n        variant=\"outlined\"\n        @click=\"remove(component, 'image')\"\n      ></v-btn>\n    </li>\n  </ul>\n  <div class=\"scene\" style=\"width: 100%\">\n    <v-btn\n      icon=\"mdi-plus\"\n      color=\"#81C784\"\n      class=\"add\"\n      size=\"25\"\n      variant=\"outlined\"\n      @click=\"openOrClosePopup\"\n    ></v-btn>\n  </div>\n</template>\n\n<style scoped>\n.scene {\n  display: flex;\n  justify-content: space-between;\n  margin: 5%;\n}\n\n.add {\n  display: flex;\n  margin-left: auto;\n}\n</style>\n\n<script>\nimport PopupComponent from \"./Popup/PopupMyComponents.vue\";\nimport PopupEditComponent from \"./Popup/PopupEditComponents.vue\";\n\nlet sphereId = 0;\nlet textId = 0;\nlet imageId = 0;\n\nexport default {\n  components: { PopupComponent, PopupEditComponent },\n\n  data() {\n    return {\n      popupOpen: false,\n      editPopupOpen: false,\n      selected: null,\n      selectedType: \"\",\n      spheres: [\n        { id: sphereId++, name: \"sphere 1\" },\n        { id: sphereId++, name: \"sphere 2\" },\n        { id: sphereId++, name: \"sphere 3\" },\n      ],\n      texts: [\n        { id: textId++, name: \"texte 1\", txt: \"I am text 1\" },\n        { id: textId++, name: \"texte 2\", txt: \"I am text 2\" },\n        { id: textId++, name: \"texte 3\", txt: \"I am text 3\" },\n      ],\n      images: [],\n    };\n  },\n  methods: {\n    addSphere(n) {\n      this.spheres.push({ id: sphereId++, name: n });\n    },\n    addText(n, t) {\n      this.texts.push({ id: textId++, name: n, txt: t });\n    },\n    addImage(n, f) {\n      this.images.push({ id: imageId++, name: n, file: f });\n    },\n    remove(component, type) {\n      if (type == \"sphere\") {\n        this.spheres = this.spheres.filter((t) => t !== component);\n      } else if (type == \"text\") {\n        this.texts = this.texts.filter((t) => t !== component);\n      } else if (type == \"image\") {\n        this.images = this.images.filter((t) => t !== component);\n      }\n    },\n    openOrClosePopup() {\n      this.popupOpen = !this.popupOpen;\n    },\n    openOrCloseEditPopup(object, type) {\n      this.editPopupOpen = !this.editPopupOpen;\n      this.selected = object;\n      this.selectedType = type;\n    },\n    editImage(img, name, file) {\n      let tmpId = img.id;\n      this.images[tmpId].name = name;\n      this.images[tmpId].file = file;\n    },\n    editText(txt, name, content) {\n      let tmpId = txt.id;\n      this.texts[tmpId].name = name;\n      this.texts[tmpId].txt = content;\n    },\n    editSphere(sph, name) {\n      let tmpId = sph.id;\n      this.spheres[tmpId].name = name;\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}