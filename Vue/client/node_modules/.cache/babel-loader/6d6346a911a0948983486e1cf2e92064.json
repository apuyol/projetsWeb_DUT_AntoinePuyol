{"ast":null,"code":"import { fabric } from \"fabric\";\nexport default {\n  props: {\n    status: Function,\n    object: Object,\n    typeObject: String,\n    editSphere: Function,\n    editText: Function,\n    editImage: Function,\n    editThreeDFiles: Function\n  },\n\n  mounted() {\n    if (this.typeObject == \"file3d\") {\n      var canvas = new fabric.Canvas(\"myCanva\");\n      canvas.setDimensions({\n        width: 279,\n        height: 150\n      });\n      var circle = new fabric.Circle({\n        radius: this.sphereRadius,\n        top: canvas.height / 2 - this.sphereRadius,\n        left: canvas.width / 2 - this.sphereRadius,\n        fill: \"white\",\n        stroke: \"black\",\n        selectable: false\n      });\n      canvas.sendToBack(circle);\n      var point = new fabric.Circle({\n        radius: 5,\n        top: this.object.z + circle.top,\n        left: this.object.x + circle.left,\n        fill: \"black\",\n        selectable: false\n      });\n      this.globalX = point.left;\n      this.globalZ = point.top;\n      canvas.bringToFront(point);\n      this.canva = canvas;\n      var canvas2 = new fabric.Canvas(\"canvasY\");\n      canvas.setDimensions({\n        width: 279,\n        height: 150\n      });\n      var point2 = new fabric.Circle({\n        radius: 5,\n        top: this.object.y + circle.top,\n        left: canvas.width / 2 - 5,\n        fill: \"black\"\n      });\n      this.globalY = point2.top;\n      this.centerY = point2.left;\n      canvas2.bringToFront(point2);\n      var circle2 = new fabric.Circle({\n        radius: this.sphereRadius,\n        top: canvas.height / 2 - this.sphereRadius,\n        left: canvas.width / 2 - this.sphereRadius,\n        fill: \"white\",\n        stroke: \"black\",\n        selectable: false\n      });\n      canvas2.sendToBack(circle2);\n      this.canvaY = canvas2;\n    }\n  },\n\n  data() {\n    return {\n      name: this.object.name,\n      text: undefined || this.object.txt,\n      file: undefined || [this.object.file],\n      sphereRadius: undefined || this.object.radius,\n      globalX: 0,\n      globalZ: 0,\n      globalY: 0,\n      centerY: 0,\n      canva: new fabric.Canvas(),\n      canvaY: new fabric.Canvas()\n    };\n  },\n\n  watch: {\n    sphereRadius() {\n      this.canva.remove(this.canva.getObjects()[0]);\n      var circle = new fabric.Circle({\n        radius: this.sphereRadius,\n        top: this.canva.height / 2 - this.sphereRadius,\n        left: this.canva.width / 2 - this.sphereRadius,\n        fill: \"white\",\n        stroke: \"black\",\n        selectable: false\n      });\n      this.canva.add(circle);\n      this.canva.sendToBack(circle);\n    }\n\n  },\n  methods: {\n    cancel() {\n      this.status(this.object, this.typeObject);\n    },\n\n    validate() {\n      if (this.typeObject == \"sphere\") {\n        this.editSphere(this.object, this.name);\n      } else if (this.typeObject == \"text\") {\n        this.editText(this.object, this.name, this.text);\n      } else if (this.typeObject == \"image\") {\n        this.editImage(this.object, this.name, this.file[0]);\n      } else if (this.typeObject == \"file3d\") {\n        var x = this.globalX - this.canva.getObjects()[0].left;\n        var y = this.globalY - this.canvaY.getObjects()[0].top;\n        var z = this.globalZ - this.canva.getObjects()[0].top;\n        console.log(x, y, z);\n        this.editThreeDFiles(this.object, this.name, this.file[0], x, z, this.sphereRadius, y);\n      }\n\n      this.status();\n    },\n\n    changePointCoord() {\n      this.canva.remove(this.canva.getObjects()[1]);\n      var point = new fabric.Circle({\n        radius: 5,\n        top: this.globalY,\n        left: this.globalX,\n        fill: \"black\",\n        selectable: false\n      });\n      this.canva.bringToFront(point);\n    },\n\n    minusX() {\n      this.globalX--;\n      this.changePointCoord();\n    },\n\n    plusX() {\n      this.globalX++;\n      this.changePointCoord();\n    },\n\n    minusZ() {\n      this.globalZ--;\n      this.changePointCoord();\n    },\n\n    plusZ() {\n      this.globalZ++;\n      this.changePointCoord();\n    },\n\n    minusY() {\n      this.globalY--;\n      this.changePointCoordY();\n    },\n\n    plusY() {\n      this.globalY++;\n      this.changePointCoordY();\n    },\n\n    changePointCoordY() {\n      this.canvaY.remove(this.canvaY.getObjects()[1]);\n      var point = new fabric.Circle({\n        radius: 5,\n        top: this.globalY,\n        left: this.centerY,\n        fill: \"black\"\n      });\n      this.canvaY.bringToFront(point);\n    },\n\n    test() {\n      console.log(this.object);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA4FA,SAASA,MAAT,QAAuB,QAAvB;AAEA,eAAe;AACbC,OAAK,EAAE;AACLC,UAAM,EAAEC,QADH;AAELC,UAAM,EAAEC,MAFH;AAGLC,cAAU,EAAEC,MAHP;AAILC,cAAU,EAAEL,QAJP;AAKLM,YAAQ,EAAEN,QALL;AAMLO,aAAS,EAAEP,QANN;AAOLQ,mBAAe,EAAER;AAPZ,GADM;;AAUbS,SAAO,GAAG;AACR,QAAI,KAAKN,UAAL,IAAmB,QAAvB,EAAiC;AAC/B,UAAIO,MAAK,GAAI,IAAIb,MAAM,CAACc,MAAX,CAAkB,SAAlB,CAAb;AACAD,YAAM,CAACE,aAAP,CAAqB;AACnBC,aAAK,EAAE,GADY;AAEnBC,cAAM,EAAE;AAFW,OAArB;AAKA,UAAIC,MAAK,GAAI,IAAIlB,MAAM,CAACmB,MAAX,CAAkB;AAC7BC,cAAM,EAAE,KAAKC,YADgB;AAE7BC,WAAG,EAAET,MAAM,CAACI,MAAP,GAAgB,CAAhB,GAAoB,KAAKI,YAFD;AAG7BE,YAAI,EAAEV,MAAM,CAACG,KAAP,GAAe,CAAf,GAAmB,KAAKK,YAHD;AAI7BG,YAAI,EAAE,OAJuB;AAK7BC,cAAM,EAAE,OALqB;AAM7BC,kBAAU,EAAE;AANiB,OAAlB,CAAb;AASAb,YAAM,CAACc,UAAP,CAAkBT,MAAlB;AACA,UAAIU,KAAI,GAAI,IAAI5B,MAAM,CAACmB,MAAX,CAAkB;AAC5BC,cAAM,EAAE,CADoB;AAE5BE,WAAG,EAAE,KAAKlB,MAAL,CAAYyB,CAAZ,GAAgBX,MAAM,CAACI,GAFA;AAG5BC,YAAI,EAAE,KAAKnB,MAAL,CAAY0B,CAAZ,GAAgBZ,MAAM,CAACK,IAHD;AAI5BC,YAAI,EAAE,OAJsB;AAK5BE,kBAAU,EAAE;AALgB,OAAlB,CAAZ;AAOA,WAAKK,OAAL,GAAeH,KAAK,CAACL,IAArB;AACA,WAAKS,OAAL,GAAeJ,KAAK,CAACN,GAArB;AACAT,YAAM,CAACoB,YAAP,CAAoBL,KAApB;AAEA,WAAKM,KAAL,GAAarB,MAAb;AAEA,UAAIsB,OAAM,GAAI,IAAInC,MAAM,CAACc,MAAX,CAAkB,SAAlB,CAAd;AACAD,YAAM,CAACE,aAAP,CAAqB;AACnBC,aAAK,EAAE,GADY;AAEnBC,cAAM,EAAE;AAFW,OAArB;AAKA,UAAImB,MAAK,GAAI,IAAIpC,MAAM,CAACmB,MAAX,CAAkB;AAC7BC,cAAM,EAAE,CADqB;AAE7BE,WAAG,EAAE,KAAKlB,MAAL,CAAYiC,CAAZ,GAAgBnB,MAAM,CAACI,GAFC;AAG7BC,YAAI,EAAEV,MAAM,CAACG,KAAP,GAAe,CAAf,GAAmB,CAHI;AAI7BQ,YAAI,EAAE;AAJuB,OAAlB,CAAb;AAMA,WAAKc,OAAL,GAAeF,MAAM,CAACd,GAAtB;AACA,WAAKiB,OAAL,GAAeH,MAAM,CAACb,IAAtB;AACAY,aAAO,CAACF,YAAR,CAAqBG,MAArB;AACA,UAAII,OAAM,GAAI,IAAIxC,MAAM,CAACmB,MAAX,CAAkB;AAC9BC,cAAM,EAAE,KAAKC,YADiB;AAE9BC,WAAG,EAAET,MAAM,CAACI,MAAP,GAAgB,CAAhB,GAAoB,KAAKI,YAFA;AAG9BE,YAAI,EAAEV,MAAM,CAACG,KAAP,GAAe,CAAf,GAAmB,KAAKK,YAHA;AAI9BG,YAAI,EAAE,OAJwB;AAK9BC,cAAM,EAAE,OALsB;AAM9BC,kBAAU,EAAE;AANkB,OAAlB,CAAd;AAQAS,aAAO,CAACR,UAAR,CAAmBa,OAAnB;AAEA,WAAKC,MAAL,GAAcN,OAAd;AACF;AACD,GApEY;;AAqEbO,MAAI,GAAG;AACL,WAAO;AACLC,UAAI,EAAE,KAAKvC,MAAL,CAAYuC,IADb;AAELC,UAAI,EAAEC,SAAQ,IAAK,KAAKzC,MAAL,CAAY0C,GAF1B;AAGLC,UAAI,EAAEF,SAAQ,IAAK,CAAC,KAAKzC,MAAL,CAAY2C,IAAb,CAHd;AAIL1B,kBAAY,EAAEwB,SAAQ,IAAK,KAAKzC,MAAL,CAAYgB,MAJlC;AAKLW,aAAO,EAAE,CALJ;AAMLC,aAAO,EAAE,CANJ;AAOLM,aAAO,EAAE,CAPJ;AAQLC,aAAO,EAAE,CARJ;AASLL,WAAK,EAAE,IAAIlC,MAAM,CAACc,MAAX,EATF;AAUL2B,YAAM,EAAE,IAAIzC,MAAM,CAACc,MAAX;AAVH,KAAP;AAYD,GAlFY;;AAmFbkC,OAAK,EAAE;AACL3B,gBAAY,GAAG;AACb,WAAKa,KAAL,CAAWe,MAAX,CAAkB,KAAKf,KAAL,CAAWgB,UAAX,GAAwB,CAAxB,CAAlB;AACA,UAAIhC,MAAK,GAAI,IAAIlB,MAAM,CAACmB,MAAX,CAAkB;AAC7BC,cAAM,EAAE,KAAKC,YADgB;AAE7BC,WAAG,EAAE,KAAKY,KAAL,CAAWjB,MAAX,GAAoB,CAApB,GAAwB,KAAKI,YAFL;AAG7BE,YAAI,EAAE,KAAKW,KAAL,CAAWlB,KAAX,GAAmB,CAAnB,GAAuB,KAAKK,YAHL;AAI7BG,YAAI,EAAE,OAJuB;AAK7BC,cAAM,EAAE,OALqB;AAM7BC,kBAAU,EAAE;AANiB,OAAlB,CAAb;AAQA,WAAKQ,KAAL,CAAWiB,GAAX,CAAejC,MAAf;AACA,WAAKgB,KAAL,CAAWP,UAAX,CAAsBT,MAAtB;AACD;;AAbI,GAnFM;AAkGbkC,SAAO,EAAE;AACPC,UAAM,GAAG;AACP,WAAKnD,MAAL,CAAY,KAAKE,MAAjB,EAAyB,KAAKE,UAA9B;AACD,KAHM;;AAIPgD,YAAQ,GAAG;AACT,UAAI,KAAKhD,UAAL,IAAmB,QAAvB,EAAiC;AAC/B,aAAKE,UAAL,CAAgB,KAAKJ,MAArB,EAA6B,KAAKuC,IAAlC;AACF,OAFA,MAEO,IAAI,KAAKrC,UAAL,IAAmB,MAAvB,EAA+B;AACpC,aAAKG,QAAL,CAAc,KAAKL,MAAnB,EAA2B,KAAKuC,IAAhC,EAAsC,KAAKC,IAA3C;AACF,OAFO,MAEA,IAAI,KAAKtC,UAAL,IAAmB,OAAvB,EAAgC;AACrC,aAAKI,SAAL,CAAe,KAAKN,MAApB,EAA4B,KAAKuC,IAAjC,EAAuC,KAAKI,IAAL,CAAU,CAAV,CAAvC;AACF,OAFO,MAEA,IAAI,KAAKzC,UAAL,IAAmB,QAAvB,EAAiC;AACtC,YAAIwB,IAAI,KAAKC,OAAL,GAAe,KAAKG,KAAL,CAAWgB,UAAX,GAAwB,CAAxB,EAA2B3B,IAAlD;AACA,YAAIc,IAAI,KAAKC,OAAL,GAAe,KAAKG,MAAL,CAAYS,UAAZ,GAAyB,CAAzB,EAA4B5B,GAAnD;AACA,YAAIO,IAAI,KAAKG,OAAL,GAAe,KAAKE,KAAL,CAAWgB,UAAX,GAAwB,CAAxB,EAA2B5B,GAAlD;AACAiC,eAAO,CAACC,GAAR,CAAY1B,CAAZ,EAAeO,CAAf,EAAkBR,CAAlB;AACA,aAAKlB,eAAL,CACE,KAAKP,MADP,EAEE,KAAKuC,IAFP,EAGE,KAAKI,IAAL,CAAU,CAAV,CAHF,EAIEjB,CAJF,EAKED,CALF,EAME,KAAKR,YANP,EAOEgB,CAPF;AASF;;AACA,WAAKnC,MAAL;AACD,KA3BM;;AA4BPuD,oBAAgB,GAAG;AACjB,WAAKvB,KAAL,CAAWe,MAAX,CAAkB,KAAKf,KAAL,CAAWgB,UAAX,GAAwB,CAAxB,CAAlB;AACA,UAAItB,KAAI,GAAI,IAAI5B,MAAM,CAACmB,MAAX,CAAkB;AAC5BC,cAAM,EAAE,CADoB;AAE5BE,WAAG,EAAE,KAAKgB,OAFkB;AAG5Bf,YAAI,EAAE,KAAKQ,OAHiB;AAI5BP,YAAI,EAAE,OAJsB;AAK5BE,kBAAU,EAAE;AALgB,OAAlB,CAAZ;AAOA,WAAKQ,KAAL,CAAWD,YAAX,CAAwBL,KAAxB;AACD,KAtCM;;AAuCP8B,UAAM,GAAG;AACP,WAAK3B,OAAL;AACA,WAAK0B,gBAAL;AACD,KA1CM;;AA2CPE,SAAK,GAAG;AACN,WAAK5B,OAAL;AACA,WAAK0B,gBAAL;AACD,KA9CM;;AA+CPG,UAAM,GAAG;AACP,WAAK5B,OAAL;AACA,WAAKyB,gBAAL;AACD,KAlDM;;AAmDPI,SAAK,GAAG;AACN,WAAK7B,OAAL;AACA,WAAKyB,gBAAL;AACD,KAtDM;;AAuDPK,UAAM,GAAG;AACP,WAAKxB,OAAL;AACA,WAAKyB,iBAAL;AACD,KA1DM;;AA2DPC,SAAK,GAAG;AACN,WAAK1B,OAAL;AACA,WAAKyB,iBAAL;AACD,KA9DM;;AA+DPA,qBAAiB,GAAG;AAClB,WAAKtB,MAAL,CAAYQ,MAAZ,CAAmB,KAAKR,MAAL,CAAYS,UAAZ,GAAyB,CAAzB,CAAnB;AACA,UAAItB,KAAI,GAAI,IAAI5B,MAAM,CAACmB,MAAX,CAAkB;AAC5BC,cAAM,EAAE,CADoB;AAE5BE,WAAG,EAAE,KAAKgB,OAFkB;AAG5Bf,YAAI,EAAE,KAAKgB,OAHiB;AAI5Bf,YAAI,EAAE;AAJsB,OAAlB,CAAZ;AAMA,WAAKiB,MAAL,CAAYR,YAAZ,CAAyBL,KAAzB;AACD,KAxEM;;AAyEPqC,QAAI,GAAG;AACLV,aAAO,CAACC,GAAR,CAAY,KAAKpD,MAAjB;AACD;;AA3EM;AAlGI,CAAf","names":["fabric","props","status","Function","object","Object","typeObject","String","editSphere","editText","editImage","editThreeDFiles","mounted","canvas","Canvas","setDimensions","width","height","circle","Circle","radius","sphereRadius","top","left","fill","stroke","selectable","sendToBack","point","z","x","globalX","globalZ","bringToFront","canva","canvas2","point2","y","globalY","centerY","circle2","canvaY","data","name","text","undefined","txt","file","watch","remove","getObjects","add","methods","cancel","validate","console","log","changePointCoord","minusX","plusX","minusZ","plusZ","minusY","changePointCoordY","plusY","test"],"sourceRoot":"","sources":["C:\\Users\\apuyo\\OneDrive\\Bureau\\cours\\projetsWeb_DUT_AntoinePuyol\\Vue\\client\\src\\components\\Popup\\PopupEditComponents.vue"],"sourcesContent":["<template>\n  <div class=\"popup\">\n    <div class=\"inner-popup\">\n      <div class=\"sphere\" v-if=\"typeObject == 'sphere'\">\n        <v-text-field\n          name=\"SphereName\"\n          label=\"Nom\"\n          v-model=\"name\"\n        ></v-text-field>\n      </div>\n      <div class=\"text\" v-if=\"typeObject == 'text'\">\n        <v-text-field name=\"TextName\" label=\"Nom\" v-model=\"name\"></v-text-field>\n        <v-textarea\n          name=\"TextContent\"\n          label=\"Contenu\"\n          v-model=\"text\"\n        ></v-textarea>\n      </div>\n      <div class=\"image\" v-if=\"typeObject == 'image'\">\n        <v-text-field\n          name=\"ImageName\"\n          label=\"Nom\"\n          v-model=\"name\"\n        ></v-text-field>\n        <v-file-input\n          accept=\"image/*\"\n          label=\"Fichier\"\n          v-model=\"file\"\n        ></v-file-input>\n      </div>\n      <div class=\"3dfile\" v-if=\"typeObject == 'file3d'\">\n        <v-text-field\n          v-model=\"name\"\n          name=\"file3dName\"\n          label=\"Nom\"\n        ></v-text-field>\n        <v-file-input label=\"Fichier\" v-model=\"file\"></v-file-input>\n        <v-slider\n          v-model=\"sphereRadius\"\n          thumb-label=\"always\"\n          min=\"25\"\n          max=\"75\"\n        ></v-slider>\n        <button @click=\"minusX\">left</button>\n        <button @click=\"plusX\">right</button>\n        <button @click=\"minusY\">up</button>\n        <button @click=\"plusY\">down</button>\n      </div>\n      <div v-show=\"typeObject == 'file3d'\">\n        <button @click=\"minusX\">left</button>\n        <button @click=\"plusX\">right</button>\n        <button @click=\"minusZ\">up</button>\n        <button @click=\"plusZ\">down</button>\n        <canvas id=\"myCanva\"></canvas>\n        <button @click=\"minusY\">up</button>\n        <button @click=\"plusY\">down</button>\n        <canvas id=\"canvasY\"></canvas>\n      </div>\n      <div class=\"MyButton\">\n        <button @click=\"validate\">Valider</button>\n        <button @click=\"cancel\">Annuler</button>\n        <button @click=\"test\">test</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.popup {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 99;\n  background-color: rgba(0, 0, 0, 0.2);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.inner-popup {\n  width: 20%;\n  background: #fff;\n  padding: 32px;\n}\n.MyButton {\n  display: flex;\n  justify-content: space-between;\n}\n</style>\n\n<script>\nimport { fabric } from \"fabric\";\n\nexport default {\n  props: {\n    status: Function,\n    object: Object,\n    typeObject: String,\n    editSphere: Function,\n    editText: Function,\n    editImage: Function,\n    editThreeDFiles: Function,\n  },\n  mounted() {\n    if (this.typeObject == \"file3d\") {\n      var canvas = new fabric.Canvas(\"myCanva\");\n      canvas.setDimensions({\n        width: 279,\n        height: 150,\n      });\n\n      var circle = new fabric.Circle({\n        radius: this.sphereRadius,\n        top: canvas.height / 2 - this.sphereRadius,\n        left: canvas.width / 2 - this.sphereRadius,\n        fill: \"white\",\n        stroke: \"black\",\n        selectable: false,\n      });\n\n      canvas.sendToBack(circle);\n      var point = new fabric.Circle({\n        radius: 5,\n        top: this.object.z + circle.top,\n        left: this.object.x + circle.left,\n        fill: \"black\",\n        selectable: false,\n      });\n      this.globalX = point.left;\n      this.globalZ = point.top;\n      canvas.bringToFront(point);\n\n      this.canva = canvas;\n\n      var canvas2 = new fabric.Canvas(\"canvasY\");\n      canvas.setDimensions({\n        width: 279,\n        height: 150,\n      });\n\n      var point2 = new fabric.Circle({\n        radius: 5,\n        top: this.object.y + circle.top,\n        left: canvas.width / 2 - 5,\n        fill: \"black\",\n      });\n      this.globalY = point2.top;\n      this.centerY = point2.left;\n      canvas2.bringToFront(point2);\n      var circle2 = new fabric.Circle({\n        radius: this.sphereRadius,\n        top: canvas.height / 2 - this.sphereRadius,\n        left: canvas.width / 2 - this.sphereRadius,\n        fill: \"white\",\n        stroke: \"black\",\n        selectable: false,\n      });\n      canvas2.sendToBack(circle2);\n\n      this.canvaY = canvas2;\n    }\n  },\n  data() {\n    return {\n      name: this.object.name,\n      text: undefined || this.object.txt,\n      file: undefined || [this.object.file],\n      sphereRadius: undefined || this.object.radius,\n      globalX: 0,\n      globalZ: 0,\n      globalY: 0,\n      centerY: 0,\n      canva: new fabric.Canvas(),\n      canvaY: new fabric.Canvas(),\n    };\n  },\n  watch: {\n    sphereRadius() {\n      this.canva.remove(this.canva.getObjects()[0]);\n      var circle = new fabric.Circle({\n        radius: this.sphereRadius,\n        top: this.canva.height / 2 - this.sphereRadius,\n        left: this.canva.width / 2 - this.sphereRadius,\n        fill: \"white\",\n        stroke: \"black\",\n        selectable: false,\n      });\n      this.canva.add(circle);\n      this.canva.sendToBack(circle);\n    },\n  },\n  methods: {\n    cancel() {\n      this.status(this.object, this.typeObject);\n    },\n    validate() {\n      if (this.typeObject == \"sphere\") {\n        this.editSphere(this.object, this.name);\n      } else if (this.typeObject == \"text\") {\n        this.editText(this.object, this.name, this.text);\n      } else if (this.typeObject == \"image\") {\n        this.editImage(this.object, this.name, this.file[0]);\n      } else if (this.typeObject == \"file3d\") {\n        var x = this.globalX - this.canva.getObjects()[0].left;\n        var y = this.globalY - this.canvaY.getObjects()[0].top;\n        var z = this.globalZ - this.canva.getObjects()[0].top;\n        console.log(x, y, z);\n        this.editThreeDFiles(\n          this.object,\n          this.name,\n          this.file[0],\n          x,\n          z,\n          this.sphereRadius,\n          y\n        );\n      }\n      this.status();\n    },\n    changePointCoord() {\n      this.canva.remove(this.canva.getObjects()[1]);\n      var point = new fabric.Circle({\n        radius: 5,\n        top: this.globalY,\n        left: this.globalX,\n        fill: \"black\",\n        selectable: false,\n      });\n      this.canva.bringToFront(point);\n    },\n    minusX() {\n      this.globalX--;\n      this.changePointCoord();\n    },\n    plusX() {\n      this.globalX++;\n      this.changePointCoord();\n    },\n    minusZ() {\n      this.globalZ--;\n      this.changePointCoord();\n    },\n    plusZ() {\n      this.globalZ++;\n      this.changePointCoord();\n    },\n    minusY() {\n      this.globalY--;\n      this.changePointCoordY();\n    },\n    plusY() {\n      this.globalY++;\n      this.changePointCoordY();\n    },\n    changePointCoordY() {\n      this.canvaY.remove(this.canvaY.getObjects()[1]);\n      var point = new fabric.Circle({\n        radius: 5,\n        top: this.globalY,\n        left: this.centerY,\n        fill: \"black\",\n      });\n      this.canvaY.bringToFront(point);\n    },\n    test() {\n      console.log(this.object);\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}