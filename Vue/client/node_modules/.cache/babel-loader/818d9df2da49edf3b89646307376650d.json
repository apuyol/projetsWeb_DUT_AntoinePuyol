{"ast":null,"code":"let sceneId = 0;\nexport default {\n  components: {},\n\n  data() {\n    return {\n      popupSceneComponentOpen: false,\n      popupEditOpen: false,\n      popupScenesOpen: false,\n      selectedScene: null,\n      selectedSceneComponent: null,\n      scenes: [{\n        id: sceneId++,\n        name: \"GMP\",\n        sceneComponents: [{\n          id: 0,\n          name: \"Atelier\"\n        }, {\n          id: 1,\n          name: \"1er étage\"\n        }, {\n          id: 2,\n          name: \"2ème étage\"\n        }]\n      }, {\n        id: sceneId++,\n        name: \"Info\",\n        sceneComponents: [{\n          id: 0,\n          name: \"Acceuil\"\n        }, {\n          id: 1,\n          name: \"1er étage\"\n        }, {\n          id: 2,\n          name: \"2ème étage\"\n        }]\n      }]\n    };\n  },\n\n  methods: {\n    openOrClosePopup(group) {\n      this.popupSphereOpen = !this.popupSphereOpen;\n      this.selectedGroup = group;\n    },\n\n    openOrCloseEditPopup(group, sphere) {\n      this.popupEditOpen = !this.popupEditOpen;\n      this.selectedGroup = group;\n      this.selectedSphere = sphere;\n    },\n\n    openOrCloseGroupsPopup() {\n      this.popupGroupsOpen = !this.popupGroupsOpen;\n    },\n\n    addSphere(group, n) {\n      this.groups[group.id].spheres.push({\n        id: this.groups[group.id].spheres.length,\n        name: n\n      });\n    },\n\n    deleteSphere(group, sphere) {\n      this.groups[group.id].spheres = this.groups[group.id].spheres.filter(s => s !== sphere);\n    },\n\n    editSphere(group, sphere, name) {\n      this.groups[group.id].spheres[sphere.id].name = name;\n    },\n\n    addGroup(name) {\n      this.groups.push({\n        id: sceneId++,\n        name: name,\n        spheres: []\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAuEA,IAAIA,OAAM,GAAI,CAAd;AAEA,eAAe;AACbC,YAAU,EAAE,EADC;;AAEbC,MAAI,GAAG;AACL,WAAO;AACLC,6BAAuB,EAAE,KADpB;AAELC,mBAAa,EAAE,KAFV;AAGLC,qBAAe,EAAE,KAHZ;AAILC,mBAAa,EAAE,IAJV;AAKLC,4BAAsB,EAAE,IALnB;AAMLC,YAAM,EAAE,CACN;AACEC,UAAE,EAAET,OAAO,EADb;AAEEU,YAAI,EAAE,KAFR;AAGEC,uBAAe,EAAE,CACf;AAAEF,YAAE,EAAE,CAAN;AAASC,cAAI,EAAE;AAAf,SADe,EAEf;AAAED,YAAE,EAAE,CAAN;AAASC,cAAI,EAAE;AAAf,SAFe,EAGf;AAAED,YAAE,EAAE,CAAN;AAASC,cAAI,EAAE;AAAf,SAHe;AAHnB,OADM,EAUN;AACED,UAAE,EAAET,OAAO,EADb;AAEEU,YAAI,EAAE,MAFR;AAGEC,uBAAe,EAAE,CACf;AAAEF,YAAE,EAAE,CAAN;AAASC,cAAI,EAAE;AAAf,SADe,EAEf;AAAED,YAAE,EAAE,CAAN;AAASC,cAAI,EAAE;AAAf,SAFe,EAGf;AAAED,YAAE,EAAE,CAAN;AAASC,cAAI,EAAE;AAAf,SAHe;AAHnB,OAVM;AANH,KAAP;AA2BD,GA9BY;;AA+BbE,SAAO,EAAE;AACPC,oBAAgB,CAACC,KAAD,EAAQ;AACtB,WAAKC,eAAL,GAAuB,CAAC,KAAKA,eAA7B;AACA,WAAKC,aAAL,GAAqBF,KAArB;AACD,KAJM;;AAKPG,wBAAoB,CAACH,KAAD,EAAQI,MAAR,EAAgB;AAClC,WAAKd,aAAL,GAAqB,CAAC,KAAKA,aAA3B;AACA,WAAKY,aAAL,GAAqBF,KAArB;AACA,WAAKK,cAAL,GAAsBD,MAAtB;AACD,KATM;;AAUPE,0BAAsB,GAAG;AACvB,WAAKC,eAAL,GAAuB,CAAC,KAAKA,eAA7B;AACD,KAZM;;AAaPC,aAAS,CAACR,KAAD,EAAQS,CAAR,EAAW;AAClB,WAAKC,MAAL,CAAYV,KAAK,CAACL,EAAlB,EAAsBgB,OAAtB,CAA8BC,IAA9B,CAAmC;AACjCjB,UAAE,EAAE,KAAKe,MAAL,CAAYV,KAAK,CAACL,EAAlB,EAAsBgB,OAAtB,CAA8BE,MADD;AAEjCjB,YAAI,EAAEa;AAF2B,OAAnC;AAID,KAlBM;;AAmBPK,gBAAY,CAACd,KAAD,EAAQI,MAAR,EAAgB;AAC1B,WAAKM,MAAL,CAAYV,KAAK,CAACL,EAAlB,EAAsBgB,OAAtB,GAAgC,KAAKD,MAAL,CAAYV,KAAK,CAACL,EAAlB,EAAsBgB,OAAtB,CAA8BI,MAA9B,CAC7BC,CAAD,IAAOA,MAAMZ,MADiB,CAAhC;AAGD,KAvBM;;AAwBPa,cAAU,CAACjB,KAAD,EAAQI,MAAR,EAAgBR,IAAhB,EAAsB;AAC9B,WAAKc,MAAL,CAAYV,KAAK,CAACL,EAAlB,EAAsBgB,OAAtB,CAA8BP,MAAM,CAACT,EAArC,EAAyCC,IAAzC,GAAgDA,IAAhD;AACD,KA1BM;;AA2BPsB,YAAQ,CAACtB,IAAD,EAAO;AACb,WAAKc,MAAL,CAAYE,IAAZ,CAAiB;AAAEjB,UAAE,EAAET,OAAO,EAAb;AAAiBU,YAAI,EAAEA,IAAvB;AAA6Be,eAAO,EAAE;AAAtC,OAAjB;AACD;;AA7BM;AA/BI,CAAf","names":["sceneId","components","data","popupSceneComponentOpen","popupEditOpen","popupScenesOpen","selectedScene","selectedSceneComponent","scenes","id","name","sceneComponents","methods","openOrClosePopup","group","popupSphereOpen","selectedGroup","openOrCloseEditPopup","sphere","selectedSphere","openOrCloseGroupsPopup","popupGroupsOpen","addSphere","n","groups","spheres","push","length","deleteSphere","filter","s","editSphere","addGroup"],"sourceRoot":"","sources":["D:\\Stage\\App\\xr-place-application\\client\\src\\components\\MyScenes.vue"],"sourcesContent":["<template>\n   <v-expansion-panels>\n    <ul style=\"width: 95%\">\n      <li v-for=\"scene in scenes\" :key=\"scene.id\" class=\"scene\">\n        <v-expansion-panel>\n          <v-expansion-panel-title>{{ scene.name }}</v-expansion-panel-title>\n          <v-expansion-panel-text>\n            <ul>\n              <li\n                v-for=\"sceneComponent in scene.sceneComponents\"\n                :key=\"sceneComponent.id\"\n                class=\"scene\"\n              >\n                <v-btn\n                  icon=\"mdi-cog\"\n                  color=\"#607D8B\"\n                  size=\"25\"\n                  variant=\"outlined\"\n                  @click=\"openOrCloseEditPopup(group, sphere)\"\n                ></v-btn>\n                <p>{{ sceneComponent.name }}</p>\n                <v-btn\n                  icon=\"mdi-close\"\n                  color=\"#EF5350\"\n                  size=\"25\"\n                  variant=\"outlined\"\n                  @click=\"deleteSphere(group, sphere)\"\n                ></v-btn>\n              </li>\n            </ul>\n            <div class=\"scene\" style=\"width: 100%\">\n              <v-btn\n                icon=\"mdi-plus\"\n                color=\"#81C784\"\n                class=\"add\"\n                size=\"25\"\n                variant=\"outlined\"\n                @click=\"openOrClosePopup(group)\"\n              ></v-btn>\n            </div>\n          </v-expansion-panel-text>\n        </v-expansion-panel>\n      </li>\n    </ul>\n    <div class=\"scene\" style=\"width: 100%\">\n      <v-btn\n        icon=\"mdi-plus\"\n        color=\"#81C784\"\n        class=\"add\"\n        size=\"25\"\n        variant=\"outlined\"\n        @click=\"openOrCloseGroupsPopup\"\n      ></v-btn>\n    </div>\n  </v-expansion-panels>\n</template>\n\n<style scoped>\n.scene {\n  display: flex;\n  justify-content: space-between;\n  margin: 5%;\n}\n\n.add {\n  display: flex;\n  margin-left: auto;\n}\n</style>\n\n<script>\nlet sceneId = 0;\n\nexport default {\n  components: {},\n  data() {\n    return {\n      popupSceneComponentOpen: false,\n      popupEditOpen: false,\n      popupScenesOpen: false,\n      selectedScene: null,\n      selectedSceneComponent: null,\n      scenes: [\n        {\n          id: sceneId++,\n          name: \"GMP\",\n          sceneComponents: [\n            { id: 0, name: \"Atelier\" },\n            { id: 1, name: \"1er étage\" },\n            { id: 2, name: \"2ème étage\" },\n          ],\n        },\n        {\n          id: sceneId++,\n          name: \"Info\",\n          sceneComponents: [\n            { id: 0, name: \"Acceuil\" },\n            { id: 1, name: \"1er étage\" },\n            { id: 2, name: \"2ème étage\" },\n          ],\n        },\n      ],\n    };\n  },\n  methods: {\n    openOrClosePopup(group) {\n      this.popupSphereOpen = !this.popupSphereOpen;\n      this.selectedGroup = group;\n    },\n    openOrCloseEditPopup(group, sphere) {\n      this.popupEditOpen = !this.popupEditOpen;\n      this.selectedGroup = group;\n      this.selectedSphere = sphere;\n    },\n    openOrCloseGroupsPopup() {\n      this.popupGroupsOpen = !this.popupGroupsOpen;\n    },\n    addSphere(group, n) {\n      this.groups[group.id].spheres.push({\n        id: this.groups[group.id].spheres.length,\n        name: n,\n      });\n    },\n    deleteSphere(group, sphere) {\n      this.groups[group.id].spheres = this.groups[group.id].spheres.filter(\n        (s) => s !== sphere\n      );\n    },\n    editSphere(group, sphere, name) {\n      this.groups[group.id].spheres[sphere.id].name = name;\n    },\n    addGroup(name) {\n      this.groups.push({ id: sceneId++, name: name, spheres: [] });\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}