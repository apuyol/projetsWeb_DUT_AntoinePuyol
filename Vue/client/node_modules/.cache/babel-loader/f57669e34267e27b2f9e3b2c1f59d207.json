{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n// Utilities\nimport { computed, inject, provide, ref } from 'vue'; // Types\n// Depth\n\nexport var DepthKey = Symbol[\"for\"]('vuetify:depth');\nexport function useDepth(hasPrepend) {\n  var parent = inject(DepthKey, ref(-1));\n  var depth = computed(function () {\n    return parent.value + 1 + (hasPrepend != null && hasPrepend.value ? 1 : 0);\n  });\n  provide(DepthKey, depth);\n  return depth;\n} // List\n\nexport var ListKey = Symbol[\"for\"]('vuetify:list');\nexport function createList() {\n  var parent = inject(ListKey, {\n    hasPrepend: ref(false),\n    updateHasPrepend: function updateHasPrepend() {\n      return null;\n    }\n  });\n  var data = {\n    hasPrepend: ref(false),\n    updateHasPrepend: function updateHasPrepend(value) {\n      if (value) data.hasPrepend.value = value;\n    }\n  };\n  provide(ListKey, data);\n  return parent;\n}\nexport function useList() {\n  return inject(ListKey, null);\n}","map":{"version":3,"mappings":";;;AAAA;AACA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,OAA3B,EAAoCC,GAApC,QAA+C,KAA/C,C,CAEA;AAGA;;AACA,OAAO,IAAMC,QAAmC,GAAGC,MAAM,OAANA,CAAW,eAAXA,CAA5C;AAEP,OAAO,SAASC,QAAT,CAAmBC,UAAnB,EAA8C;AACnD,MAAMC,MAAM,GAAGP,MAAM,CAACG,QAAD,EAAWD,GAAG,CAAC,CAAC,CAAF,CAAd,CAArB;AAEA,MAAMM,KAAK,GAAGT,QAAQ,CAAC;AAAA,WAAMQ,MAAM,CAACE,KAAPF,GAAe,CAAfA,IAAoBD,UAAU,QAAVA,cAAU,CAAEG,KAAZH,GAAoB,CAApBA,GAAwB,CAA5CC,CAAN;AAAA,GAAD,CAAtB;AAEAN,SAAO,CAACE,QAAD,EAAWK,KAAX,CAAPP;AAEA,SAAOO,KAAP;EAGF;;AACA,OAAO,IAAME,OAGX,GAAGN,MAAM,OAANA,CAAW,cAAXA,CAHE;AAKP,OAAO,SAASO,UAAT,GAAuB;AAC5B,MAAMJ,MAAM,GAAGP,MAAM,CAACU,OAAD,EAAU;AAAEJ,cAAU,EAAEJ,GAAG,CAAC,KAAD,CAAjB;AAA0BU,oBAAgB,EAAE;AAAA,aAAM,IAAN;AAAA;AAA5C,GAAV,CAArB;AAEA,MAAMC,IAAI,GAAG;AACXP,cAAU,EAAEJ,GAAG,CAAC,KAAD,CADJ;AAEXU,oBAAgB,EAAGH,+BAAD,EAAoB;AACpC,UAAIA,KAAJ,EAAWI,IAAI,CAACP,UAALO,CAAgBJ,KAAhBI,GAAwBJ,KAAxBI;AACZ;AAJU,GAAb;AAOAZ,SAAO,CAACS,OAAD,EAAUG,IAAV,CAAPZ;AAEA,SAAOM,MAAP;AACD;AAED,OAAO,SAASO,OAAT,GAAoB;AACzB,SAAOd,MAAM,CAACU,OAAD,EAAU,IAAV,CAAb;AACD","names":["computed","inject","provide","ref","DepthKey","Symbol","useDepth","hasPrepend","parent","depth","value","ListKey","createList","updateHasPrepend","data","useList"],"sources":["../../../src/components/VList/list.ts"],"sourcesContent":["// Utilities\nimport { computed, inject, provide, ref } from 'vue'\n\n// Types\nimport type { InjectionKey, Ref } from 'vue'\n\n// Depth\nexport const DepthKey: InjectionKey<Ref<number>> = Symbol.for('vuetify:depth')\n\nexport function useDepth (hasPrepend?: Ref<boolean>) {\n  const parent = inject(DepthKey, ref(-1))\n\n  const depth = computed(() => parent.value + 1 + (hasPrepend?.value ? 1 : 0))\n\n  provide(DepthKey, depth)\n\n  return depth\n}\n\n// List\nexport const ListKey: InjectionKey<{\n  hasPrepend: Ref<boolean>\n  updateHasPrepend: (value: boolean) => void\n}> = Symbol.for('vuetify:list')\n\nexport function createList () {\n  const parent = inject(ListKey, { hasPrepend: ref(false), updateHasPrepend: () => null })\n\n  const data = {\n    hasPrepend: ref(false),\n    updateHasPrepend: (value: boolean) => {\n      if (value) data.hasPrepend.value = value\n    },\n  }\n\n  provide(ListKey, data)\n\n  return parent\n}\n\nexport function useList () {\n  return inject(ListKey, null)\n}\n"]},"metadata":{},"sourceType":"module"}