{"ast":null,"code":"import _defineProperty from \"D:/Stage/App/xr-place-application/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"D:/Stage/App/xr-place-application/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.reverse.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport { mergeProps as _mergeProps, Fragment as _Fragment, withDirectives as _withDirectives, vShow as _vShow, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VField.css\"; // Components\n\nimport { VExpandXTransition } from \"../transitions/index.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\";\nimport { VFieldLabel } from \"./VFieldLabel.mjs\"; // Composables\n\nimport { LoaderSlot, makeLoaderProps, useLoader } from \"../../composables/loader.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useBackgroundColor, useTextColor } from \"../../composables/color.mjs\";\nimport { makeFocusProps, useFocus } from \"../../composables/focus.mjs\"; // Utilities\n\nimport { computed, ref, toRef, watch } from 'vue';\nimport { convertToUnit, genericComponent, getUid, nullifyTransforms, pick, propsFactory, standardEasing, useRender } from \"../../util/index.mjs\"; // Types\n\nvar allowedVariants = ['underlined', 'outlined', 'filled', 'contained', 'plain'];\nexport var makeVFieldProps = propsFactory(_objectSpread(_objectSpread({\n  appendInnerIcon: String,\n  bgColor: String,\n  clearable: Boolean,\n  clearIcon: {\n    type: String,\n    \"default\": '$clear'\n  },\n  active: Boolean,\n  color: String,\n  dirty: Boolean,\n  disabled: Boolean,\n  error: Boolean,\n  label: String,\n  persistentClear: Boolean,\n  prependInnerIcon: String,\n  reverse: Boolean,\n  singleLine: Boolean,\n  variant: {\n    type: String,\n    \"default\": 'filled',\n    validator: function validator(v) {\n      return allowedVariants.includes(v);\n    }\n  }\n}, makeThemeProps()), makeLoaderProps()), 'v-field');\nexport var VField = genericComponent()({\n  name: 'VField',\n  inheritAttrs: false,\n  props: _objectSpread(_objectSpread({\n    id: String\n  }, makeFocusProps()), makeVFieldProps()),\n  emits: {\n    'click:clear': function clickClear(e) {\n      return true;\n    },\n    'click:prepend-inner': function clickPrependInner(e) {\n      return true;\n    },\n    'click:append-inner': function clickAppendInner(e) {\n      return true;\n    },\n    'click:control': function clickControl(e) {\n      return true;\n    },\n    'update:focused': function updateFocused(focused) {\n      return true;\n    },\n    'update:modelValue': function updateModelValue(val) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var attrs = _ref.attrs,\n        emit = _ref.emit,\n        slots = _ref.slots;\n\n    var _provideTheme = provideTheme(props),\n        themeClasses = _provideTheme.themeClasses;\n\n    var _useLoader = useLoader(props),\n        loaderClasses = _useLoader.loaderClasses;\n\n    var _useFocus = useFocus(props),\n        focusClasses = _useFocus.focusClasses,\n        isFocused = _useFocus.isFocused,\n        focus = _useFocus.focus,\n        blur = _useFocus.blur;\n\n    var isActive = computed(function () {\n      return props.dirty || props.active;\n    });\n    var hasLabel = computed(function () {\n      return !props.singleLine && !!(props.label || slots.label);\n    });\n    var uid = getUid();\n    var id = computed(function () {\n      return props.id || \"input-\".concat(uid);\n    });\n    var labelRef = ref();\n    var floatingLabelRef = ref();\n    var controlRef = ref();\n\n    var _useBackgroundColor = useBackgroundColor(toRef(props, 'bgColor')),\n        backgroundColorClasses = _useBackgroundColor.backgroundColorClasses,\n        backgroundColorStyles = _useBackgroundColor.backgroundColorStyles;\n\n    var _useTextColor = useTextColor(computed(function () {\n      return isActive.value && isFocused.value && !props.error && !props.disabled ? props.color : undefined;\n    })),\n        textColorClasses = _useTextColor.textColorClasses,\n        textColorStyles = _useTextColor.textColorStyles;\n\n    watch(isActive, function (val) {\n      if (hasLabel.value) {\n        var el = labelRef.value.$el;\n        var targetEl = floatingLabelRef.value.$el;\n        var rect = nullifyTransforms(el);\n        var targetRect = targetEl.getBoundingClientRect();\n        var x = targetRect.x - rect.x;\n        var y = targetRect.y - rect.y - (rect.height / 2 - targetRect.height / 2);\n        var targetWidth = targetRect.width / 0.75;\n        var width = Math.abs(targetWidth - rect.width) > 1 ? {\n          maxWidth: convertToUnit(targetWidth)\n        } : undefined;\n        var duration = parseFloat(getComputedStyle(el).transitionDuration) * 1000;\n        var scale = parseFloat(getComputedStyle(targetEl).getPropertyValue('--v-field-label-scale'));\n        el.style.visibility = 'visible';\n        targetEl.style.visibility = 'hidden';\n        el.animate([{\n          transform: 'translate(0)'\n        }, _objectSpread({\n          transform: \"translate(\".concat(x, \"px, \").concat(y, \"px) scale(\").concat(scale, \")\")\n        }, width)], {\n          duration: duration,\n          easing: standardEasing,\n          direction: val ? 'normal' : 'reverse'\n        }).finished.then(function () {\n          el.style.removeProperty('visibility');\n          targetEl.style.removeProperty('visibility');\n        });\n      }\n    }, {\n      flush: 'post'\n    });\n    var slotProps = computed(function () {\n      return {\n        isActive: isActive,\n        isFocused: isFocused,\n        controlRef: controlRef,\n        blur: blur,\n        focus: focus\n      };\n    });\n\n    function onClick(e) {\n      if (e.target !== document.activeElement) {\n        e.preventDefault();\n      }\n\n      emit('click:control', e);\n    }\n\n    useRender(function () {\n      var _slots$prependInner, _slots$default, _slots$appendInner;\n\n      var isOutlined = props.variant === 'outlined';\n      var hasPrepend = slots.prependInner || props.prependInnerIcon;\n      var hasClear = !!(props.clearable || slots.clear);\n      var hasAppend = !!(slots.appendInner || props.appendInnerIcon || hasClear);\n      var label = slots.label ? slots.label({\n        label: props.label,\n        props: {\n          \"for\": id.value\n        }\n      }) : props.label;\n      return _createVNode(\"div\", _mergeProps({\n        \"class\": ['v-field', _defineProperty({\n          'v-field--active': isActive.value,\n          'v-field--appended': hasAppend,\n          'v-field--disabled': props.disabled,\n          'v-field--dirty': props.dirty,\n          'v-field--error': props.error,\n          'v-field--has-background': !!props.bgColor,\n          'v-field--persistent-clear': props.persistentClear,\n          'v-field--prepended': hasPrepend,\n          'v-field--reverse': props.reverse,\n          'v-field--single-line': props.singleLine\n        }, \"v-field--variant-\".concat(props.variant), true), themeClasses.value, backgroundColorClasses.value, focusClasses.value, loaderClasses.value],\n        \"style\": [backgroundColorStyles.value, textColorStyles.value],\n        \"onClick\": onClick\n      }, attrs), [_createVNode(\"div\", {\n        \"class\": \"v-field__overlay\"\n      }, null), _createVNode(LoaderSlot, {\n        \"name\": \"v-field\",\n        \"active\": props.loading,\n        \"color\": props.error ? 'error' : props.color\n      }, {\n        \"default\": slots.loader\n      }), hasPrepend && _createVNode(\"div\", {\n        \"class\": \"v-field__prepend-inner\"\n      }, [props.prependInnerIcon && _createVNode(VIcon, {\n        \"onClick\": function onClick(e) {\n          return emit('click:prepend-inner', e);\n        },\n        \"icon\": props.prependInnerIcon\n      }, null), slots == null ? void 0 : (_slots$prependInner = slots.prependInner) == null ? void 0 : _slots$prependInner.call(slots, slotProps.value)]), _createVNode(\"div\", {\n        \"class\": \"v-field__field\"\n      }, [['contained', 'filled'].includes(props.variant) && hasLabel.value && _createVNode(VFieldLabel, {\n        \"ref\": floatingLabelRef,\n        \"class\": [textColorClasses.value],\n        \"floating\": true\n      }, {\n        \"default\": function _default() {\n          return [label];\n        }\n      }), _createVNode(VFieldLabel, {\n        \"ref\": labelRef,\n        \"for\": id.value\n      }, {\n        \"default\": function _default() {\n          return [label];\n        }\n      }), (_slots$default = slots[\"default\"]) == null ? void 0 : _slots$default.call(slots, _objectSpread(_objectSpread({}, slotProps.value), {}, {\n        props: {\n          id: id.value,\n          \"class\": 'v-field__input'\n        },\n        focus: focus,\n        blur: blur\n      }))]), hasClear && _createVNode(VExpandXTransition, null, {\n        \"default\": function _default() {\n          return [_withDirectives(_createVNode(\"div\", {\n            \"class\": \"v-field__clearable\"\n          }, [slots.clear ? slots.clear() : _createVNode(VIcon, {\n            \"onClick\": function onClick(e) {\n              return emit('click:clear', e);\n            },\n            \"icon\": props.clearIcon\n          }, null)]), [[_vShow, props.dirty]])];\n        }\n      }), hasAppend && _createVNode(\"div\", {\n        \"class\": \"v-field__append-inner\"\n      }, [slots == null ? void 0 : (_slots$appendInner = slots.appendInner) == null ? void 0 : _slots$appendInner.call(slots, slotProps.value), props.appendInnerIcon && _createVNode(VIcon, {\n        \"onClick\": function onClick(e) {\n          return emit('click:append-inner', e);\n        },\n        \"icon\": props.appendInnerIcon\n      }, null)]), _createVNode(\"div\", {\n        \"class\": ['v-field__outline', textColorClasses.value]\n      }, [isOutlined && _createVNode(_Fragment, null, [_createVNode(\"div\", {\n        \"class\": \"v-field__outline__start\"\n      }, null), hasLabel.value && _createVNode(\"div\", {\n        \"class\": \"v-field__outline__notch\"\n      }, [_createVNode(VFieldLabel, {\n        \"ref\": floatingLabelRef,\n        \"floating\": true\n      }, {\n        \"default\": function _default() {\n          return [label];\n        }\n      })]), _createVNode(\"div\", {\n        \"class\": \"v-field__outline__end\"\n      }, null)]), ['plain', 'underlined'].includes(props.variant) && hasLabel.value && _createVNode(VFieldLabel, {\n        \"ref\": floatingLabelRef,\n        \"floating\": true\n      }, {\n        \"default\": function _default() {\n          return [label];\n        }\n      })])]);\n    });\n    return {\n      controlRef: controlRef\n    };\n  }\n}); // TODO: this is kinda slow, might be better to implicitly inherit props instead\n\nexport function filterFieldProps(attrs) {\n  return pick(attrs, Object.keys(VField.props));\n}","map":{"version":3,"mappings":"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","names":["VExpandXTransition","VIcon","VFieldLabel","LoaderSlot","makeLoaderProps","useLoader","makeThemeProps","provideTheme","useBackgroundColor","useTextColor","makeFocusProps","useFocus","computed","ref","toRef","watch","convertToUnit","genericComponent","getUid","nullifyTransforms","pick","propsFactory","standardEasing","useRender","allowedVariants","makeVFieldProps","appendInnerIcon","String","bgColor","clearable","Boolean","clearIcon","type","default","active","color","dirty","disabled","error","label","persistentClear","prependInnerIcon","reverse","singleLine","variant","validator","v","includes","VField","name","inheritAttrs","props","id","emits","e","focused","val","setup","_ref","attrs","emit","slots","themeClasses","loaderClasses","focusClasses","isFocused","focus","blur","isActive","hasLabel","uid","labelRef","floatingLabelRef","controlRef","backgroundColorClasses","backgroundColorStyles","value","undefined","textColorClasses","textColorStyles","el","$el","targetEl","rect","targetRect","getBoundingClientRect","x","y","height","targetWidth","width","Math","abs","maxWidth","duration","parseFloat","getComputedStyle","transitionDuration","scale","getPropertyValue","style","visibility","animate","transform","easing","direction","finished","then","removeProperty","flush","slotProps","onClick","target","document","activeElement","preventDefault","isOutlined","hasPrepend","prependInner","hasClear","clear","hasAppend","appendInner","for","loading","loader","_slots$prependInner","_slots$default","class","_slots$appendInner","filterFieldProps","Object","keys"],"sources":["../../../src/components/VField/VField.tsx"],"sourcesContent":["// Styles\nimport './VField.sass'\n\n// Components\nimport { VExpandXTransition } from '@/components/transitions'\nimport { VIcon } from '@/components/VIcon'\nimport { VFieldLabel } from './VFieldLabel'\n\n// Composables\nimport { LoaderSlot, makeLoaderProps, useLoader } from '@/composables/loader'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useBackgroundColor, useTextColor } from '@/composables/color'\nimport { makeFocusProps, useFocus } from '@/composables/focus'\n\n// Utilities\nimport { computed, ref, toRef, watch } from 'vue'\nimport {\n  convertToUnit,\n  genericComponent,\n  getUid,\n  nullifyTransforms,\n  pick,\n  propsFactory,\n  standardEasing,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { VInputSlot } from '@/components/VInput/VInput'\nimport type { LoaderSlotProps } from '@/composables/loader'\nimport type { PropType, Ref } from 'vue'\nimport type { MakeSlots } from '@/util'\n\nconst allowedVariants = ['underlined', 'outlined', 'filled', 'contained', 'plain'] as const\ntype Variant = typeof allowedVariants[number]\n\nexport interface DefaultInputSlot {\n  isActive: Ref<boolean>\n  isFocused: Ref<boolean>\n  controlRef: Ref<HTMLElement | undefined>\n  focus: () => void\n  blur: () => void\n}\n\nexport interface VFieldSlot extends DefaultInputSlot {\n  props: Record<string, unknown>\n}\n\nexport const makeVFieldProps = propsFactory({\n  appendInnerIcon: String,\n  bgColor: String,\n  clearable: Boolean,\n  clearIcon: {\n    type: String,\n    default: '$clear',\n  },\n  active: Boolean,\n  color: String,\n  dirty: Boolean,\n  disabled: Boolean,\n  error: Boolean,\n  label: String,\n  persistentClear: Boolean,\n  prependInnerIcon: String,\n  reverse: Boolean,\n  singleLine: Boolean,\n  variant: {\n    type: String as PropType<Variant>,\n    default: 'filled',\n    validator: (v: any) => allowedVariants.includes(v),\n  },\n\n  ...makeThemeProps(),\n  ...makeLoaderProps(),\n}, 'v-field')\n\nexport type VFieldSlots = MakeSlots<{\n  clear: []\n  prependInner: [DefaultInputSlot & VInputSlot]\n  appendInner: [DefaultInputSlot & VInputSlot]\n  label: [DefaultInputSlot & VInputSlot]\n  loader: [LoaderSlotProps]\n  default: [VFieldSlot]\n}>\n\nexport const VField = genericComponent<new <T>() => {\n  $props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (val: T) => any\n  }\n  $slots: VFieldSlots\n}>()({\n  name: 'VField',\n\n  inheritAttrs: false,\n\n  props: {\n    id: String,\n\n    ...makeFocusProps(),\n    ...makeVFieldProps(),\n  },\n\n  emits: {\n    'click:clear': (e: MouseEvent) => true,\n    'click:prepend-inner': (e: MouseEvent) => true,\n    'click:append-inner': (e: MouseEvent) => true,\n    'click:control': (e: MouseEvent) => true,\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (val: any) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { loaderClasses } = useLoader(props)\n    const { focusClasses, isFocused, focus, blur } = useFocus(props)\n\n    const isActive = computed(() => props.dirty || props.active)\n    const hasLabel = computed(() => !props.singleLine && !!(props.label || slots.label))\n\n    const uid = getUid()\n    const id = computed(() => props.id || `input-${uid}`)\n\n    const labelRef = ref<VFieldLabel>()\n    const floatingLabelRef = ref<VFieldLabel>()\n    const controlRef = ref<HTMLElement>()\n\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n    const { textColorClasses, textColorStyles } = useTextColor(computed(() => {\n      return (\n        isActive.value &&\n        isFocused.value &&\n        !props.error &&\n        !props.disabled\n      ) ? props.color : undefined\n    }))\n\n    watch(isActive, val => {\n      if (hasLabel.value) {\n        const el: HTMLElement = labelRef.value!.$el\n        const targetEl: HTMLElement = floatingLabelRef.value!.$el\n        const rect = nullifyTransforms(el)\n        const targetRect = targetEl.getBoundingClientRect()\n\n        const x = targetRect.x - rect.x\n        const y = targetRect.y - rect.y - (rect.height / 2 - targetRect.height / 2)\n\n        const targetWidth = targetRect.width / 0.75\n        const width = Math.abs(targetWidth - rect.width) > 1\n          ? { maxWidth: convertToUnit(targetWidth) }\n          : undefined\n\n        const duration = parseFloat(getComputedStyle(el).transitionDuration) * 1000\n        const scale = parseFloat(getComputedStyle(targetEl).getPropertyValue('--v-field-label-scale'))\n\n        el.style.visibility = 'visible'\n        targetEl.style.visibility = 'hidden'\n\n        el.animate([\n          { transform: 'translate(0)' },\n          { transform: `translate(${x}px, ${y}px) scale(${scale})`, ...width },\n        ], {\n          duration,\n          easing: standardEasing,\n          direction: val ? 'normal' : 'reverse',\n        }).finished.then(() => {\n          el.style.removeProperty('visibility')\n          targetEl.style.removeProperty('visibility')\n        })\n      }\n    }, { flush: 'post' })\n\n    const slotProps = computed<DefaultInputSlot>(() => ({\n      isActive,\n      isFocused,\n      controlRef,\n      blur,\n      focus,\n    }))\n\n    function onClick (e: MouseEvent) {\n      if (e.target !== document.activeElement) {\n        e.preventDefault()\n      }\n\n      emit('click:control', e)\n    }\n\n    useRender(() => {\n      const isOutlined = props.variant === 'outlined'\n      const hasPrepend = (slots.prependInner || props.prependInnerIcon)\n      const hasClear = !!(props.clearable || slots.clear)\n      const hasAppend = !!(slots.appendInner || props.appendInnerIcon || hasClear)\n      const label = slots.label\n        ? slots.label({\n          label: props.label,\n          props: { for: id.value },\n        })\n        : props.label\n\n      return (\n        <div\n          class={[\n            'v-field',\n            {\n              'v-field--active': isActive.value,\n              'v-field--appended': hasAppend,\n              'v-field--disabled': props.disabled,\n              'v-field--dirty': props.dirty,\n              'v-field--error': props.error,\n              'v-field--has-background': !!props.bgColor,\n              'v-field--persistent-clear': props.persistentClear,\n              'v-field--prepended': hasPrepend,\n              'v-field--reverse': props.reverse,\n              'v-field--single-line': props.singleLine,\n              [`v-field--variant-${props.variant}`]: true,\n            },\n            themeClasses.value,\n            backgroundColorClasses.value,\n            focusClasses.value,\n            loaderClasses.value,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            textColorStyles.value,\n          ]}\n          onClick={ onClick }\n          { ...attrs }\n        >\n          <div class=\"v-field__overlay\" />\n\n          <LoaderSlot\n            name=\"v-field\"\n            active={ props.loading }\n            color={ props.error ? 'error' : props.color }\n            v-slots={{ default: slots.loader }}\n          />\n\n          { hasPrepend && (\n            <div\n              class=\"v-field__prepend-inner\"\n            >\n              { props.prependInnerIcon && (\n                <VIcon\n                  onClick={ (e: MouseEvent) => emit('click:prepend-inner', e) }\n                  icon={ props.prependInnerIcon }\n                />\n              ) }\n\n              { slots?.prependInner?.(slotProps.value) }\n            </div>\n          ) }\n\n          <div class=\"v-field__field\">\n            { ['contained', 'filled'].includes(props.variant) && hasLabel.value && (\n              <VFieldLabel\n                ref={ floatingLabelRef }\n                class={[textColorClasses.value]}\n                floating\n              >\n                { label }\n              </VFieldLabel>\n            ) }\n\n            <VFieldLabel ref={ labelRef } for={ id.value }>\n              { label }\n            </VFieldLabel>\n\n            { slots.default?.({\n              ...slotProps.value,\n              props: {\n                id: id.value,\n                class: 'v-field__input',\n              },\n              focus,\n              blur,\n            } as VFieldSlot) }\n          </div>\n\n          { hasClear && (\n            <VExpandXTransition>\n              <div\n                class=\"v-field__clearable\"\n                v-show={ props.dirty }\n              >\n                { slots.clear\n                  ? slots.clear()\n                  : (\n                    <VIcon\n                      onClick={ (e: MouseEvent) => emit('click:clear', e) }\n                      icon={ props.clearIcon }\n                    />\n                  )\n                }\n              </div>\n            </VExpandXTransition>\n          ) }\n\n          { hasAppend && (\n            <div\n              class=\"v-field__append-inner\"\n            >\n              { slots?.appendInner?.(slotProps.value) }\n\n              { props.appendInnerIcon && (\n                <VIcon\n                  onClick={ (e: MouseEvent) => emit('click:append-inner', e) }\n                  icon={ props.appendInnerIcon }\n                />\n              ) }\n            </div>\n          ) }\n\n          <div\n            class={[\n              'v-field__outline',\n              textColorClasses.value,\n            ]}\n          >\n            { isOutlined && (\n              <>\n                <div class=\"v-field__outline__start\" />\n\n                { hasLabel.value && (\n                  <div class=\"v-field__outline__notch\">\n                    <VFieldLabel ref={ floatingLabelRef } floating>\n                      { label }\n                    </VFieldLabel>\n                  </div>\n                ) }\n\n                <div class=\"v-field__outline__end\" />\n              </>\n            ) }\n\n            { ['plain', 'underlined'].includes(props.variant) && hasLabel.value && (\n              <VFieldLabel ref={ floatingLabelRef } floating>\n                { label }\n              </VFieldLabel>\n            ) }\n          </div>\n        </div>\n      )\n    })\n\n    return {\n      controlRef,\n    }\n  },\n})\n\nexport type VField = InstanceType<typeof VField>\n\n// TODO: this is kinda slow, might be better to implicitly inherit props instead\nexport function filterFieldProps (attrs: Record<string, unknown>) {\n  return pick(attrs, Object.keys(VField.props))\n}\n"]},"metadata":{},"sourceType":"module"}