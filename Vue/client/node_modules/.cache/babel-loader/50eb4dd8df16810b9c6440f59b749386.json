{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.index-of.js\";\n// Utilities\nimport { computed, inject, provide, ref, watch } from 'vue';\nimport { getUid } from \"../util/index.mjs\"; // Types\n\nexport var VuetifyOverlayKey = Symbol[\"for\"]('vuetify:overlay');\nvar ROOT_ZINDEX = 2000;\nexport function useOverlay(isActive) {\n  var _inject = inject(VuetifyOverlayKey, {\n    zIndex: ref(ROOT_ZINDEX),\n    overlays: ref([])\n  }),\n      zIndex = _inject.zIndex,\n      overlays = _inject.overlays;\n\n  var id = getUid();\n  watch(isActive, function (value) {\n    if (value) {\n      overlays.value.push(id);\n    } else {\n      overlays.value = overlays.value.filter(function (x) {\n        return x !== id;\n      });\n    }\n  }, {\n    immediate: true\n  });\n  provide(VuetifyOverlayKey, {\n    zIndex: zIndex,\n    overlays: overlays\n  });\n  var overlayZIndex = computed(function () {\n    return zIndex.value + overlays.value.indexOf(id) + 1;\n  });\n  return {\n    overlayZIndex: overlayZIndex\n  };\n}","map":{"version":3,"mappings":";;;;;AAAA;AACA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,OAA3B,EAAoCC,GAApC,EAAyCC,KAAzC,QAAsD,KAAtD;SACSC,c,qBAET;;AAQA,OAAO,IAAMC,iBAA+C,GAAGC,MAAM,OAANA,CAAW,iBAAXA,CAAxD;AAEP,IAAMC,WAAW,GAAG,IAApB;AAEA,OAAO,SAASC,UAAT,CAAqBC,QAArB,EAAyD;AAC9D,gBAA6BT,MAAM,CAACK,iBAAD,EAAoB;AAAEK,UAAM,EAAER,GAAG,CAACK,WAAD,CAAb;AAA4BI,YAAQ,EAAET,GAAG,CAAC,EAAD;AAAzC,GAApB,CAAnC;AAAA,MAAQQ,MAAR,WAAQA,MAAR;AAAA,MAAgBC,QAAhB,WAAgBA,QAAhB;;AAEA,MAAMC,EAAE,GAAGR,MAAM,EAAjB;AAEAD,OAAK,CAACM,QAAD,EAAWI,eAAK,EAAI;AACvB,QAAIA,KAAJ,EAAW;AACTF,cAAQ,CAACE,KAATF,CAAeG,IAAfH,CAAoBC,EAApBD;AADF,WAEO;AACLA,cAAQ,CAACE,KAATF,GAAiBA,QAAQ,CAACE,KAATF,CAAeI,MAAfJ,CAAsBK,WAAC;AAAA,eAAIA,CAAC,KAAKJ,EAAV;AAAA,OAAvBD,CAAjBA;AACD;AALE,KAMF;AACDM,aAAS,EAAE;AADV,GANE,CAALd;AAUAF,SAAO,CAACI,iBAAD,EAAoB;AAAEK,UAAF,EAAEA,MAAF;AAAUC;AAAV,GAApB,CAAPV;AAEA,MAAMiB,aAAa,GAAGnB,QAAQ,CAAC;AAAA,WAAMW,MAAM,CAACG,KAAPH,GAAeC,QAAQ,CAACE,KAATF,CAAeQ,OAAfR,CAAuBC,EAAvBD,CAAfD,GAA4C,CAAlD;AAAA,GAAD,CAA9B;AAEA,SAAO;AAAEQ;AAAF,GAAP;AACD","names":["computed","inject","provide","ref","watch","getUid","VuetifyOverlayKey","Symbol","ROOT_ZINDEX","useOverlay","isActive","zIndex","overlays","id","value","push","filter","x","immediate","overlayZIndex","indexOf"],"sources":["../../src/composables/overlay.ts"],"sourcesContent":["// Utilities\nimport { computed, inject, provide, ref, watch } from 'vue'\nimport { getUid } from '@/util'\n\n// Types\nimport type { InjectionKey, Ref } from 'vue'\n\ntype OverlayProvide = {\n  overlays: Ref<number[]>\n  zIndex: Ref<number>\n}\n\nexport const VuetifyOverlayKey: InjectionKey<OverlayProvide> = Symbol.for('vuetify:overlay')\n\nconst ROOT_ZINDEX = 2000\n\nexport function useOverlay (isActive: Ref<boolean | undefined>) {\n  const { zIndex, overlays } = inject(VuetifyOverlayKey, { zIndex: ref(ROOT_ZINDEX), overlays: ref([]) })\n\n  const id = getUid()\n\n  watch(isActive, value => {\n    if (value) {\n      overlays.value.push(id)\n    } else {\n      overlays.value = overlays.value.filter(x => x !== id)\n    }\n  }, {\n    immediate: true,\n  })\n\n  provide(VuetifyOverlayKey, { zIndex, overlays })\n\n  const overlayZIndex = computed(() => zIndex.value + overlays.value.indexOf(id) + 1)\n\n  return { overlayZIndex }\n}\n"]},"metadata":{},"sourceType":"module"}