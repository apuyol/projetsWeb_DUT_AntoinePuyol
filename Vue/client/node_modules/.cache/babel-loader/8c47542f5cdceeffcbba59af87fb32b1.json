{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-7bb42a09\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"popup\"\n};\nconst _hoisted_2 = {\n  class: \"inner-popup\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"sphere\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [$props.typeObject == 'sphere' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_v_text_field, {\n    name: \"SphereName\",\n    label: \"Nom\",\n    modelValue: $data.name,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.name = $event),\n    style: {}\n  }, null, 8\n  /* PROPS */\n  , [\"modelValue\"])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.validate && $options.validate(...args))\n  }, \"Validate\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.cancel && $options.cancel(...args))\n  }, \"Annuler\"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.test && $options.test(...args))\n  }, \"test\")])]);\n}","map":{"version":3,"mappings":";;;;;AACOA,OAAK,EAAC;;;AACJA,OAAK,EAAC;;;;AACJA,OAAK,EAAC;;;;;uBAFfC,oBAcM,KAdN,cAcM,CAbJC,oBAYM,KAZN,cAYM,CAXsBC,qBAAU,0BAApCF,oBAOM,KAPN,cAOM,CANJG,aAKgBC,uBALhB,EAKgB;AAJdC,QAAI,EAAC,YAIS;AAHdC,SAAK,EAAC,KAGQ;gBAFLC,UAEK;+DAFLA,aAAIC,OAEC;AADdC,SAAa,EAAb;AACc,GALhB;;AAAA,mBAMI,CAPN,sCAWI,EAHJR,oBAA2C,QAA3C,EAA2C;AAAlCS,WAAK,yCAAEC,+CAAF;AAA6B,GAA3C,EAA0B,UAA1B,CAGI,EAFJV,oBAAwC,QAAxC,EAAwC;AAA/BS,WAAK,yCAAEC,2CAAF;AAA0B,GAAxC,EAAwB,SAAxB,CAEI,EADJV,oBAAmC,QAAnC,EAAmC;AAA1BS,WAAK,yCAAEC,uCAAF;AAAqB,GAAnC,EAAsB,MAAtB,CACI,CAZN,CAaI,CAdN","names":["class","_createElementBlock","_createElementVNode","$props","_createVNode","_component_v_text_field","name","label","$data","$event","style","onClick","$options"],"sourceRoot":"","sources":["D:\\Stage\\App\\xr-place-application\\client\\src\\components\\Popup\\PopupEditComponents.vue"],"sourcesContent":["<template>\n  <div class=\"popup\">\n    <div class=\"inner-popup\">\n      <div class=\"sphere\" v-if=\"typeObject == 'sphere'\">\n        <v-text-field\n          name=\"SphereName\"\n          label=\"Nom\"\n          v-model=\"name\"\n          style=\"heigh\"\n        ></v-text-field>\n      </div>\n      <button @click=\"validate\">Validate</button>\n      <button @click=\"cancel\">Annuler</button>\n      <button @click=\"test\">test</button>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.popup {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 99;\n  width: 40%;\n  background-color: rgba(0, 0, 0, 0.2);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.inner-popup {\n  background: #fff;\n  padding: 32px;\n}\n</style>\n\n<script>\nexport default {\n  props: {\n    status: Function,\n    object: Object,\n    typeObject: String,\n    editSphere: Function,\n    editText: Function,\n    editImage: Function,\n  },\n  data() {\n    return {\n      name: this.object.name,\n      text: undefined || this.object.txt,\n      file: undefined || this.object.file,\n    };\n  },\n  methods: {\n    cancel() {\n      this.status();\n    },\n\n    validate() {\n      if (this.typeObject == \"sphere\") {\n        this.editSphere(this.object, this.name);\n      } else if (this.typeObject == \"text\") {\n        this.editText(this.object, this.name, this.text);\n      } else if (this.typeObject == \"image\") {\n        this.editImage(this.object, this.name, this.file[0]);\n      }\n      this.status();\n    },\n    test() {\n      console.log(this.file[0]);\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}