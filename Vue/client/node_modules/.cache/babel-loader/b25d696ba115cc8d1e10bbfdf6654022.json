{"ast":null,"code":"import _objectSpread from \"D:/Stage/App/xr-place-application/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport { computed, inject, provide, ref } from 'vue';\nimport { rtl } from \"../locale/index.mjs\"; // Types\n\nexport var RtlSymbol = Symbol[\"for\"]('vuetify:rtl');\nexport function createRtl(localeScope, options) {\n  var _options$rtl, _options$defaultRtl;\n\n  return createRtlScope({\n    rtl: _objectSpread(_objectSpread({}, rtl), (_options$rtl = options == null ? void 0 : options.rtl) != null ? _options$rtl : {}),\n    isRtl: ref((_options$defaultRtl = options == null ? void 0 : options.defaultRtl) != null ? _options$defaultRtl : false),\n    rtlClasses: ref('')\n  }, localeScope);\n}\nexport function createRtlScope(currentScope, localeScope, options) {\n  var isRtl = computed(function () {\n    if (typeof (options == null ? void 0 : options.rtl) === 'boolean') return options.rtl;\n\n    if (localeScope.current.value && currentScope.rtl.hasOwnProperty(localeScope.current.value)) {\n      return currentScope.rtl[localeScope.current.value];\n    }\n\n    return currentScope.isRtl.value;\n  });\n  return {\n    isRtl: isRtl,\n    rtl: currentScope.rtl,\n    rtlClasses: computed(function () {\n      return \"v-locale--is-\".concat(isRtl.value ? 'rtl' : 'ltr');\n    })\n  };\n}\nexport function provideRtl(props, localeScope) {\n  var currentScope = inject(RtlSymbol);\n  if (!currentScope) throw new Error('[Vuetify] Could not find injected rtl instance');\n  var newScope = createRtlScope(currentScope, localeScope, props);\n  provide(RtlSymbol, newScope);\n  return newScope;\n}\nexport function useRtl() {\n  var currentScope = inject(RtlSymbol);\n  if (!currentScope) throw new Error('[Vuetify] Could not find injected rtl instance');\n  return currentScope;\n}","map":{"version":3,"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,OAA3B,EAAoCC,GAApC,QAA+C,KAA/C;SACSC,W,uBAET;;AAmBA,OAAO,IAAMC,SAAoC,GAAGC,MAAM,OAANA,CAAW,aAAXA,CAA7C;AAEP,OAAO,SAASC,SAAT,CAAoBC,WAApB,EAAiDC,OAAjD,EAAuE;AAAA;;AAC5E,SAAOC,cAAc,CAAC;AACpBN,OAAG,kCACEA,GADF,GAED,gBAAIK,OAAJ,QAAIA,GAAJ,MAAIA,UAAO,CAAEL,GAAb,2BAAoB,EAFnB,CADiB;AAKpBO,SAAK,EAAER,GAAG,wBAACM,OAAD,QAACA,GAAD,MAACA,UAAO,CAAEG,UAAV,kCAAwB,KAAxB,CALU;AAMpBC,cAAU,EAAEV,GAAG,CAAC,EAAD;AANK,GAAD,EAOlBK,WAPkB,CAArB;AAQD;AAED,OAAO,SAASE,cAAT,CAAyBI,YAAzB,EAAoDN,WAApD,EAAiFC,OAAjF,EAAkH;AACvH,MAAME,KAAK,GAAGX,QAAQ,CAAC,YAAM;AAC3B,QAAI,QAAOS,OAAP,QAAOA,GAAP,MAAOA,UAAO,CAAEL,GAAhB,MAAwB,SAA5B,EAAuC,OAAOK,OAAO,CAACL,GAAf;;AACvC,QAAII,WAAW,CAACO,OAAZP,CAAoBQ,KAApBR,IAA6BM,YAAY,CAACV,GAAbU,CAAiBG,cAAjBH,CAAgCN,WAAW,CAACO,OAAZP,CAAoBQ,KAApDF,CAAjC,EAA6F;AAC3F,aAAOA,YAAY,CAACV,GAAbU,CAAiBN,WAAW,CAACO,OAAZP,CAAoBQ,KAArCF,CAAP;AACD;;AAED,WAAOA,YAAY,CAACH,KAAbG,CAAmBE,KAA1B;AANoB,IAAtB;AASA,SAAO;AACLL,SADK,EACLA,KADK;AAELP,OAAG,EAAEU,YAAY,CAACV,GAFb;AAGLS,cAAU,EAAEb,QAAQ,CAAC;AAAA,oCAAsBW,KAAK,CAACK,KAANL,GAAc,KAAdA,GAAsB,KAA5C;AAAA,KAAD;AAHf,GAAP;AAKD;AAED,OAAO,SAASO,UAAT,CAAqBC,KAArB,EAAsCX,WAAtC,EAAmE;AACxE,MAAMM,YAAY,GAAGb,MAAM,CAACI,SAAD,CAA3B;AAEA,MAAI,CAACS,YAAL,EAAmB,MAAM,IAAIM,KAAJ,CAAU,gDAAV,CAAN;AAEnB,MAAMC,QAAQ,GAAGX,cAAc,CAACI,YAAD,EAAeN,WAAf,EAA4BW,KAA5B,CAA/B;AAEAjB,SAAO,CAACG,SAAD,EAAYgB,QAAZ,CAAPnB;AAEA,SAAOmB,QAAP;AACD;AAED,OAAO,SAASC,MAAT,GAAmB;AACxB,MAAMR,YAAY,GAAGb,MAAM,CAACI,SAAD,CAA3B;AAEA,MAAI,CAACS,YAAL,EAAmB,MAAM,IAAIM,KAAJ,CAAU,gDAAV,CAAN;AAEnB,SAAON,YAAP;AACD","names":["computed","inject","provide","ref","rtl","RtlSymbol","Symbol","createRtl","localeScope","options","createRtlScope","isRtl","defaultRtl","rtlClasses","currentScope","current","value","hasOwnProperty","provideRtl","props","Error","newScope","useRtl"],"sources":["../../src/composables/rtl.ts"],"sourcesContent":["import { computed, inject, provide, ref } from 'vue'\nimport { rtl } from '@/locale'\n\n// Types\nimport type { InjectionKey, Ref } from 'vue'\nimport type { LocaleInstance } from './locale'\n\nexport interface RtlOptions {\n  defaultRtl?: boolean\n  rtl?: Record<string, boolean>\n}\n\nexport interface RtlProps {\n  rtl?: boolean\n}\n\nexport interface RtlInstance {\n  isRtl: Ref<boolean>\n  rtl: Record<string, boolean>\n  rtlClasses: Ref<string>\n}\n\nexport const RtlSymbol: InjectionKey<RtlInstance> = Symbol.for('vuetify:rtl')\n\nexport function createRtl (localeScope: LocaleInstance, options?: RtlOptions) {\n  return createRtlScope({\n    rtl: {\n      ...rtl,\n      ...(options?.rtl ?? {}),\n    },\n    isRtl: ref(options?.defaultRtl ?? false),\n    rtlClasses: ref(''),\n  }, localeScope)\n}\n\nexport function createRtlScope (currentScope: RtlInstance, localeScope: LocaleInstance, options?: RtlProps): RtlInstance {\n  const isRtl = computed(() => {\n    if (typeof options?.rtl === 'boolean') return options.rtl\n    if (localeScope.current.value && currentScope.rtl.hasOwnProperty(localeScope.current.value)) {\n      return currentScope.rtl[localeScope.current.value]\n    }\n\n    return currentScope.isRtl.value\n  })\n\n  return {\n    isRtl,\n    rtl: currentScope.rtl,\n    rtlClasses: computed(() => `v-locale--is-${isRtl.value ? 'rtl' : 'ltr'}`),\n  }\n}\n\nexport function provideRtl (props: RtlProps, localeScope: LocaleInstance) {\n  const currentScope = inject(RtlSymbol)\n\n  if (!currentScope) throw new Error('[Vuetify] Could not find injected rtl instance')\n\n  const newScope = createRtlScope(currentScope, localeScope, props)\n\n  provide(RtlSymbol, newScope)\n\n  return newScope\n}\n\nexport function useRtl () {\n  const currentScope = inject(RtlSymbol)\n\n  if (!currentScope) throw new Error('[Vuetify] Could not find injected rtl instance')\n\n  return currentScope\n}\n"]},"metadata":{},"sourceType":"module"}