{"ast":null,"code":"import { fabric } from \"fabric\";\nexport default {\n  props: {\n    status: Function,\n    addSphere: Function,\n    addText: Function,\n    addImage: Function,\n    addThreeDFiles: Function\n  },\n\n  data() {\n    return {\n      categorie: \"sphere\",\n      items: [\"sphere\", \"texte\", \"image\", \"fichier 3d\"],\n      name: \"\",\n      text: \"\",\n      file: [],\n      sphereRadius: 50,\n      canva: new fabric.Canvas()\n    };\n  },\n\n  watch: {\n    categorie() {\n      if (this.categorie == \"fichier 3d\") {\n        this.createCanva();\n        console.log(document.getElementsByClassName(\"3dfile\"));\n      } else {\n        this.canva = null;\n      }\n    },\n\n    sphereRadius() {\n      this.canva.remove(this.canva.getObjects()[0]);\n      var circle = new fabric.Circle({\n        radius: this.sphereRadius,\n        top: this.canva.height / 2 - this.sphereRadius,\n        left: this.canva.width / 2 - this.sphereRadius,\n        fill: \"white\",\n        stroke: \"black\",\n        selectable: false\n      });\n      this.canva.sendToBack(circle);\n    }\n\n  },\n  methods: {\n    cancel() {\n      this.status();\n    },\n\n    validate() {\n      if (this.categorie == \"sphere\") {\n        this.addSphere(this.name);\n      } else if (this.categorie == \"texte\") {\n        this.addText(this.name, this.text);\n      } else if (this.categorie == \"image\") {\n        this.addImage(this.name, this.file[0]);\n      }\n\n      this.status();\n    },\n\n    createCanva() {\n      var div = document.getElementsByClassName(\"3dfile\")[0];\n      var canvas = new fabric.Canvas(\"d\");\n      canvas.setDimensions({\n        width: document.getElementById(\"inner-popup\").clientWidth - 50,\n        height: 150\n      });\n      var circle = new fabric.Circle({\n        radius: 50,\n        top: canvas.height / 2 - 50,\n        left: canvas.width / 2 - 50,\n        fill: \"white\",\n        stroke: \"black\",\n        selectable: false\n      });\n      canvas.add(circle);\n      var point = new fabric.Circle({\n        radius: 5,\n        top: canvas.height / 2 - 5,\n        left: canvas.width / 2 - 5,\n        fill: \"black\"\n      });\n      canvas.add(point);\n      this.canva = canvas;\n      div.appendChild(canvas);\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["fabric","props","status","Function","addSphere","addText","addImage","addThreeDFiles","data","categorie","items","name","text","file","sphereRadius","canva","Canvas","watch","createCanva","console","log","document","getElementsByClassName","remove","getObjects","circle","Circle","radius","top","height","left","width","fill","stroke","selectable","sendToBack","methods","cancel","validate","div","canvas","setDimensions","getElementById","clientWidth","add","point","appendChild"],"sourceRoot":"","sources":["D:\\Stage\\App\\xr-place-application\\client\\src\\components\\Popup\\PopupMyComponents.vue"],"sourcesContent":["<template>\n  <div class=\"popup\">\n    <div class=\"inner-popup\" id=\"inner-popup\">\n      <h3>Veuillez choisir une categorie</h3>\n      <v-combobox v-model=\"categorie\" :items=\"items\"></v-combobox>\n      <div class=\"sphere\" v-if=\"categorie == 'sphere'\">\n        <v-text-field\n          v-model=\"name\"\n          name=\"SphereName\"\n          label=\"Nom\"\n        ></v-text-field>\n      </div>\n      <div class=\"text\" v-if=\"categorie == 'texte'\">\n        <v-text-field v-model=\"name\" name=\"TextName\" label=\"Nom\"></v-text-field>\n        <v-textarea v-model=\"text\" name=\"text\" label=\"Texte\"></v-textarea>\n      </div>\n      <div class=\"image\" v-if=\"categorie == 'image'\">\n        <v-text-field\n          v-model=\"name\"\n          name=\"ImageName\"\n          label=\"Nom\"\n        ></v-text-field>\n        <v-file-input\n          accept=\"image/*\"\n          label=\"Fichier\"\n          v-model=\"file\"\n        ></v-file-input>\n      </div>\n      <div class=\"3dfile\" v-if=\"categorie == 'fichier 3d'\">\n        <v-text-field\n          v-model=\"name\"\n          name=\"file3dName\"\n          label=\"Nom\"\n        ></v-text-field>\n        <v-file-input label=\"Fichier\" v-model=\"file\"></v-file-input>\n        <v-slider\n          v-model=\"sphereRadius\"\n          thumb-label=\"always\"\n          min=\"25\"\n          max=\"75\"\n        ></v-slider>\n      </div>\n      <div class=\"MyButton\">\n        <button @click=\"validate\">Valider</button>\n        <button @click=\"cancel\">Annuler</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.popup {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 99;\n  background-color: rgba(0, 0, 0, 0.2);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.inner-popup {\n  width: 20%;\n  background: #fff;\n  padding: 32px;\n}\n.MyButton {\n  display: flex;\n  justify-content: space-between;\n}\n</style>\n\n<script>\nimport { fabric } from \"fabric\";\n\nexport default {\n  props: {\n    status: Function,\n    addSphere: Function,\n    addText: Function,\n    addImage: Function,\n    addThreeDFiles: Function,\n  },\n  data() {\n    return {\n      categorie: \"sphere\",\n      items: [\"sphere\", \"texte\", \"image\", \"fichier 3d\"],\n      name: \"\",\n      text: \"\",\n      file: [],\n      sphereRadius: 50,\n      canva: new fabric.Canvas(),\n    };\n  },\n  watch: {\n    categorie() {\n      if (this.categorie == \"fichier 3d\") {\n        this.createCanva();\n        console.log(document.getElementsByClassName(\"3dfile\"));\n      } else {\n        this.canva = null;\n      }\n    },\n    sphereRadius() {\n      this.canva.remove(this.canva.getObjects()[0]);\n      var circle = new fabric.Circle({\n        radius: this.sphereRadius,\n        top: this.canva.height / 2 - this.sphereRadius,\n        left: this.canva.width / 2 - this.sphereRadius,\n        fill: \"white\",\n        stroke: \"black\",\n        selectable: false,\n      });\n      this.canva.sendToBack(circle);\n    },\n  },\n  methods: {\n    cancel() {\n      this.status();\n    },\n\n    validate() {\n      if (this.categorie == \"sphere\") {\n        this.addSphere(this.name);\n      } else if (this.categorie == \"texte\") {\n        this.addText(this.name, this.text);\n      } else if (this.categorie == \"image\") {\n        this.addImage(this.name, this.file[0]);\n      }\n      this.status();\n    },\n    createCanva() {\n      var div = document.getElementsByClassName(\"3dfile\")[0];\n\n      var canvas = new fabric.Canvas(\"d\");\n      canvas.setDimensions({\n        width: document.getElementById(\"inner-popup\").clientWidth - 50,\n        height: 150,\n      });\n      var circle = new fabric.Circle({\n        radius: 50,\n        top: canvas.height / 2 - 50,\n        left: canvas.width / 2 - 50,\n        fill: \"white\",\n        stroke: \"black\",\n        selectable: false,\n      });\n      canvas.add(circle);\n\n      var point = new fabric.Circle({\n        radius: 5,\n        top: canvas.height / 2 - 5,\n        left: canvas.width / 2 - 5,\n        fill: \"black\",\n      });\n      canvas.add(point);\n      this.canva = canvas;\n\n      div.appendChild(canvas);\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}