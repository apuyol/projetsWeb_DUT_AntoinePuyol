{"ast":null,"code":"import _toConsumableArray from \"D:/Stage/App/xr-place-application/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectWithoutProperties from \"D:/Stage/App/xr-place-application/client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _slicedToArray from \"D:/Stage/App/xr-place-application/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _typeof from \"D:/Stage/App/xr-place-application/client/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _objectSpread from \"D:/Stage/App/xr-place-application/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"modelValue\"],\n    _excluded2 = [\"class\"];\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport { resolveDirective as _resolveDirective, createVNode as _createVNode, mergeProps as _mergeProps, Fragment as _Fragment } from \"vue\"; // Styles\n\nimport \"./VFileInput.css\"; // Components\n\nimport { filterFieldProps, makeVFieldProps } from \"../VField/VField.mjs\";\nimport { VChip } from \"../VChip/index.mjs\";\nimport { VCounter } from \"../VCounter/index.mjs\";\nimport { VField } from \"../VField/index.mjs\"; // Composables\n\nimport { useForwardRef } from \"../../composables/forwardRef.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\n\nimport { computed, nextTick, ref } from 'vue';\nimport { defineComponent, filterInputAttrs, humanReadableFileSize, useRender, wrapInArray } from \"../../util/index.mjs\"; // Types\n\nimport { filterInputProps, makeVInputProps, VInput } from \"../VInput/VInput.mjs\";\nexport var VFileInput = defineComponent({\n  name: 'VFileInput',\n  inheritAttrs: false,\n  props: _objectSpread(_objectSpread({\n    chips: Boolean,\n    counter: Boolean,\n    counterSizeString: {\n      type: String,\n      \"default\": '$vuetify.fileInput.counterSize'\n    },\n    counterString: {\n      type: String,\n      \"default\": '$vuetify.fileInput.counter'\n    },\n    multiple: Boolean,\n    hint: String,\n    persistentHint: Boolean,\n    placeholder: String,\n    showSize: {\n      type: [Boolean, Number],\n      \"default\": false,\n      validator: function validator(v) {\n        return typeof v === 'boolean' || [1000, 1024].includes(v);\n      }\n    }\n  }, makeVInputProps()), {}, {\n    prependIcon: {\n      type: String,\n      \"default\": '$file'\n    },\n    modelValue: {\n      type: Array,\n      \"default\": function _default() {\n        return [];\n      },\n      validator: function validator(val) {\n        return wrapInArray(val).every(function (v) {\n          return v != null && _typeof(v) === 'object';\n        });\n      }\n    }\n  }, makeVFieldProps({\n    clearable: true\n  })),\n  emits: {\n    'click:clear': function clickClear(e) {\n      return true;\n    },\n    'click:control': function clickControl(e) {\n      return true;\n    },\n    'update:modelValue': function updateModelValue(files) {\n      return true;\n    }\n  },\n  setup: function setup(props, _ref) {\n    var attrs = _ref.attrs,\n        emit = _ref.emit,\n        slots = _ref.slots;\n\n    var _useLocale = useLocale(),\n        t = _useLocale.t;\n\n    var model = useProxiedModel(props, 'modelValue');\n    var base = computed(function () {\n      return typeof props.showSize !== 'boolean' ? props.showSize : undefined;\n    });\n    var totalBytes = computed(function () {\n      var _model$value;\n\n      return ((_model$value = model.value) != null ? _model$value : []).reduce(function (bytes, _ref2) {\n        var _ref2$size = _ref2.size,\n            size = _ref2$size === void 0 ? 0 : _ref2$size;\n        return bytes + size;\n      }, 0);\n    });\n    var totalBytesReadable = computed(function () {\n      return humanReadableFileSize(totalBytes.value, base.value);\n    });\n    var fileNames = computed(function () {\n      var _model$value2;\n\n      return ((_model$value2 = model.value) != null ? _model$value2 : []).map(function (file) {\n        var _file$name = file.name,\n            name = _file$name === void 0 ? '' : _file$name,\n            _file$size = file.size,\n            size = _file$size === void 0 ? 0 : _file$size;\n        return !props.showSize ? name : \"\".concat(name, \" (\").concat(humanReadableFileSize(size, base.value), \")\");\n      });\n    });\n    var counterValue = computed(function () {\n      var _model$value$length, _model$value3;\n\n      var fileCount = (_model$value$length = (_model$value3 = model.value) == null ? void 0 : _model$value3.length) != null ? _model$value$length : 0;\n      if (props.showSize) return t(props.counterSizeString, fileCount, totalBytesReadable.value);else return t(props.counterString, fileCount);\n    });\n    var vInputRef = ref();\n    var vFieldRef = ref();\n    var isFocused = ref(false);\n    var inputRef = ref();\n    var messages = computed(function () {\n      return props.messages.length ? props.messages : props.persistentHint ? props.hint : '';\n    });\n\n    function onFocus() {\n      if (inputRef.value !== document.activeElement) {\n        var _inputRef$value;\n\n        (_inputRef$value = inputRef.value) == null ? void 0 : _inputRef$value.focus();\n      }\n\n      if (!isFocused.value) {\n        isFocused.value = true;\n      }\n    }\n\n    function onControlClick(e) {\n      var _inputRef$value2;\n\n      (_inputRef$value2 = inputRef.value) == null ? void 0 : _inputRef$value2.click();\n      emit('click:control', e);\n    }\n\n    function onClear(e) {\n      e.stopPropagation();\n      onFocus();\n      nextTick(function () {\n        model.value = [];\n\n        if (inputRef != null && inputRef.value) {\n          inputRef.value.value = '';\n        }\n\n        emit('click:clear', e);\n      });\n    }\n\n    useRender(function () {\n      var hasCounter = !!(slots.counter || props.counter || counterValue.value);\n\n      var _filterInputAttrs = filterInputAttrs(attrs),\n          _filterInputAttrs2 = _slicedToArray(_filterInputAttrs, 2),\n          rootAttrs = _filterInputAttrs2[0],\n          inputAttrs = _filterInputAttrs2[1];\n\n      var _filterInputProps = filterInputProps(props),\n          _filterInputProps2 = _slicedToArray(_filterInputProps, 1),\n          _filterInputProps2$ = _filterInputProps2[0],\n          _ = _filterInputProps2$.modelValue,\n          inputProps = _objectWithoutProperties(_filterInputProps2$, _excluded);\n\n      var _filterFieldProps = filterFieldProps(props),\n          _filterFieldProps2 = _slicedToArray(_filterFieldProps, 1),\n          fieldProps = _filterFieldProps2[0];\n\n      return _createVNode(VInput, _mergeProps({\n        \"ref\": vInputRef,\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": function onUpdateModelValue($event) {\n          return model.value = $event;\n        },\n        \"class\": \"v-file-input\"\n      }, rootAttrs, inputProps, {\n        \"onClick:prepend\": onControlClick,\n        \"messages\": messages.value\n      }), _objectSpread(_objectSpread({}, slots), {}, {\n        \"default\": function _default(_ref3) {\n          var isDisabled = _ref3.isDisabled,\n              isDirty = _ref3.isDirty,\n              isReadonly = _ref3.isReadonly,\n              isValid = _ref3.isValid;\n          return _createVNode(VField, _mergeProps({\n            \"ref\": vFieldRef,\n            \"prepend-icon\": props.prependIcon,\n            \"onClick:control\": onControlClick,\n            \"onClick:clear\": onClear\n          }, fieldProps, {\n            \"active\": isDirty.value || isFocused.value,\n            \"dirty\": isDirty.value,\n            \"focused\": isFocused.value,\n            \"error\": isValid.value === false\n          }), _objectSpread(_objectSpread({}, slots), {}, {\n            \"default\": function _default(_ref4) {\n              var _ref4$props = _ref4.props,\n                  fieldClass = _ref4$props[\"class\"],\n                  slotProps = _objectWithoutProperties(_ref4$props, _excluded2);\n\n              return _createVNode(_Fragment, null, [_createVNode(\"input\", _mergeProps({\n                \"ref\": inputRef,\n                \"type\": \"file\",\n                \"readonly\": isReadonly.value,\n                \"disabled\": isDisabled.value,\n                \"multiple\": props.multiple,\n                \"name\": props.name,\n                \"onClick\": function onClick(e) {\n                  e.stopPropagation();\n                  onFocus();\n                },\n                \"onChange\": function onChange(e) {\n                  var _target$files;\n\n                  if (!e.target) return;\n                  var target = e.target;\n                  model.value = _toConsumableArray((_target$files = target.files) != null ? _target$files : []);\n                },\n                \"onFocus\": onFocus,\n                \"onBlur\": function onBlur() {\n                  return isFocused.value = false;\n                }\n              }, slotProps, inputAttrs), null), model.value.length > 0 && _createVNode(\"div\", {\n                \"class\": fieldClass\n              }, [slots.selection ? slots.selection({\n                fileNames: fileNames.value,\n                totalBytes: totalBytes.value,\n                totalBytesReadable: totalBytesReadable.value\n              }) : props.chips ? fileNames.value.map(function (text) {\n                return _createVNode(VChip, {\n                  \"key\": text,\n                  \"size\": \"small\",\n                  \"color\": props.color\n                }, {\n                  \"default\": function _default() {\n                    return [text];\n                  }\n                });\n              }) : fileNames.value.join(', ')])]);\n            }\n          }));\n        },\n        details: hasCounter ? function () {\n          return _createVNode(_Fragment, null, [_createVNode(\"span\", null, null), _createVNode(VCounter, {\n            \"value\": counterValue.value\n          }, slots.counter)]);\n        } : undefined\n      }));\n    });\n    return useForwardRef({}, vInputRef, vFieldRef, inputRef);\n  }\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;4IAAA;;AACA,0B,CAEA;;SACSA,kBAAkBC,uB;SAClBC,a;SACAC,gB;SACAC,c,uBAET;;SACSC,qB;SACAC,iB;SACAC,uB,sCAET;;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,GAA7B,QAAwC,KAAxC;SACSC,iBAAiBC,kBAAkBC,uBAAuBC,WAAWC,mB,wBAE9E;;SAESC,kBAAkBC,iBAAiBC,c;AAE5C,OAAO,IAAMC,UAAU,GAAGR,eAAe,CAAC;AACxCS,MAAI,EAAE,YADkC;AAGxCC,cAAY,EAAE,KAH0B;AAKxCC,OAAK;AACHC,SAAK,EAAEC,OADJ;AAEHC,WAAO,EAAED,OAFN;AAGHE,qBAAiB,EAAE;AACjBC,UAAI,EAAEC,MADW;AAEjBC,iBAAS;AAFQ,KAHhB;AAOHC,iBAAa,EAAE;AACbH,UAAI,EAAEC,MADO;AAEbC,iBAAS;AAFI,KAPZ;AAWHE,YAAQ,EAAEP,OAXP;AAYHQ,QAAI,EAAEJ,MAZH;AAaHK,kBAAc,EAAET,OAbb;AAcHU,eAAW,EAAEN,MAdV;AAeHO,YAAQ,EAAE;AACRR,UAAI,EAAE,CAACH,OAAD,EAAUY,MAAV,CADE;AAERP,iBAAS,KAFD;AAGRQ,eAAS,EAAGC,oBAAD,EAAyB;AAClC,eACE,OAAOA,CAAP,KAAa,SAAb,IACA,CAAC,IAAD,EAAO,IAAP,EAAaC,QAAb,CAAsBD,CAAtB,CAFF;AAID;AARO;AAfP,KA0BArB,eAAe,EA1Bf;AA4BHuB,eAAW,EAAE;AACXb,UAAI,EAAEC,MADK;AAEXC,iBAAS;AAFE,KA5BV;AAgCHY,cAAU,EAAE;AACVd,UAAI,EAAEe,KADI;AAEVb,iBAAS;AAAA,eAAO,EAAP;AAAA,OAFC;AAGVQ,eAAS,EAAGM,sBAAD,EAAc;AACvB,eAAO5B,WAAW,CAAC4B,GAAD,CAAX5B,CAAiB6B,KAAjB7B,CAAuBuB,WAAC;AAAA,iBAAIA,CAAC,IAAI,IAALA,IAAa,QAAOA,CAAP,MAAa,QAA9B;AAAA,SAAxBvB,CAAP;AACD;AALS;AAhCT,KAwCAd,eAAe,CAAC;AAAE4C,aAAS,EAAE;AAAb,GAAD,CAxCf,CALmC;AAgDxCC,OAAK,EAAE;AACL,mBAAgBC,qBAAD;AAAA,aAAmB,IAAnB;AAAA,KADV;AAEL,qBAAkBA,uBAAD;AAAA,aAAmB,IAAnB;AAAA,KAFZ;AAGL,yBAAsBC,+BAAD;AAAA,aAAmB,IAAnB;AAAA;AAHhB,GAhDiC;AAsDxCC,OAtDwC,iBAsDjC3B,KAtDiC,EAsDnC4B,IAtDmC,EAsDF;AAAA,QAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,QAAfC,IAAe,QAAfA,IAAe;AAAA,QAATC,KAAS,QAATA,KAAS;;AACpC,qBAAc/C,SAAS,EAAvB;AAAA,QAAQgD,CAAR,cAAQA,CAAR;;AACA,QAAMC,KAAK,GAAGhD,eAAe,CAACe,KAAD,EAAQ,YAAR,CAA7B;AACA,QAAMkC,IAAI,GAAGhD,QAAQ,CAAC;AAAA,aAAM,OAAOc,KAAK,CAACa,QAAb,KAA0B,SAA1B,GAAsCb,KAAK,CAACa,QAA5C,GAAuDsB,SAA7D;AAAA,KAAD,CAArB;AACA,QAAMC,UAAU,GAAGlD,QAAQ,CAAC;AAAA;;AAAA,aAAM,iBAAC+C,KAAK,CAACI,KAAP,2BAAgB,EAAhB,EAAoBC,MAApB,CAA2B,UAACC,KAAD;AAAA,+BAAUC,IAAV;AAAA,YAAUA,IAAV,2BAAiB,CAAjB;AAAA,eAAyBD,KAAK,GAAGC,IAAjC;AAA3B,SAAkE,CAAlE,CAAN;AAAD,MAA3B;AACA,QAAMC,kBAAkB,GAAGvD,QAAQ,CAAC;AAAA,aAAMK,qBAAqB,CAAC6C,UAAU,CAACC,KAAZ,EAAmBH,IAAI,CAACG,KAAxB,CAA3B;AAAA,KAAD,CAAnC;AAEA,QAAMK,SAAS,GAAGxD,QAAQ,CAAC;AAAA;;AAAA,aAAM,kBAAC+C,KAAK,CAACI,KAAP,4BAAgB,EAAhB,EAAoBM,GAApB,CAAwBC,cAAI,EAAI;AAC/D,yBAAgCA,IAAhC,CAAQ9C,IAAR;AAAA,YAAQA,IAAR,2BAAe,EAAf;AAAA,yBAAgC8C,IAAhC,CAAmBJ,IAAnB;AAAA,YAAmBA,IAAnB,2BAA0B,CAA1B;AAEA,eAAO,CAACxC,KAAK,CAACa,QAAP,GACHf,IADG,aAEAA,IAFA,eAESP,qBAAqB,CAACiD,IAAD,EAAON,IAAI,CAACG,KAAZ,CAF9B,MAAP;AAH+B,QAAN;AAAD,MAA1B;AAQA,QAAMQ,YAAY,GAAG3D,QAAQ,CAAC,YAAM;AAAA;;AAClC,UAAM4D,SAAS,2CAAGb,KAAK,CAACI,KAAT,qBAAGU,cAAaC,MAAhB,kCAA0B,CAAzC;AACA,UAAIhD,KAAK,CAACa,QAAV,EAAoB,OAAOmB,CAAC,CAAChC,KAAK,CAACI,iBAAP,EAA0B0C,SAA1B,EAAqCL,kBAAkB,CAACJ,KAAxD,CAAR,CAApB,KACK,OAAOL,CAAC,CAAChC,KAAK,CAACQ,aAAP,EAAsBsC,SAAtB,CAAR;AAHsB,MAA7B;AAKA,QAAMG,SAAS,GAAG7D,GAAG,EAArB;AACA,QAAM8D,SAAS,GAAG9D,GAAG,EAArB;AACA,QAAM+D,SAAS,GAAG/D,GAAG,CAAC,KAAD,CAArB;AACA,QAAMgE,QAAQ,GAAGhE,GAAG,EAApB;AACA,QAAMiE,QAAQ,GAAGnE,QAAQ,CAAC,YAAM;AAC9B,aAAOc,KAAK,CAACqD,QAANrD,CAAegD,MAAfhD,GACHA,KAAK,CAACqD,QADHrD,GAEFA,KAAK,CAACW,cAANX,GAAwBA,KAAK,CAACU,IAA9BV,GAAqC,EAF1C;AADuB,MAAzB;;AAKA,aAASsD,OAAT,GAAoB;AAClB,UAAIF,QAAQ,CAACf,KAATe,KAAmBG,QAAQ,CAACC,aAAhC,EAA+C;AAAA;;AAC7C,mCAAQ,CAACnB,KAAT,qCAAgBoB,KAAhB;AACD;;AAED,UAAI,CAACN,SAAS,CAACd,KAAf,EAAsB;AACpBc,iBAAS,CAACd,KAAVc,GAAkB,IAAlBA;AACD;AACF;;AACD,aAASO,cAAT,CAAyBjC,CAAzB,EAAwC;AAAA;;AACtC,kCAAQ,CAACY,KAAT,sCAAgBsB,KAAhB;AAEA7B,UAAI,CAAC,eAAD,EAAkBL,CAAlB,CAAJK;AACD;;AACD,aAAS8B,OAAT,CAAkBnC,CAAlB,EAAiC;AAC/BA,OAAC,CAACoC,eAAFpC;AAEA6B,aAAO;AAEPnE,cAAQ,CAAC,YAAM;AACb8C,aAAK,CAACI,KAANJ,GAAc,EAAdA;;AAEA,YAAImB,QAAJ,QAAIA,YAAQ,CAAEf,KAAd,EAAqB;AACnBe,kBAAQ,CAACf,KAATe,CAAef,KAAfe,GAAuB,EAAvBA;AACD;;AAEDtB,YAAI,CAAC,aAAD,EAAgBL,CAAhB,CAAJK;AAPM,QAAR3C;AASD;;AAEDK,aAAS,CAAC,YAAM;AACd,UAAMsE,UAAU,GAAG,CAAC,EAAE/B,KAAK,CAAC5B,OAAN4B,IAAiB/B,KAAK,CAACG,OAAvB4B,IAAkCc,YAAY,CAACR,KAAjD,CAApB;;AACA,8BAAgC/C,gBAAgB,CAACuC,KAAD,CAAhD;AAAA;AAAA,UAAOkC,SAAP;AAAA,UAAkBC,UAAlB;;AACA,8BAA2CtE,gBAAgB,CAACM,KAAD,CAA3D;AAAA;AAAA;AAAA,UAAqBiE,CAArB,uBAAS9C,UAAT;AAAA,UAA2B+C,UAA3B;;AACA,8BAAqBxF,gBAAgB,CAACsB,KAAD,CAArC;AAAA;AAAA,UAAOmE,UAAP;;AAEA;AAAA,eAEUlB,SAFV;AAAA,sBAGchB,KAAK,CAACI,KAHpB;AAAA;AAAA,iBAGcJ,KAAK,CAACI,KAANJ,GAHdmC;AAAA;AAAA,iBAIU;AAJV,SAKSL,SALT,EAMSG,UANT;AAAA,2BAOsBR,cAPtB;AAAA,oBAQeL,QAAQ,CAAChB;AARxB,0CAWSN,KAXT;AAYMxB,mBAAS;AAAA,cACP8D,UADO,SACPA,UADO;AAAA,cAEPC,OAFO,SAEPA,OAFO;AAAA,cAGPC,UAHO,SAGPA,UAHO;AAAA,cAIPC,OAJO,SAIPA,OAJO;AAAA;AAAA,mBAOCtB,SAPD;AAAA,4BAQUlD,KAAK,CAACkB,WARhB;AAAA,+BASawC,cATb;AAAA,6BAUWE;AAVX,aAWAO,UAXA;AAAA,sBAYIG,OAAO,CAACjC,KAARiC,IAAiBnB,SAAS,CAACd,KAZ/B;AAAA,qBAaGiC,OAAO,CAACjC,KAbX;AAAA,uBAcKc,SAAS,CAACd,KAdf;AAAA,qBAeGmC,OAAO,CAACnC,KAARmC,KAAkB;AAfrB,8CAkBAzC,KAlBA;AAmBHxB,uBAAS;AAAA,sCACPP,KADO;AAAA,kBACSyE,UADT;AAAA,kBACwBC,SADxB;;AAAA;AAAA,uBAKGtB,QALH;AAAA,wBAME,MANF;AAAA,4BAOQmB,UAAU,CAAClC,KAPnB;AAAA,4BAQQgC,UAAU,CAAChC,KARnB;AAAA,4BASQrC,KAAK,CAACS,QATd;AAAA,wBAUIT,KAAK,CAACF,IAVV;AAAA,2BAWO2B,kBAAC,EAAI;AACbA,mBAAC,CAACoC,eAAFpC;AAEA6B,yBAAO;AAdN;AAAA,4BAgBQ7B,mBAAC,EAAI;AAAA;;AACd,sBAAI,CAACA,CAAC,CAACkD,MAAP,EAAe;AAEf,sBAAMA,MAAM,GAAGlD,CAAC,CAACkD,MAAjB;AACA1C,uBAAK,CAACI,KAANJ,sBAAe,iBAAG0C,MAAM,CAACjD,KAAV,4BAAmB,EAAlCO;AApBC;AAAA,2BAsBOqB,OAtBP;AAAA,0BAuBM;AAAA,yBAAOH,SAAS,CAACd,KAAVc,GAAkB,KAAzB;AAAA;AAvBN,iBAwBEuB,SAxBF,EAyBEV,UAzBF,UA4BH/B,KAAK,CAACI,KAANJ,CAAYe,MAAZf,GAAqB,CAArBA;AAAA,yBACawC;AADb,kBAEI1C,KAAK,CAAC6C,SAAN7C,GAAkBA,KAAK,CAAC6C,SAAN7C,CAAgB;AAClCW,yBAAS,EAAEA,SAAS,CAACL,KADa;AAElCD,0BAAU,EAAEA,UAAU,CAACC,KAFW;AAGlCI,kCAAkB,EAAEA,kBAAkB,CAACJ;AAHL,eAAhBN,CAAlBA,GAKA/B,KAAK,CAACC,KAAND,GAAc0C,SAAS,CAACL,KAAVK,CAAgBC,GAAhBD,CAAoBmC,cAAI;AAAA;AAAA,yBAE9BA,IAF8B;AAAA,0BAG/B,OAH+B;AAAA,2BAI5B7E,KAAK,CAAC8E;AAJsB;AAAA;AAAA,4BAKnCD,IALmC;AAAA;AAAA;AAAA,eAAxBnC,CAAd1C,GAOA0C,SAAS,CAACL,KAAVK,CAAgBqC,IAAhBrC,CAAqB,IAArBA,CAdJ,EA5BG;AAAA;AAnBN;AAZf;AAiFMsC,eAAO,EAAElB,UAAU,GAAG;AAAA;AAAA,qBAKRjB,YAAY,CAACR;AALL,aAMNN,KAAK,CAAC5B,OANA;AAAA,SAAH,GASfgC;AA1FV;AANO,MAAT3C;AAsGA,WAAOT,aAAa,CAAC,EAAD,EAAKkE,SAAL,EAAgBC,SAAhB,EAA2BE,QAA3B,CAApB;AACD;AAxNuC,CAAD,CAAlC","names":["filterFieldProps","makeVFieldProps","VChip","VCounter","VField","useForwardRef","useLocale","useProxiedModel","computed","nextTick","ref","defineComponent","filterInputAttrs","humanReadableFileSize","useRender","wrapInArray","filterInputProps","makeVInputProps","VInput","VFileInput","name","inheritAttrs","props","chips","Boolean","counter","counterSizeString","type","String","default","counterString","multiple","hint","persistentHint","placeholder","showSize","Number","validator","v","includes","prependIcon","modelValue","Array","val","every","clearable","emits","e","files","setup","_ref","attrs","emit","slots","t","model","base","undefined","totalBytes","value","reduce","bytes","size","totalBytesReadable","fileNames","map","file","counterValue","fileCount","_model$value3","length","vInputRef","vFieldRef","isFocused","inputRef","messages","onFocus","document","activeElement","focus","onControlClick","click","onClear","stopPropagation","hasCounter","rootAttrs","inputAttrs","_","inputProps","fieldProps","$event","isDisabled","isDirty","isReadonly","isValid","fieldClass","slotProps","target","selection","text","color","join","details"],"sources":["../../../src/components/VFileInput/VFileInput.tsx"],"sourcesContent":["// Styles\nimport './VFileInput.sass'\n\n// Components\nimport { filterFieldProps, makeVFieldProps } from '@/components/VField/VField'\nimport { VChip } from '@/components/VChip'\nimport { VCounter } from '@/components/VCounter'\nimport { VField } from '@/components/VField'\n\n// Composables\nimport { useForwardRef } from '@/composables/forwardRef'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, nextTick, ref } from 'vue'\nimport { defineComponent, filterInputAttrs, humanReadableFileSize, useRender, wrapInArray } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport { filterInputProps, makeVInputProps, VInput } from '@/components/VInput/VInput'\n\nexport const VFileInput = defineComponent({\n  name: 'VFileInput',\n\n  inheritAttrs: false,\n\n  props: {\n    chips: Boolean,\n    counter: Boolean,\n    counterSizeString: {\n      type: String,\n      default: '$vuetify.fileInput.counterSize',\n    },\n    counterString: {\n      type: String,\n      default: '$vuetify.fileInput.counter',\n    },\n    multiple: Boolean,\n    hint: String,\n    persistentHint: Boolean,\n    placeholder: String,\n    showSize: {\n      type: [Boolean, Number] as PropType<boolean | 1000 | 1024>,\n      default: false,\n      validator: (v: boolean | number) => {\n        return (\n          typeof v === 'boolean' ||\n          [1000, 1024].includes(v)\n        )\n      },\n    },\n\n    ...makeVInputProps(),\n\n    prependIcon: {\n      type: String,\n      default: '$file',\n    },\n    modelValue: {\n      type: Array as PropType<File[]>,\n      default: () => ([]),\n      validator: (val: any) => {\n        return wrapInArray(val).every(v => v != null && typeof v === 'object')\n      },\n    },\n\n    ...makeVFieldProps({ clearable: true }),\n  },\n\n  emits: {\n    'click:clear': (e: MouseEvent) => true,\n    'click:control': (e: MouseEvent) => true,\n    'update:modelValue': (files: File[]) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { t } = useLocale()\n    const model = useProxiedModel(props, 'modelValue')\n    const base = computed(() => typeof props.showSize !== 'boolean' ? props.showSize : undefined)\n    const totalBytes = computed(() => (model.value ?? []).reduce((bytes, { size = 0 }) => bytes + size, 0))\n    const totalBytesReadable = computed(() => humanReadableFileSize(totalBytes.value, base.value))\n\n    const fileNames = computed(() => (model.value ?? []).map(file => {\n      const { name = '', size = 0 } = file\n\n      return !props.showSize\n        ? name\n        : `${name} (${humanReadableFileSize(size, base.value)})`\n    }))\n\n    const counterValue = computed(() => {\n      const fileCount = model.value?.length ?? 0\n      if (props.showSize) return t(props.counterSizeString, fileCount, totalBytesReadable.value)\n      else return t(props.counterString, fileCount)\n    })\n    const vInputRef = ref<VInput>()\n    const vFieldRef = ref<VInput>()\n    const isFocused = ref(false)\n    const inputRef = ref<HTMLInputElement>()\n    const messages = computed(() => {\n      return props.messages.length\n        ? props.messages\n        : (props.persistentHint) ? props.hint : ''\n    })\n    function onFocus () {\n      if (inputRef.value !== document.activeElement) {\n        inputRef.value?.focus()\n      }\n\n      if (!isFocused.value) {\n        isFocused.value = true\n      }\n    }\n    function onControlClick (e: MouseEvent) {\n      inputRef.value?.click()\n\n      emit('click:control', e)\n    }\n    function onClear (e: MouseEvent) {\n      e.stopPropagation()\n\n      onFocus()\n\n      nextTick(() => {\n        model.value = []\n\n        if (inputRef?.value) {\n          inputRef.value.value = ''\n        }\n\n        emit('click:clear', e)\n      })\n    }\n\n    useRender(() => {\n      const hasCounter = !!(slots.counter || props.counter || counterValue.value)\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs)\n      const [{ modelValue: _, ...inputProps }] = filterInputProps(props)\n      const [fieldProps] = filterFieldProps(props)\n\n      return (\n        <VInput\n          ref={ vInputRef }\n          v-model={ model.value }\n          class=\"v-file-input\"\n          { ...rootAttrs }\n          { ...inputProps }\n          onClick:prepend={ onControlClick }\n          messages={ messages.value }\n        >\n          {{\n            ...slots,\n            default: ({\n              isDisabled,\n              isDirty,\n              isReadonly,\n              isValid,\n            }) => (\n              <VField\n                ref={ vFieldRef }\n                prepend-icon={ props.prependIcon }\n                onClick:control={ onControlClick }\n                onClick:clear={ onClear }\n                { ...fieldProps }\n                active={ isDirty.value || isFocused.value }\n                dirty={ isDirty.value }\n                focused={ isFocused.value }\n                error={ isValid.value === false }\n              >\n                {{\n                  ...slots,\n                  default: ({\n                    props: { class: fieldClass, ...slotProps },\n                  }) => (\n                    <>\n                      <input\n                        ref={ inputRef }\n                        type=\"file\"\n                        readonly={ isReadonly.value }\n                        disabled={ isDisabled.value }\n                        multiple={ props.multiple }\n                        name={ props.name }\n                        onClick={ e => {\n                          e.stopPropagation()\n\n                          onFocus()\n                        } }\n                        onChange={ e => {\n                          if (!e.target) return\n\n                          const target = e.target as HTMLInputElement\n                          model.value = [...target.files ?? []]\n                        } }\n                        onFocus={ onFocus }\n                        onBlur={ () => (isFocused.value = false) }\n                        { ...slotProps }\n                        { ...inputAttrs }\n                      />\n\n                      { model.value.length > 0 && (\n                        <div class={ fieldClass }>\n                          { slots.selection ? slots.selection({\n                            fileNames: fileNames.value,\n                            totalBytes: totalBytes.value,\n                            totalBytesReadable: totalBytesReadable.value,\n                          })\n                          : props.chips ? fileNames.value.map(text => (\n                            <VChip\n                              key={ text }\n                              size=\"small\"\n                              color={ props.color }\n                            >{ text }</VChip>\n                          ))\n                          : fileNames.value.join(', ') }\n                        </div>\n                      ) }\n                    </>\n                  ),\n                }}\n              </VField>\n            ),\n            details: hasCounter ? () => (\n              <>\n                <span />\n\n                <VCounter\n                  value={ counterValue.value }\n                  v-slots={ slots.counter }\n                />\n              </>\n            ) : undefined,\n          }}\n        </VInput>\n      )\n    })\n\n    return useForwardRef({}, vInputRef, vFieldRef, inputRef)\n  },\n})\n\nexport type VFileInput = InstanceType<typeof VFileInput>\n"]},"metadata":{},"sourceType":"module"}